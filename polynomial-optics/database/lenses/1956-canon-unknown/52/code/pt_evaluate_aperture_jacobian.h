case canon__unknown__1956__52mm:
{
const double dx00 =  + 0.620986  + 0.0240883 *lambda + -0.243125 *lens_ipow(dy, 2) + -0.605095 *lens_ipow(dx, 2) + -0.000861823 *y*dy + 0.178332 *lens_ipow(dy, 4) + -4.25673e-08 *lens_ipow(y, 4) + -0.012144 *x*dx*lens_ipow(dy, 2) + -2.6535e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -8.87312e-06 *lens_ipow(x, 3)*dx + -1.04011e-09 *lens_ipow(x, 6)+0.0f;
const double dx01 =  + -0.390853 *dx*dy + -0.000861823 *x*dy + -1.70269e-07 *x*lens_ipow(y, 3) + -1.769e-07 *lens_ipow(x, 3)*y + -3.76908 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + -3.00818 *lens_ipow(dx, 5)*dy + -0.124044 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.082718 *y*lens_ipow(dx, 5)+0.0f;
const double dx02 =  + 35.8226  + 0.952585 *lambda + -22.4048 *lens_ipow(dy, 2) + -67.4108 *lens_ipow(dx, 2) + -0.390853 *y*dy + -1.21019 *x*dx + 8.03683 *lens_ipow(dy, 4) + 30.3669 *lens_ipow(dx, 4) + -0.00607202 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -2.21828e-06 *lens_ipow(x, 4) + -11.3072 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -15.0409 *y*lens_ipow(dx, 4)*dy + -0.186066 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.206795 *lens_ipow(y, 2)*lens_ipow(dx, 4)+0.0f;
const double dx03 =  + -44.8095 *dx*dy + -0.390853 *y*dx + -0.486249 *x*dy + -0.000861823 *x*y + 32.1473 *dx*lens_ipow(dy, 3) + 0.713326 *x*lens_ipow(dy, 3) + -0.012144 *lens_ipow(x, 2)*dx*dy + -11.3072 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -3.00818 *y*lens_ipow(dx, 5) + -0.124044 *lens_ipow(y, 2)*lens_ipow(dx, 3)*dy+0.0f;
const double dx04 =  + 0.952585 *dx + 0.0240883 *x+0.0f;
const double dx10 =  + -0.400865 *dx*dy + -0.00113277 *y*dx + -0.672725 *lens_ipow(dx, 3)*dy + -0.0206158 *x*lens_ipow(dx, 2)*dy + -1.82757e-07 *x*lens_ipow(y, 3) + -1.96074e-07 *lens_ipow(x, 3)*y + -2.46069 *dx*lens_ipow(dy, 5) + -0.0806482 *x*lens_ipow(dy, 5)+0.0f;
const double dx11 =  + 0.621162  + 0.0241916 *lambda + -0.582118 *lens_ipow(dy, 2) + -0.251728 *lens_ipow(dx, 2) + -0.00113277 *x*dx + -0.45529 *lens_ipow(dy, 4) + -0.453469 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.187129 *lens_ipow(dx, 4) + -0.0188155 *y*lens_ipow(dy, 3) + -0.0234832 *y*lens_ipow(dx, 2)*dy + -1.80115e-07 *lens_ipow(y, 4) + -2.74136e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -4.90184e-08 *lens_ipow(x, 4)+0.0f;
const double dx12 =  + -45.9583 *dx*dy + -0.503457 *y*dx + -0.400865 *x*dy + -0.00113277 *x*y + -0.906939 *y*dx*lens_ipow(dy, 2) + 0.748514 *y*lens_ipow(dx, 3) + -0.0234832 *lens_ipow(y, 2)*dx*dy + -2.01818 *x*lens_ipow(dx, 2)*dy + -0.0206158 *lens_ipow(x, 2)*dx*dy + -2.46069 *x*lens_ipow(dy, 5)+0.0f;
const double dx13 =  + 35.8327  + 0.951909 *lambda + -66.1492 *lens_ipow(dy, 2) + -22.9791 *lens_ipow(dx, 2) + -1.16424 *y*dy + -0.400865 *x*dx + -1.82116 *y*lens_ipow(dy, 3) + -0.906939 *y*lens_ipow(dx, 2)*dy + -0.0282233 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.0117416 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.672725 *x*lens_ipow(dx, 3) + -0.0103079 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -12.3034 *x*dx*lens_ipow(dy, 4) + -0.20162 *lens_ipow(x, 2)*lens_ipow(dy, 4)+0.0f;
const double dx14 =  + 0.951909 *dy + 0.0241916 *y+0.0f;
const double dx20 =  + -0.0199858  + 0.00458947 *lambda + -0.00320583 *lens_ipow(lambda, 2) + -0.011121 *lens_ipow(dy, 2) + -0.0379634 *lens_ipow(dx, 2) + -0.000324638 *y*dy + -6.85564e-06 *lens_ipow(y, 2) + -0.00119877 *x*dx + -2.62235e-05 *lens_ipow(x, 2) + -4.84101e-09 *lens_ipow(y, 4) + -2.64099e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000834145 *y*lens_ipow(dx, 2)*dy*lambda + 0.270484 *lens_ipow(dx, 6) + -2.14432e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2)+0.0f;
const double dx21 =  + -0.0216022 *dx*dy + -0.000344862 *y*dx + -0.000324638 *x*dy + -1.37113e-05 *x*y + -1.9364e-08 *x*lens_ipow(y, 3) + -1.76066e-08 *lens_ipow(x, 3)*y + -0.000834145 *x*lens_ipow(dx, 2)*dy*lambda + 0.0044336 *y*lens_ipow(dx, 5)+0.0f;
const double dx22 =  + 0.516936  + -0.279581 *lens_ipow(dy, 2) + -1.31885 *lens_ipow(dx, 2) + -0.0216022 *y*dy + -0.000172431 *lens_ipow(y, 2) + -0.0759267 *x*dx + -0.000599383 *lens_ipow(x, 2) + -0.00166829 *x*y*dx*dy*lambda + 20.2646 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 62.8944 *lens_ipow(dx, 6) + 0.011084 *lens_ipow(y, 2)*lens_ipow(dx, 4) + 1.6229 *x*lens_ipow(dx, 5) + -8.57726e-08 *lens_ipow(x, 5)*dx+0.0f;
const double dx23 =  + -0.559162 *dx*dy + -0.0216022 *y*dx + -0.0222421 *x*dy + -0.000324638 *x*y + -0.000834145 *x*y*lens_ipow(dx, 2)*lambda + 27.0195 *lens_ipow(dx, 3)*lens_ipow(dy, 3)+0.0f;
const double dx24 =  + 0.00458947 *x + -0.00641166 *x*lambda + -0.000834145 *x*y*lens_ipow(dx, 2)*dy+0.0f;
const double dx30 =  + -0.0213801 *dx*dy + -0.000340161 *y*dx + -0.000378398 *x*dy + -1.7949e-05 *x*y + -0.0239418 *y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.55051e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 1.61544e-09 *x*lens_ipow(y, 4)*dy + 5.47065e-06 *lens_ipow(x, 3)*lens_ipow(dy, 3)+0.0f;
const double dx31 =  + -0.0199763  + 0.00484436 *lambda + -0.00335392 *lens_ipow(lambda, 2) + -0.0398091 *lens_ipow(dy, 2) + -0.0117977 *lens_ipow(dx, 2) + -0.00127621 *y*dy + -2.8005e-05 *lens_ipow(y, 2) + -0.000340161 *x*dx + -8.9745e-06 *lens_ipow(x, 2) + 0.274442 *lens_ipow(dy, 6) + -1.78114e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.0239418 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.55051e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*dy + 3.23089e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy+0.0f;
const double dx32 =  + -0.672691 *dx*dy + -0.0235955 *y*dx + -0.0213801 *x*dy + -0.000340161 *x*y + 96.3541 *lens_ipow(dx, 3)*lens_ipow(dy, 3) + -0.0718253 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.55051e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy+0.0f;
const double dx33 =  + 0.520257  + -1.45989 *lens_ipow(dy, 2) + -0.336346 *lens_ipow(dx, 2) + -0.0796181 *y*dy + -0.000638105 *lens_ipow(y, 2) + -0.0213801 *x*dx + -0.000189199 *lens_ipow(x, 2) + 67.9983 *lens_ipow(dy, 6) + 72.2656 *lens_ipow(dx, 4)*lens_ipow(dy, 2) + 1.64665 *y*lens_ipow(dy, 5) + -7.12458e-08 *lens_ipow(y, 5)*dy + -0.0478835 *x*y*lens_ipow(dx, 3)*dy + 7.75256e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 8.07722e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + 4.10299e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2)+0.0f;
const double dx34 =  + 0.00484436 *y + -0.00670784 *y*lambda+0.0f;
const double dx40 =  + 0.00071896 *dx + -0.114663 *dx*lens_ipow(dy, 2) + -0.119195 *lens_ipow(dx, 3) + -0.00229572 *y*dx*dy + -9.49607e-06 *lens_ipow(y, 2)*dx + -0.00134826 *x*lens_ipow(dy, 2) + -0.00388436 *x*lens_ipow(dx, 2) + -1.8245e-05 *x*y*dy + -3.16305e-05 *lens_ipow(x, 2)*dx+0.0f;
const double dx41 =  + -0.0946806 *lens_ipow(dy, 3) + -0.114442 *lens_ipow(dx, 2)*dy + -0.00236964 *y*lens_ipow(dy, 2) + -0.00136845 *y*lens_ipow(dx, 2) + -0.00229572 *x*dx*dy + -1.89921e-05 *x*y*dx + -9.12248e-06 *lens_ipow(x, 2)*dy + 6.95942e-10 *lens_ipow(y, 5)+0.0f;
const double dx42 =  + 0.0917908 *dx + 0.00071896 *x + -9.88143 *dx*lens_ipow(dy, 2) + -10.1843 *lens_ipow(dx, 3) + -0.228885 *y*dx*dy + -0.00136845 *lens_ipow(y, 2)*dx + -0.114663 *x*lens_ipow(dy, 2) + -0.357585 *x*lens_ipow(dx, 2) + -0.00229572 *x*y*dy + -9.49607e-06 *x*lens_ipow(y, 2) + -0.00388436 *lens_ipow(x, 2)*dx + -1.05435e-05 *lens_ipow(x, 3)+0.0f;
const double dx43 =  + 0.0546903 *dy + -8.96315 *lens_ipow(dy, 3) + -9.88143 *lens_ipow(dx, 2)*dy + -0.284042 *y*lens_ipow(dy, 2) + -0.114442 *y*lens_ipow(dx, 2) + -0.00236964 *lens_ipow(y, 2)*dy + -0.229326 *x*dx*dy + -0.00229572 *x*y*dx + -0.00134826 *lens_ipow(x, 2)*dy + -9.12248e-06 *lens_ipow(x, 2)*y+0.0f;
const double dx44 =  + 0.154785  + -0.212243 *lambda+0.0f;
} break;
