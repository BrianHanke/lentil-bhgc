case zeiss__biotar__1927__45mm:
{
out[0] =  + 44.888 *dx + 0.175085 *x + 0.0749963 *x*lambda + -17.4403 *dx*lens_ipow(dy, 2) + -17.2603 *lens_ipow(dx, 3) + 0.744652 *x*lens_ipow(dy, 2) + 0.032012 *x*y*dy + 0.0409789 *lens_ipow(x, 2)*dx + 0.841872 *y*dx*dy*lambda + 0.0227466 *lens_ipow(y, 2)*dx*lambda + 5.14921 *x*lens_ipow(dx, 2)*lambda + -5.49513 *x*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.0325736 *x*y*lens_ipow(dy, 3) + -0.000118146 *x*lens_ipow(y, 3)*dy + -2.52609e-06 *x*lens_ipow(y, 4) + 0.0381298 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.000118812 *lens_ipow(x, 3)*y*dy + -5.05733e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + -0.000101332 *lens_ipow(x, 4)*dx + -2.42526e-06 *lens_ipow(x, 5) + 0.0997362 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + -3.85654e-05 *lens_ipow(y, 4)*dx*lambda + 0.248127 *x*y*lens_ipow(dx, 2)*dy*lambda + 0.325284 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + -0.000308626 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda + 0.00503558 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lambda + 17.3921 *x*lens_ipow(dx, 4)*lens_ipow(lambda, 5) + 2.02642e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*dx*lens_ipow(lambda, 2);
out[1] =  + 44.8341 *dy + 0.1763 *y + 0.073774 *y*lambda + -17.0214 *lens_ipow(dy, 3) + -15.2345 *lens_ipow(dx, 2)*dy + 0.52584 *x*dx*dy + 0.0327674 *x*y*dx + 0.013757 *lens_ipow(x, 2)*dy + 4.88477 *y*lens_ipow(dy, 2)*lambda + 2.7897 *y*lens_ipow(dx, 2)*lambda + 0.118511 *lens_ipow(y, 2)*dy*lambda + -4.72977 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2.58274 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.0879407 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.49026e-06 *lens_ipow(y, 5) + 0.140509 *x*y*dx*lens_ipow(dy, 2) + -0.000132632 *x*lens_ipow(y, 3)*dx + -5.63105e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.116976 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + -0.000351679 *lens_ipow(y, 4)*dy*lambda + -0.000517866 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda + 0.319544 *lens_ipow(y, 2)*lens_ipow(dx, 4)*dy + 0.000402832 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 0.000238521 *lens_ipow(x, 4)*lens_ipow(dx, 2)*dy + -4.22398e-07 *lens_ipow(x, 5)*y*dx + -1.02277e-07 *lens_ipow(x, 6)*dy + -9.47748e-09 *lens_ipow(x, 6)*y + 0.000314447 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 3);
out[2] =  + -1.19937 *dx + -0.0278216 *x + -0.00103274 *x*lambda + 0.600296 *lens_ipow(dx, 3) + -0.0158406 *y*dx*dy + 0.000109244 *lens_ipow(y, 2)*dx + -0.000402087 *x*y*dy + 1.67848e-05 *x*lens_ipow(y, 2) + 1.64853e-05 *lens_ipow(x, 3) + -0.316844 *dx*lens_ipow(dy, 2)*lambda + -0.0723167 *x*lens_ipow(dy, 2)*lambda + -0.00134818 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.0645981 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.00385923 *x*y*lens_ipow(dx, 2)*dy + -4.51311e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000743949 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.112404 *x*lens_ipow(dx, 4)*lambda + -0.0089563 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + -0.000179108 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lambda + 4.03396e-09 *lens_ipow(x, 5)*y*dy + 1.99157e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + 4.97113e-11 *lens_ipow(x, 7) + -2.74625e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy*lambda + 2.11325e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx + 256.409 *lens_ipow(dx, 5)*lens_ipow(dy, 4)*lambda + 4.61452e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dy*lambda + 2.32134e-15 *lens_ipow(x, 3)*lens_ipow(y, 8) + 1.91328e-15 *lens_ipow(x, 7)*lens_ipow(y, 4);
out[3] =  + -1.19703 *dy + -0.0284469 *y + 0.599775 *lens_ipow(dy, 3) + 1.33644 *lens_ipow(dx, 2)*dy + 2.31611e-05 *lens_ipow(y, 3) + 0.0342269 *x*dx*dy + -8.02169e-05 *x*y*dx + 0.000310942 *lens_ipow(x, 2)*dy + 1.77211e-05 *lens_ipow(x, 2)*y + -0.0196635 *y*lens_ipow(dx, 2)*lambda + -1.10657e-05 *lens_ipow(y, 3)*lambda + -4.32688e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -3.96943e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 2.10834e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.0054793 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + 1.49096e-06 *lens_ipow(y, 4)*dy*lambda + -0.00462768 *x*y*dx*lens_ipow(dy, 2)*lambda + -7.25225e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lambda + -0.135242 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 0.061981 *y*lens_ipow(dx, 4)*lens_ipow(lambda, 2) + -0.000514103 *lens_ipow(y, 2)*dy*lens_ipow(lambda, 4) + 5.74473e-11 *lens_ipow(y, 7) + 0.000103113 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -2.50154e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lambda + 9.6939e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + 1.22325e-11 *lens_ipow(x, 7)*y*dx + 2.92267e-13 *lens_ipow(x, 8)*y + -3.42629e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy*lambda;
out_transmittance =  + 0.443274  + 0.713433 *lambda + -0.986532 *lens_ipow(lambda, 2) + 0.480204 *lens_ipow(lambda, 3) + -0.78414 *lens_ipow(dy, 4) + -2.05106 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.781365 *lens_ipow(dx, 4) + -0.0654235 *y*lens_ipow(dy, 3) + -0.0649382 *y*lens_ipow(dx, 2)*dy + -0.00241836 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000835641 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -4.05091e-05 *lens_ipow(y, 3)*dy + -2.63395e-07 *lens_ipow(y, 4) + -0.065599 *x*dx*lens_ipow(dy, 2) + -0.0649536 *x*lens_ipow(dx, 3) + -0.00313689 *x*y*dx*dy + -4.04433e-05 *x*lens_ipow(y, 2)*dx + -0.000848759 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.00240156 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -4.06662e-05 *lens_ipow(x, 2)*y*dy + -5.81228e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -4.02804e-05 *lens_ipow(x, 3)*dx + -2.61971e-07 *lens_ipow(x, 4) + -0.997577 *lens_ipow(dy, 6) + -1.00515 *lens_ipow(dx, 6) + -5.66603e-13 *lens_ipow(y, 8) + -4.67549e-12 *lens_ipow(x, 4)*lens_ipow(y, 4) + -5.55575e-13 *lens_ipow(x, 8);
} break;
