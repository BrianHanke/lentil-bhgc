case zeiss__biotar__1927__85mm:
{
out[0] =  + 84.4101 *dx + 0.151067 *x + 1.20989 *dx*lambda + 0.19879 *x*lambda + -32.8839 *dx*lens_ipow(dy, 2) + -41.6454 *lens_ipow(dx, 3) + 0.487389 *y*dx*dy + 0.00635323 *lens_ipow(y, 2)*dx + -0.131763 *x*lens_ipow(lambda, 2) + 0.737916 *x*lens_ipow(dy, 2) + 0.743442 *x*lens_ipow(dx, 2) + 0.0180242 *x*y*dy + 0.0158024 *lens_ipow(x, 2)*dx + 53.0286 *lens_ipow(dx, 5) + 0.0242103 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 4.61444 *x*lens_ipow(dx, 4) + 0.0739513 *x*y*lens_ipow(dx, 2)*dy + -1.82448e-05 *x*lens_ipow(y, 3)*dy + -1.56349e-07 *x*lens_ipow(y, 4) + 0.205256 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -2.67964e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 0.00267516 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -1.99492e-05 *lens_ipow(x, 3)*y*dy + -4.6218e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + -2.40724e-07 *lens_ipow(x, 5) + 0.100587 *x*y*lens_ipow(dy, 5) + 0.263679 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.299207 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3);
out[1] =  + 84.4159 *dy + 0.189842 *y + 1.1865 *dy*lambda + 0.0536881 *y*lambda + -41.417 *lens_ipow(dy, 3) + -32.9316 *lens_ipow(dx, 2)*dy + 0.758543 *y*lens_ipow(dy, 2) + 0.0160385 *lens_ipow(y, 2)*dy + 0.502996 *x*dx*dy + 0.0165435 *x*y*dx + 0.00639045 *lens_ipow(x, 2)*dy + 2.7547 *y*lens_ipow(dx, 2)*lambda + 51.741 *lens_ipow(dy, 5) + 4.48828 *y*lens_ipow(dy, 4) + -2.53308 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 0.201681 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 0.0277082 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.00263178 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -2.34845e-07 *lens_ipow(y, 5) + 0.0764659 *x*y*dx*lens_ipow(dy, 2) + 0.0335998 *x*y*lens_ipow(dx, 3) + -2.06717e-05 *x*lens_ipow(y, 3)*dx + 0.0278371 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.000522063 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + -2.73537e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -4.84962e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.21751e-05 *lens_ipow(x, 3)*y*dx + -1.5883e-07 *lens_ipow(x, 4)*y;
out[2] =  + -1.19337 *dx + -0.0141689 *x + -0.00219212 *x*lambda + -0.31858 *dx*lens_ipow(dy, 2) + 0.543992 *lens_ipow(dx, 3) + -0.00977878 *y*dx*dy + 1.71362e-05 *lens_ipow(y, 2)*dx + 0.00153435 *x*lens_ipow(lambda, 2) + -0.0116307 *x*lens_ipow(dy, 2) + -0.00334245 *x*lens_ipow(dx, 2) + -0.000144243 *x*y*dy + 1.94085e-06 *x*lens_ipow(y, 2) + -3.2479e-05 *lens_ipow(x, 2)*dx + 2.02825e-06 *lens_ipow(x, 3) + -0.000471321 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -0.000522503 *x*y*lens_ipow(dy, 3) + -0.00104484 *x*y*lens_ipow(dx, 2)*dy + -7.0357e-06 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000436432 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 1.45248e-07 *lens_ipow(x, 3)*y*dy + -0.042061 *x*lens_ipow(dx, 4)*lambda + -0.00165685 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + 4.71748 *dx*lens_ipow(dy, 6) + 13.6419 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + 9.16676 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 7.0025e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + 9.93932e-12 *lens_ipow(x, 5)*lens_ipow(y, 2) + -4.40633e-08 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(lambda, 2);
out[3] =  + -1.19119 *dy + -0.0142452 *y + -0.00620803 *dy*lambda + -0.00207664 *y*lambda + 0.562043 *lens_ipow(dy, 3) + 1.38318 *lens_ipow(dx, 2)*dy + 0.0013948 *y*lens_ipow(lambda, 2) + -0.00123975 *y*lens_ipow(dy, 2) + -0.00591907 *y*lens_ipow(dx, 2) + -2.17774e-05 *lens_ipow(y, 2)*dy + 2.27757e-06 *lens_ipow(y, 3) + 0.0183511 *x*dx*dy + -5.42478e-05 *x*y*dx + 8.63408e-05 *lens_ipow(x, 2)*dy + 2.25411e-06 *lens_ipow(x, 2)*y + -0.43868 *lens_ipow(dx, 4)*dy + -0.031619 *y*lens_ipow(dy, 4) + 0.00664437 *y*lens_ipow(dx, 4) + -0.00111397 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.000206566 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -8.89283e-06 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -4.2258e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -0.000446908 *x*y*dx*lens_ipow(dy, 2) + 0.00363951 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 4.05218e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 2.76339e-14 *lens_ipow(x, 4)*lens_ipow(y, 5) + 9.38405e-08 *lens_ipow(x, 5)*dx*lens_ipow(dy, 3) + 1.05149e-12 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx;
out_transmittance =  + 0.446659  + 0.695847 *lambda + -0.96 *lens_ipow(lambda, 2) + 0.0404663 *lens_ipow(dy, 2) + 0.0344883 *lens_ipow(dx, 2) + 0.000767805 *y*dy + 0.000889958 *x*dx + 0.466489 *lens_ipow(lambda, 3) + -1.1846 *lens_ipow(dy, 4) + -2.35205 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.13233 *lens_ipow(dx, 4) + -0.0443759 *y*lens_ipow(dy, 3) + -0.043916 *y*lens_ipow(dx, 2)*dy + -0.000941243 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000299905 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -8.83212e-06 *lens_ipow(y, 3)*dy + -1.05976e-08 *lens_ipow(y, 4) + -0.0439537 *x*dx*lens_ipow(dy, 2) + -0.0479772 *x*lens_ipow(dx, 3) + -0.00121497 *x*y*dx*dy + -8.23227e-06 *x*lens_ipow(y, 2)*dx + -0.000299351 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000930743 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -8.21141e-06 *lens_ipow(x, 2)*y*dy + -8.89294e-06 *lens_ipow(x, 3)*dx + 0.0240582 *x*lens_ipow(dx, 5) + -2.03375e-10 *lens_ipow(x, 2)*lens_ipow(y, 4) + -7.05119e-11 *lens_ipow(x, 6);
} break;
