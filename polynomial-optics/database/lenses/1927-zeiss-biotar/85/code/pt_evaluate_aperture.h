case zeiss__biotar__1927__85mm:
{
out[0] =  + 51.713 *dx + 0.441284 *x + 10.2785 *dx*lambda + 0.148614 *x*lambda + -7.01106 *dx*lens_ipow(lambda, 2) + -32.9667 *dx*lens_ipow(dy, 2) + -32.7629 *lens_ipow(dx, 3) + -0.000840311 *lens_ipow(y, 2)*dx + -0.101817 *x*lens_ipow(lambda, 2) + -0.20401 *x*lens_ipow(dy, 2) + -0.416408 *x*lens_ipow(dx, 2) + -8.56721e-05 *x*lens_ipow(y, 2) + -0.00289033 *lens_ipow(x, 2)*dx + -7.85774e-05 *lens_ipow(x, 3) + -0.0128199 *x*y*dy*lambda + -4.44835 *y*dx*dy*lens_ipow(lambda, 2) + 0.0114289 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.0300798 *x*y*lens_ipow(dx, 2)*dy + 0.000178463 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.00021845 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -5.29765e-06 *lens_ipow(x, 4)*dx + 10.8821 *y*dx*dy*lens_ipow(lambda, 3) + 0.025116 *x*y*dy*lens_ipow(lambda, 3) + -7.37927 *y*dx*dy*lens_ipow(lambda, 4) + 3.51607 *x*lens_ipow(dx, 2)*lens_ipow(dy, 4) + 9.08072e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + -0.0290931 *x*y*dy*lens_ipow(lambda, 6) + -1.46712e-15 *lens_ipow(x, 9)*lens_ipow(y, 2);
out[1] =  + 51.7129 *dy + 0.44183 *y + 10.2789 *dy*lambda + 0.148753 *y*lambda + -7.01485 *dy*lens_ipow(lambda, 2) + -32.8227 *lens_ipow(dy, 3) + -33.0125 *lens_ipow(dx, 2)*dy + -0.102029 *y*lens_ipow(lambda, 2) + -0.460732 *y*lens_ipow(dy, 2) + -0.232539 *y*lens_ipow(dx, 2) + -0.00372251 *lens_ipow(y, 2)*dy + -7.9245e-05 *lens_ipow(y, 3) + -0.227084 *x*dx*dy + -0.0032596 *x*y*dx + -0.000706094 *lens_ipow(x, 2)*dy + -8.09562e-05 *lens_ipow(x, 2)*y + 0.360857 *y*lens_ipow(dy, 4) + 0.557035 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.181487 *y*lens_ipow(dx, 4) + 0.013793 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -2.76262e-06 *lens_ipow(y, 4)*dy + 0.0292298 *x*y*dx*lens_ipow(dy, 2) + -3.11841e-06 *x*lens_ipow(y, 3)*dx + 0.0145691 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.000153341 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 0.00019357 *lens_ipow(x, 3)*dx*dy + -1.15312e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -2.68142e-10 *lens_ipow(x, 2)*lens_ipow(y, 5);
out[2] =  + 0.466723 *dx + -0.0152564 *x + 0.00382526 *x*lambda + -0.212245 *dx*lens_ipow(dy, 2) + -0.202676 *lens_ipow(dx, 3) + -0.00846621 *y*dx*dy + -0.00253311 *x*lens_ipow(lambda, 2) + -0.00564783 *x*lens_ipow(dy, 2) + -0.00991514 *x*lens_ipow(dx, 2) + -5.56178e-05 *x*y*dy + -3.48935e-06 *x*lens_ipow(y, 2) + -3.47935e-06 *lens_ipow(x, 3) + -0.32708 *dx*lens_ipow(dy, 2)*lambda + -0.33638 *lens_ipow(dx, 3)*lambda + -0.000107629 *lens_ipow(y, 2)*dx*lambda + -0.0131278 *x*lens_ipow(dx, 2)*lambda + 1.0247 *dx*lens_ipow(dy, 4) + 2.16479 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 1.07072 *lens_ipow(dx, 5) + -0.0084067 *y*dx*dy*lens_ipow(lambda, 2) + -0.000867114 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 2) + 0.000257472 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + 0.00082837 *lens_ipow(x, 2)*dx*lens_ipow(lambda, 3) + -1.74716e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -7.88764e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -1.17317e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lambda + -7.35271e-07 *lens_ipow(x, 3)*y*dy*lens_ipow(lambda, 4) + -1.07866e-16 *lens_ipow(x, 7)*lens_ipow(y, 4);
out[3] =  + 0.466055 *dy + -0.0153095 *y + 0.00397262 *y*lambda + -0.169718 *lens_ipow(dx, 2)*dy + -0.00258722 *y*lens_ipow(lambda, 2) + -0.0137699 *y*lens_ipow(dy, 2) + -0.00370832 *y*lens_ipow(dx, 2) + -3.5391e-06 *lens_ipow(y, 3) + -0.00531222 *x*dx*dy + -3.41582e-06 *lens_ipow(x, 2)*y + -0.779461 *lens_ipow(dy, 3)*lambda + -0.406725 *lens_ipow(dx, 2)*dy*lambda + -0.00460011 *y*lens_ipow(dx, 2)*lambda + -0.000255953 *lens_ipow(y, 2)*dy*lambda + -0.0109484 *x*dx*dy*lambda + -0.00012923 *x*y*dx*lambda + -0.000110395 *lens_ipow(x, 2)*dy*lambda + 2.20486 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.09732 *lens_ipow(dx, 4)*dy + 2.44252 *lens_ipow(dy, 5)*lambda + 0.000710586 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + -1.12101e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2)*lambda + 0.0560153 *dy*lens_ipow(lambda, 6) + -0.0691368 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 4) + 0.0502876 *y*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + -4.97097e-10 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy*lambda + 0.084089 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 6) + -3.30864e-14 *lens_ipow(x, 4)*lens_ipow(y, 5);
out_transmittance =  + 0.657195  + 0.498661 *lambda + -0.689814 *lens_ipow(lambda, 2) + -0.000132078 *y*dy + -0.000192246 *x*dx + 0.335763 *lens_ipow(lambda, 3) + -0.555912 *lens_ipow(dy, 4) + -1.18193 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.560067 *lens_ipow(dx, 4) + -0.00587508 *y*lens_ipow(dy, 3) + -0.00576358 *y*lens_ipow(dx, 2)*dy + -9.70217e-09 *lens_ipow(y, 4) + -0.00628104 *x*dx*lens_ipow(dy, 2) + -0.00360662 *x*lens_ipow(dx, 3) + -1.21136e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -9.62177e-09 *lens_ipow(x, 4) + -0.0211013 *x*lens_ipow(dx, 5) + -1.77852e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -2.07547e-09 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -5.3478 *lens_ipow(dy, 8) + -34.5198 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -4.90205 *lens_ipow(dx, 8) + -0.0664344 *y*lens_ipow(dy, 7) + -0.00470948 *lens_ipow(y, 2)*lens_ipow(dx, 8) + -137.622 *lens_ipow(dx, 2)*lens_ipow(dy, 8)*lambda + -133.573 *lens_ipow(dx, 8)*lens_ipow(dy, 2)*lambda + -1.00972 *y*lens_ipow(dx, 8)*dy*lambda + 0.174744 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 5)*lambda;
} break;
