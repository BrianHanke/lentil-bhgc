case zeiss__biotar__1927__58mm:
{
out[0] =  + 57.8836 *dx + 0.216995 *x + -22.4452 *dx*lens_ipow(dy, 2) + -22.0788 *lens_ipow(dx, 3) + 0.468049 *y*dx*dy + 0.00946094 *lens_ipow(y, 2)*dx + 0.747064 *x*lens_ipow(dy, 2) + 0.724429 *x*lens_ipow(dx, 2) + 0.0248833 *x*y*dy + -0.000286335 *lens_ipow(x, 3) + 0.900938 *x*lens_ipow(dx, 2)*lambda + 0.060704 *lens_ipow(x, 2)*dx*lambda + 0.0401442 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -8.78612e-06 *lens_ipow(y, 4)*dx + 0.0258419 *x*y*lens_ipow(dy, 3) + 0.105271 *x*y*lens_ipow(dx, 2)*dy + -5.49865e-05 *x*lens_ipow(y, 3)*dy + -8.98589e-07 *x*lens_ipow(y, 4) + 0.0338703 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 0.000921186 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + -5.55245e-05 *lens_ipow(x, 3)*y*dy + -1.84013e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + -4.09304e-07 *lens_ipow(x, 5) + 0.125955 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + -0.00023695 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda + 0.000183838 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2) + -0.000198741 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 2) + -4.52353e-06 *lens_ipow(x, 5)*lens_ipow(lambda, 4);
out[1] =  + 57.7837 *dy + 0.180428 *y + 0.0666385 *y*lambda + -22.2611 *lens_ipow(dy, 3) + -21.062 *lens_ipow(dx, 2)*dy + 0.774109 *y*lens_ipow(dx, 2) + 0.513103 *x*dx*dy + 0.0251013 *x*y*dx + 0.0110586 *lens_ipow(x, 2)*dy + 2.66025 *y*lens_ipow(dy, 2)*lambda + 0.0694739 *lens_ipow(y, 2)*dy*lambda + 0.0398798 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -9.08804e-07 *lens_ipow(y, 5) + 0.0347331 *x*y*lens_ipow(dx, 3) + -5.38321e-05 *x*lens_ipow(y, 3)*dx + -1.78561e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + -0.00117766 *lens_ipow(x, 3)*dx*dy + -6.14185e-05 *lens_ipow(x, 3)*y*dx + -1.94701e-05 *lens_ipow(x, 4)*dy + -9.87062e-07 *lens_ipow(x, 4)*y + 0.166306 *x*y*dx*lens_ipow(dy, 2)*lambda + -0.000149803 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda + -0.000328406 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 2) + -3.88988 *y*lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 0.953519 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 3) + -1.62921 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 5) + 7.89134e-07 *lens_ipow(y, 6)*dy*lens_ipow(lambda, 4) + -2.22017e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 4);
out[2] =  + -1.1998 *dx + -0.0220985 *x + 0.609686 *lens_ipow(dx, 3) + -0.0123531 *y*dx*dy + 6.1856e-05 *lens_ipow(y, 2)*dx + -0.000227015 *x*y*dy + 9.81594e-06 *x*lens_ipow(y, 2) + 1.03461e-05 *lens_ipow(x, 3) + -0.383611 *dx*lens_ipow(dy, 2)*lambda + -0.0499982 *x*lens_ipow(dy, 2)*lambda + -4.36029e-06 *x*lens_ipow(y, 2)*lambda + -3.82615e-06 *lens_ipow(x, 3)*lambda + -0.000796866 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.0425018 *x*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.0414607 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.00213636 *x*y*lens_ipow(dx, 2)*dy + -1.6654e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.00144111 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -1.41619e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -0.000883438 *x*y*lens_ipow(dy, 3)*lambda + 2.66853e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + 4.1789e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + 6.02747e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + -0.000265236 *x*lens_ipow(y, 2)*lens_ipow(dx, 4)*lambda + -1.2949e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 3)*lambda + 37.4523 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 2) + 1.00061e-13 *lens_ipow(x, 3)*lens_ipow(y, 6) + 46.4259 *dx*lens_ipow(dy, 8)*lens_ipow(lambda, 2);
out[3] =  + -1.1905 *dy + -0.0213552 *y + -0.000953858 *y*lambda + 0.44533 *lens_ipow(dy, 3) + 1.25857 *lens_ipow(dx, 2)*dy + -0.00562527 *y*lens_ipow(dy, 2) + -0.000137513 *lens_ipow(y, 2)*dy + 5.57975e-06 *lens_ipow(y, 3) + 0.0250628 *x*dx*dy + -7.86144e-05 *x*y*dx + 0.00016592 *lens_ipow(x, 2)*dy + 6.4795e-06 *lens_ipow(x, 2)*y + -0.0316259 *y*lens_ipow(dx, 2)*lambda + 0.663754 *lens_ipow(dy, 5) + 2.16867 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0323894 *y*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.000867966 *lens_ipow(y, 2)*lens_ipow(dy, 3) + 5.74335e-07 *lens_ipow(y, 4)*dy + 8.95372e-09 *lens_ipow(y, 5) + 0.0441461 *x*dx*lens_ipow(dy, 3) + 0.000392505 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 3.46888e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 1.29579e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 7.37512e-09 *lens_ipow(x, 4)*y + 0.091903 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -3.06804e-05 *lens_ipow(y, 3)*lens_ipow(dx, 2)*lambda + -0.00184302 *x*y*lens_ipow(dx, 3)*lambda + -5.93801e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lambda;
out_transmittance =  + 0.444879  + 0.703543 *lambda + -0.969112 *lens_ipow(lambda, 2) + 0.470111 *lens_ipow(lambda, 3) + -0.775357 *lens_ipow(dy, 4) + -1.81799 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.736146 *lens_ipow(dx, 4) + -0.0526484 *y*lens_ipow(dy, 3) + -0.00147502 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.81661e-05 *lens_ipow(y, 3)*dy + -9.32528e-08 *lens_ipow(y, 4) + -0.0522876 *x*dx*lens_ipow(dy, 2) + -0.000714165 *x*y*dx*dy + -0.000536531 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -1.87598e-05 *lens_ipow(x, 2)*y*dy + -2.28541e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.55822e-05 *lens_ipow(x, 3)*dx + -0.0910372 *y*lens_ipow(dx, 2)*dy*lambda + -0.000887901 *lens_ipow(y, 2)*lens_ipow(dx, 2)*lambda + -0.0970086 *x*lens_ipow(dx, 3)*lambda + -0.00212115 *x*y*dx*dy*lambda + -3.28219e-05 *x*lens_ipow(y, 2)*dx*lambda + -0.0028025 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + -1.14688 *lens_ipow(dy, 6) + -3.64076e-10 *lens_ipow(x, 6) + -4.29208 *lens_ipow(dx, 6)*lens_ipow(lambda, 2) + -8.13116e-08 *lens_ipow(x, 5)*dx*lens_ipow(lambda, 3) + -109.343 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lens_ipow(lambda, 2);
} break;
