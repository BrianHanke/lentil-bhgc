case zeiss__biotar__1927__58mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 35.1489 *begin_dx + 0.432266 *begin_x + 7.45465 *begin_dx*begin_lambda + 0.173489 *begin_x*begin_lambda + -5.14858 *begin_dx*lens_ipow(begin_lambda, 2) + -22.9437 *begin_dx*lens_ipow(begin_dy, 2) + -22.2915 *lens_ipow(begin_dx, 3) + -0.211488 *begin_y*begin_dx*begin_dy + -0.000830058 *lens_ipow(begin_y, 2)*begin_dx + -0.121485 *begin_x*lens_ipow(begin_lambda, 2) + -0.211797 *begin_x*lens_ipow(begin_dy, 2) + -0.397613 *begin_x*lens_ipow(begin_dx, 2) + -0.00545491 *begin_x*begin_y*begin_dy + -0.000172719 *begin_x*lens_ipow(begin_y, 2) + -0.00322696 *lens_ipow(begin_x, 2)*begin_dx + -0.000118282 *lens_ipow(begin_x, 3) + -0.535554 *begin_y*begin_dx*lens_ipow(begin_dy, 3) + -1.75879e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -0.000571988 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + -2.92895e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -2.23348e-05 *lens_ipow(begin_x, 4)*begin_dx + -2.91234e-07 *lens_ipow(begin_x, 5) + 0.0667704 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -1.43404e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dy*lens_ipow(begin_lambda, 2) + -4.16252e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -1.12545e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4) + -3.82538e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 3)*begin_lambda + 23.5194 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 6);
  pred_y =  + 36.7124 *begin_dy + 0.466997 *begin_y + 1.81549 *begin_dy*begin_lambda + 0.040883 *begin_y*begin_lambda + -22.9376 *lens_ipow(begin_dy, 3) + -23.3952 *lens_ipow(begin_dx, 2)*begin_dy + -0.416494 *begin_y*lens_ipow(begin_dy, 2) + -0.204649 *begin_y*lens_ipow(begin_dx, 2) + -0.00469986 *lens_ipow(begin_y, 2)*begin_dy + -0.000128385 *lens_ipow(begin_y, 3) + -0.00114048 *lens_ipow(begin_x, 2)*begin_dy + -0.000127148 *lens_ipow(begin_x, 2)*begin_y + -0.602487 *begin_x*begin_dx*begin_dy*begin_lambda + -0.014519 *begin_x*begin_y*begin_dx*begin_lambda + 0.0165266 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -1.32635e-05 *lens_ipow(begin_y, 4)*begin_dy + -2.40237e-07 *lens_ipow(begin_y, 5) + 0.036497 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.0233551 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -1.62499e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -5.18445e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 0.000354216 *lens_ipow(begin_x, 3)*begin_dx*begin_dy + -2.16555e-07 *lens_ipow(begin_x, 4)*begin_y + 0.0211471 *begin_x*begin_y*begin_dx*lens_ipow(begin_lambda, 3) + -1.97264e-05 *begin_x*lens_ipow(begin_y, 3)*begin_dx*begin_lambda + -1.38489e-05 *lens_ipow(begin_x, 3)*begin_y*begin_dx*begin_lambda + 0.859791 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 4) + 0.00557656 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 6);
  pred_dx =  + 0.479392 *begin_dx + -0.0227245 *begin_x + -0.0297226 *begin_dx*begin_lambda + 0.00687204 *begin_x*begin_lambda + -0.223243 *begin_dx*lens_ipow(begin_dy, 2) + -0.291729 *lens_ipow(begin_dx, 3) + -0.0168216 *begin_y*begin_dx*begin_dy + -0.000121514 *lens_ipow(begin_y, 2)*begin_dx + -0.00487729 *begin_x*lens_ipow(begin_lambda, 2) + -0.00922672 *begin_x*lens_ipow(begin_dy, 2) + -0.0263168 *begin_x*lens_ipow(begin_dx, 2) + -0.000163467 *begin_x*begin_y*begin_dy + -9.97029e-06 *begin_x*lens_ipow(begin_y, 2) + -9.21941e-06 *lens_ipow(begin_x, 3) + -0.00104114 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + 0.000916374 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 2) + -1.9967e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -9.63389e-09 *lens_ipow(begin_x, 5) + 11.4182 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 3.5299 *lens_ipow(begin_dx, 7) + -2.96752e-11 *begin_x*lens_ipow(begin_y, 6) + -1.82171e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -3.34341e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -6.09981e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + -3.55193e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + 1.91217e-10 *lens_ipow(begin_x, 6)*begin_y*begin_dx*begin_dy + -25.1971 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 7) + -6.41651e-16 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 4);
  pred_dy =  + 0.463472 *begin_dy + -0.023279 *begin_y + 0.00864086 *begin_y*begin_lambda + -0.357988 *lens_ipow(begin_dy, 3) + -0.00661105 *begin_y*lens_ipow(begin_lambda, 2) + -0.0233253 *begin_y*lens_ipow(begin_dy, 2) + -0.00796186 *begin_y*lens_ipow(begin_dx, 2) + -7.77032e-06 *lens_ipow(begin_y, 3) + -0.0148795 *begin_x*begin_dx*begin_dy + -0.000148897 *begin_x*begin_y*begin_dx + -9.76553e-06 *lens_ipow(begin_x, 2)*begin_y + -0.478026 *lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.000390996 *lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -0.000215594 *lens_ipow(begin_x, 2)*begin_dy*begin_lambda + 1.05347 *lens_ipow(begin_dy, 5) + -1.37849e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -4.77688e-07 *lens_ipow(begin_y, 4)*begin_dy + -1.40346e-08 *lens_ipow(begin_y, 5) + 0.0011623 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + 3.32433e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -1.92989e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 2.92165 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + -3.56736e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -0.112777 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*lens_ipow(begin_lambda, 2) + -2.61308e-11 *lens_ipow(begin_x, 6)*begin_y + -4.49244e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_lambda, 2) + -3.38712e-07 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_dy, 4) + -1.73323e-13 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 35.1489  + 7.45465 *begin_lambda + -5.14858 *lens_ipow(begin_lambda, 2) + -22.9437 *lens_ipow(begin_dy, 2) + -66.8746 *lens_ipow(begin_dx, 2) + -0.211488 *begin_y*begin_dy + -0.000830058 *lens_ipow(begin_y, 2) + -0.795227 *begin_x*begin_dx + -0.00322696 *lens_ipow(begin_x, 2) + -0.535554 *begin_y*lens_ipow(begin_dy, 3) + -1.75879e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -0.00114398 *lens_ipow(begin_x, 3)*begin_dx + -2.23348e-05 *lens_ipow(begin_x, 4) + 0.133541 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + -0.000114761 *lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*begin_lambda + 47.0388 *begin_x*begin_dx*lens_ipow(begin_dy, 6)+0.0f;
  dx1_domega0(0, 1) =  + -45.8874 *begin_dx*begin_dy + -0.211488 *begin_y*begin_dx + -0.423595 *begin_x*begin_dy + -0.00545491 *begin_x*begin_y + -1.60666 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + 0.0667704 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + -1.43404e-05 *lens_ipow(begin_x, 3)*begin_y*lens_ipow(begin_lambda, 2) + -4.16252e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + 141.116 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5)+0.0f;
  dx1_domega0(1, 0) =  + -46.7904 *begin_dx*begin_dy + -0.409297 *begin_y*begin_dx + -0.602487 *begin_x*begin_dy*begin_lambda + -0.014519 *begin_x*begin_y*begin_lambda + 0.036497 *begin_x*begin_y*lens_ipow(begin_dy, 2) + 0.0467102 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + 0.000354216 *lens_ipow(begin_x, 3)*begin_dy + 0.0211471 *begin_x*begin_y*lens_ipow(begin_lambda, 3) + -1.97264e-05 *begin_x*lens_ipow(begin_y, 3)*begin_lambda + -1.38489e-05 *lens_ipow(begin_x, 3)*begin_y*begin_lambda + 0.859791 *begin_x*begin_dy*lens_ipow(begin_lambda, 4)+0.0f;
  dx1_domega0(1, 1) =  + 36.7124  + 1.81549 *begin_lambda + -68.8127 *lens_ipow(begin_dy, 2) + -23.3952 *lens_ipow(begin_dx, 2) + -0.832988 *begin_y*begin_dy + -0.00469986 *lens_ipow(begin_y, 2) + -0.00114048 *lens_ipow(begin_x, 2) + -0.602487 *begin_x*begin_dx*begin_lambda + 0.0495798 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -1.32635e-05 *lens_ipow(begin_y, 4) + 0.072994 *begin_x*begin_y*begin_dx*begin_dy + 0.0233551 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -1.62499e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 0.000354216 *lens_ipow(begin_x, 3)*begin_dx + 0.859791 *begin_x*begin_dx*lens_ipow(begin_lambda, 4) + 0.0334593 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 5)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
