case kodak__petzval__1948__75mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 57.4823 *begin_dx + 0.792932 *begin_x + 0.943755 *begin_dx*begin_lambda + -0.00104947 *begin_x*begin_lambda + -0.674657 *begin_dx*lens_ipow(begin_lambda, 2) + 1.06447 *begin_dx*lens_ipow(begin_dy, 2) + 0.53491 *begin_y*begin_dx*begin_dy + 0.00733815 *lens_ipow(begin_y, 2)*begin_dx + 0.130534 *begin_x*lens_ipow(begin_dy, 2) + 0.581565 *begin_x*lens_ipow(begin_dx, 2) + 0.0103681 *begin_x*begin_y*begin_dy + 9.52381e-05 *begin_x*lens_ipow(begin_y, 2) + 0.0152241 *lens_ipow(begin_x, 2)*begin_dx + 6.84814e-05 *lens_ipow(begin_x, 3) + 2.35378e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dy + 0.0391623 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 0.00218968 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 4.11882e-05 *lens_ipow(begin_x, 4)*begin_dx + 2.49864e-07 *lens_ipow(begin_x, 5) + -0.00731769 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 5.79366e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy*begin_lambda + 0.00766802 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + -3.48429e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + -5.99949e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 4.29734e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4) + 902.434 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4)*begin_lambda + -0.227561 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + 0.00477086 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*begin_dy*begin_lambda;
  pred_y =  + 57.4524 *begin_dy + 0.791485 *begin_y + 0.976126 *begin_dy*begin_lambda + -0.703138 *begin_dy*lens_ipow(begin_lambda, 2) + 0.857903 *lens_ipow(begin_dy, 3) + 1.132 *lens_ipow(begin_dx, 2)*begin_dy + 0.661312 *begin_y*lens_ipow(begin_dy, 2) + 0.135676 *begin_y*lens_ipow(begin_dx, 2) + 0.0176535 *lens_ipow(begin_y, 2)*begin_dy + 9.89006e-05 *lens_ipow(begin_y, 3) + 0.546664 *begin_x*begin_dx*begin_dy + 0.0109245 *begin_x*begin_y*begin_dx + 0.00732155 *lens_ipow(begin_x, 2)*begin_dy + 0.000103683 *lens_ipow(begin_x, 2)*begin_y + 3.31081e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -3.09155e-08 *lens_ipow(begin_x, 4)*begin_y + -1.75617 *begin_y*lens_ipow(begin_dy, 4)*begin_lambda + -0.0632915 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 1.69709e-05 *lens_ipow(begin_y, 4)*begin_dy*begin_lambda + 3.12373e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx*begin_lambda + 388.46 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + -0.323506 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 9.86773e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 1.83922e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3) + -0.157606 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*begin_dy*begin_lambda + 4.07074e-10 *lens_ipow(begin_y, 7)*begin_lambda + -0.0909246 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + 1.97121e-11 *lens_ipow(begin_y, 8)*begin_dy;
  pred_dx =  + 0.58303 *begin_dx + -0.00932362 *begin_x + -0.00157178 *begin_dx*begin_lambda + -0.206441 *begin_dx*lens_ipow(begin_dy, 2) + -0.230955 *lens_ipow(begin_dx, 3) + 0.0109092 *begin_y*begin_dx*begin_dy + 0.000192475 *lens_ipow(begin_y, 2)*begin_dx + 0.00460686 *begin_x*lens_ipow(begin_dy, 2) + 0.0131086 *begin_x*lens_ipow(begin_dx, 2) + 0.000447394 *begin_x*begin_y*begin_dy + 4.06366e-06 *begin_x*lens_ipow(begin_y, 2) + 0.000553069 *lens_ipow(begin_x, 2)*begin_dx + 3.14183e-06 *lens_ipow(begin_x, 3) + 0.000852124 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 2.79396e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 5.94601e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 4.93745e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 1.29325e-06 *lens_ipow(begin_x, 4)*begin_dx + 8.89101e-09 *lens_ipow(begin_x, 5) + -0.00111652 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 3.04196e-07 *lens_ipow(begin_x, 3)*begin_y*begin_dy*begin_lambda + 5.02203e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -0.00873351 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -3.70065e-10 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 6.81074e-14 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4) + 1.24856e-12 *lens_ipow(begin_x, 6)*lens_ipow(begin_y, 2)*begin_dx + 334.908 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2) + -1.55312e-07 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2);
  pred_dy =  + 0.581617 *begin_dy + -0.0093243 *begin_y + -0.195635 *lens_ipow(begin_dy, 3) + -0.207511 *lens_ipow(begin_dx, 2)*begin_dy + 0.0138008 *begin_y*lens_ipow(begin_dy, 2) + 0.00444357 *begin_y*lens_ipow(begin_dx, 2) + 0.000572064 *lens_ipow(begin_y, 2)*begin_dy + 3.23657e-06 *lens_ipow(begin_y, 3) + 0.0111373 *begin_x*begin_dx*begin_dy + 0.000444693 *begin_x*begin_y*begin_dx + 0.000200985 *lens_ipow(begin_x, 2)*begin_dy + 4.06748e-06 *lens_ipow(begin_x, 2)*begin_y + -0.0430346 *lens_ipow(begin_dy, 3)*begin_lambda + 0.000828587 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 5.66609e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 1.21309e-06 *lens_ipow(begin_y, 4)*begin_dy + 8.39547e-09 *lens_ipow(begin_y, 5) + 1.52016e-07 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 3.51901e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 1.58921 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + -0.000598426 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 0.0344169 *begin_x*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + 2.25507e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + 0.168739 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -3.96823e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx*begin_dy + -1.26605e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 4.88167e-15 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 8)*begin_dy + 1.95222e-16 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 7);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 57.4823  + 0.943755 *begin_lambda + -0.674657 *lens_ipow(begin_lambda, 2) + 1.06447 *lens_ipow(begin_dy, 2) + 0.53491 *begin_y*begin_dy + 0.00733815 *lens_ipow(begin_y, 2) + 1.16313 *begin_x*begin_dx + 0.0152241 *lens_ipow(begin_x, 2) + 0.117487 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + 0.00437935 *lens_ipow(begin_x, 3)*begin_dx + 4.11882e-05 *lens_ipow(begin_x, 4) + -0.00731769 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 0.015336 *begin_x*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + -3.48429e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dy + -1.1999e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx + 2707.3 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4)*begin_lambda + -0.227561 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4)*begin_lambda + 0.0143126 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda+0.0f;
  dx1_domega0(0, 1) =  + 2.12894 *begin_dx*begin_dy + 0.53491 *begin_y*begin_dx + 0.261069 *begin_x*begin_dy + 0.0103681 *begin_x*begin_y + 2.35378e-06 *begin_x*lens_ipow(begin_y, 3) + -0.0146354 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + 5.79366e-06 *lens_ipow(begin_x, 3)*begin_y*begin_lambda + 0.015336 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -3.48429e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_dx + 3609.73 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3)*begin_lambda + -0.910245 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + 0.00477086 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*begin_lambda+0.0f;
  dx1_domega0(1, 0) =  + 2.264 *begin_dx*begin_dy + 0.271351 *begin_y*begin_dx + 0.546664 *begin_x*begin_dy + 0.0109245 *begin_x*begin_y + 3.12373e-06 *begin_x*lens_ipow(begin_y, 3)*begin_lambda + 1553.84 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -0.970518 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 0.000197355 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.630422 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + -0.0909246 *begin_x*begin_y*lens_ipow(begin_dy, 4)*begin_lambda+0.0f;
  dx1_domega0(1, 1) =  + 57.4524  + 0.976126 *begin_lambda + -0.703138 *lens_ipow(begin_lambda, 2) + 2.57371 *lens_ipow(begin_dy, 2) + 1.132 *lens_ipow(begin_dx, 2) + 1.32262 *begin_y*begin_dy + 0.0176535 *lens_ipow(begin_y, 2) + 0.546664 *begin_x*begin_dx + 0.00732155 *lens_ipow(begin_x, 2) + 3.31081e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -7.0247 *begin_y*lens_ipow(begin_dy, 3)*begin_lambda + -0.189874 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda + 1.69709e-05 *lens_ipow(begin_y, 4)*begin_lambda + 1165.38 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + -0.647012 *begin_x*begin_y*lens_ipow(begin_dx, 3)*begin_dy + 9.86773e-05 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.157606 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*begin_lambda + -0.363698 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 3)*begin_lambda + 1.97121e-11 *lens_ipow(begin_y, 8)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
