case kodak__petzval__1948__105mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 80.4853 *begin_dx + 0.793429 *begin_x + -0.00160156 *begin_x*begin_lambda + 1.30033 *begin_dx*begin_lambda + 0.523012 *begin_y*begin_dx*begin_dy + 0.00743408 *begin_x*begin_y*begin_dy + 0.010363 *lens_ipow(begin_x, 2)*begin_dx + 1.16333 *begin_dx*lens_ipow(begin_dy, 2) + 4.75435e-05 *begin_x*lens_ipow(begin_y, 2) + 3.22758e-05 *lens_ipow(begin_x, 3) + 0.121525 *begin_x*lens_ipow(begin_dy, 2) + 0.555625 *begin_x*lens_ipow(begin_dx, 2) + 0.00507526 *lens_ipow(begin_y, 2)*begin_dx + -0.934829 *begin_dx*lens_ipow(begin_lambda, 2) + 1.72285e-05 *lens_ipow(begin_x, 4)*begin_dx + 1.24505 *begin_x*lens_ipow(begin_dx, 4) + 0.0621952 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 10.1114 *lens_ipow(begin_dx, 5) + 7.16169e-08 *lens_ipow(begin_x, 5) + 2.18549e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 0.00151122 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + -0.0160109 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 1.05829e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 2.18964e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + 1.16865e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4) + 4.83493e-08 *lens_ipow(begin_x, 5)*begin_y*lens_ipow(begin_dy, 3) + 0.0728141 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3)*begin_lambda + 30102.5 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2);
  pred_y =  + 0.793305 *begin_y + 80.4738 *begin_dy + 1.3191 *begin_dy*begin_lambda + -0.00150834 *begin_y*begin_lambda + 0.12759 *begin_y*lens_ipow(begin_dx, 2) + 0.0103962 *lens_ipow(begin_y, 2)*begin_dy + 0.555099 *begin_y*lens_ipow(begin_dy, 2) + 0.00742601 *begin_x*begin_y*begin_dx + 1.46185 *lens_ipow(begin_dx, 2)*begin_dy + 4.7538e-05 *lens_ipow(begin_x, 2)*begin_y + -0.95094 *begin_dy*lens_ipow(begin_lambda, 2) + 3.22055e-05 *lens_ipow(begin_y, 3) + 0.0260774 *lens_ipow(begin_x, 2)*begin_dy*begin_lambda + 3.00749 *begin_x*begin_dx*begin_dy*begin_lambda + -5.57249 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 1.81748e-05 *lens_ipow(begin_y, 4)*begin_dy + 12.3213 *lens_ipow(begin_dy, 5) + 5.92434e-07 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 0.0724419 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + 1.53117 *begin_y*lens_ipow(begin_dy, 4) + -0.036311 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 2) + 7.53284e-08 *lens_ipow(begin_y, 5) + 0.00165712 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 3.39225 *begin_x*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + 0.0198909 *lens_ipow(begin_x, 2)*begin_dy*lens_ipow(begin_lambda, 4) + -1.54663e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx*begin_dy + 0.123291 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3)*begin_lambda + 24529.4 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2);
  pred_dx =  + 0.582169 *begin_dx + -0.00665676 *begin_x + 0.00721313 *begin_y*begin_dx*begin_dy + 0.000202213 *begin_x*begin_y*begin_dy + 0.000289933 *lens_ipow(begin_x, 2)*begin_dx + -0.222477 *lens_ipow(begin_dx, 3) + -0.225023 *begin_dx*lens_ipow(begin_dy, 2) + 1.25893e-06 *begin_x*lens_ipow(begin_y, 2) + 1.30226e-06 *lens_ipow(begin_x, 3) + 0.00252454 *begin_x*lens_ipow(begin_dy, 2) + 0.00954997 *begin_x*lens_ipow(begin_dx, 2) + 9.37141e-05 *lens_ipow(begin_y, 2)*begin_dx + 2.3964e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 1.43887e-07 *lens_ipow(begin_x, 4)*begin_dx + -0.0105074 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 3.29419e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + 5.57344e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 6.38523e-10 *begin_x*lens_ipow(begin_y, 4) + 2.49345e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 1.96586e-07 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 1.19203e-07 *begin_x*lens_ipow(begin_y, 3)*begin_dy + 1.26256e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 5.08818e-06 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 1.44602e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*begin_lambda + 3.43797e-12 *lens_ipow(begin_x, 7) + 5.86446e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dx, 2)*begin_lambda + 8.97902e-10 *lens_ipow(begin_x, 6)*begin_dx*begin_lambda + -0.00015814 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 2);
  pred_dy =  + -0.00665151 *begin_y + 0.582308 *begin_dy + 0.00298444 *begin_y*lens_ipow(begin_dx, 2) + 0.000297134 *lens_ipow(begin_y, 2)*begin_dy + 0.00933446 *begin_y*lens_ipow(begin_dy, 2) + 0.00744703 *begin_x*begin_dx*begin_dy + 0.000216296 *begin_x*begin_y*begin_dx + -0.214092 *lens_ipow(begin_dx, 2)*begin_dy + 1.40764e-06 *lens_ipow(begin_x, 2)*begin_y + 1.15997e-06 *lens_ipow(begin_y, 3) + 9.47444e-05 *lens_ipow(begin_x, 2)*begin_dy + -0.230737 *lens_ipow(begin_dy, 3) + -3.08574e-05 *begin_y*lens_ipow(begin_lambda, 3) + 6.76686e-08 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 9.5726e-10 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 1.50919e-09 *lens_ipow(begin_y, 5) + 6.73448e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + 5.46175e-07 *lens_ipow(begin_y, 4)*begin_dy*begin_lambda + -8.4612e-05 *lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 3) + -0.000559349 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 5.96955e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -0.0032738 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + 0.00763636 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + -0.00782346 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 4)*begin_dy*begin_lambda + -1.47259e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + -1.8018 *begin_y*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 3) + -0.947438 *begin_y*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 3) + 3.03253 *begin_y*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 4);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 80.4853  + 1.30033 *begin_lambda + 0.523012 *begin_y*begin_dy + 0.010363 *lens_ipow(begin_x, 2) + 1.16333 *lens_ipow(begin_dy, 2) + 1.11125 *begin_x*begin_dx + 0.00507526 *lens_ipow(begin_y, 2) + -0.934829 *lens_ipow(begin_lambda, 2) + 1.72285e-05 *lens_ipow(begin_x, 4) + 4.98021 *begin_x*lens_ipow(begin_dx, 3) + 0.186586 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + 50.5571 *lens_ipow(begin_dx, 4) + 2.18549e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 0.00302244 *lens_ipow(begin_x, 3)*begin_dx + -0.0320218 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + 0.218442 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 150512 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(0, 1) =  + 0.523012 *begin_y*begin_dx + 0.00743408 *begin_x*begin_y + 2.32666 *begin_dx*begin_dy + 0.243051 *begin_x*begin_dy + -0.0160109 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + 2.11657e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy + 2.18964e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + 1.45048e-07 *lens_ipow(begin_x, 5)*begin_y*lens_ipow(begin_dy, 2) + 0.218442 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + 120410 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 0) =  + 0.255181 *begin_y*begin_dx + 0.00742601 *begin_x*begin_y + 2.9237 *begin_dx*begin_dy + 3.00749 *begin_x*begin_dy*begin_lambda + -5.57249 *begin_x*begin_dy*lens_ipow(begin_lambda, 2) + 5.92434e-07 *begin_x*lens_ipow(begin_y, 3) + 3.39225 *begin_x*begin_dy*lens_ipow(begin_lambda, 3) + -1.54663e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dy + 0.369873 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 98117.4 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 1) =  + 80.4738  + 1.3191 *begin_lambda + 0.0103962 *lens_ipow(begin_y, 2) + 1.1102 *begin_y*begin_dy + 1.46185 *lens_ipow(begin_dx, 2) + -0.95094 *lens_ipow(begin_lambda, 2) + 0.0260774 *lens_ipow(begin_x, 2)*begin_lambda + 3.00749 *begin_x*begin_dx*begin_lambda + -5.57249 *begin_x*begin_dx*lens_ipow(begin_lambda, 2) + 1.81748e-05 *lens_ipow(begin_y, 4) + 61.6067 *lens_ipow(begin_dy, 4) + 0.217326 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 6.12469 *begin_y*lens_ipow(begin_dy, 3) + -0.036311 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 2) + 0.00331423 *lens_ipow(begin_y, 3)*begin_dy + 3.39225 *begin_x*begin_dx*lens_ipow(begin_lambda, 3) + 0.0198909 *lens_ipow(begin_x, 2)*lens_ipow(begin_lambda, 4) + -1.54663e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx + 0.369873 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + 122647 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 2)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
