case asahi__takumar__1970__50mm:
{
out[0] =  + 51.3922 *dx + 0.574039 *x + 3.78005 *dx*lambda + 0.0617709 *x*lambda + -2.56761 *dx*lens_ipow(lambda, 2) + 10.1535 *dx*lens_ipow(dy, 2) + 4.05684 *lens_ipow(dx, 3) + 1.14759 *y*dx*dy + 0.013382 *lens_ipow(y, 2)*dx + -0.0427229 *x*lens_ipow(lambda, 2) + 0.685393 *x*lens_ipow(dy, 2) + 1.51615 *x*lens_ipow(dx, 2) + 0.0296789 *x*y*dy + 0.000238686 *x*lens_ipow(y, 2) + 0.0371742 *lens_ipow(x, 2)*dx + 0.000205007 *lens_ipow(x, 3) + 83.6811 *lens_ipow(dx, 5) + 7.3973 *x*lens_ipow(dx, 4) + 0.269112 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 0.00487586 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -3.19466e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 4.46202e-05 *lens_ipow(x, 4)*dx + 1.49321e-07 *lens_ipow(x, 5) + 0.134183 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.000567645 *lens_ipow(x, 3)*lens_ipow(dy, 4) + -4.23201e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -9.04733e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + 4.59872e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dx, 2)*lambda;
out[1] =  + 51.3364 *dy + 0.574116 *y + 3.66341 *dy*lambda + 0.0590391 *y*lambda + -2.4795 *dy*lens_ipow(lambda, 2) + 10.3778 *lens_ipow(dy, 3) + 10.1878 *lens_ipow(dx, 2)*dy + -0.040445 *y*lens_ipow(lambda, 2) + 1.84056 *y*lens_ipow(dy, 2) + 0.658403 *y*lens_ipow(dx, 2) + 0.0431989 *lens_ipow(y, 2)*dy + 0.000234192 *lens_ipow(y, 3) + 1.16759 *x*dx*dy + 0.0291475 *x*y*dx + 0.0134529 *lens_ipow(x, 2)*dy + 0.000233251 *lens_ipow(x, 2)*y + 0.000214349 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 3.78154e-06 *x*lens_ipow(y, 3)*dx + 0.00507316 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -1.33916e-06 *x*lens_ipow(y, 4)*dx*dy + -0.000122682 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -2.23027e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy + 6.67463e-07 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + 0.678603 *x*y*dx*lens_ipow(dy, 4)*lambda + -0.00026519 *x*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lambda + 0.000577562 *lens_ipow(y, 4)*lens_ipow(dx, 4)*dy + 3.76374e-06 *lens_ipow(y, 5)*lens_ipow(dx, 4) + 98.4147 *x*dx*lens_ipow(dy, 7)*lambda;
out[2] =  + 1.26969 *dx + -0.00617084 *x + -0.848284 *dx*lambda + -0.00362568 *x*lambda + 0.611969 *dx*lens_ipow(lambda, 2) + 1.00431 *dx*lens_ipow(dy, 2) + 1.60618 *lens_ipow(dx, 3) + 0.0496957 *y*dx*dy + 0.000699009 *lens_ipow(y, 2)*dx + 0.0252478 *x*lens_ipow(dy, 2) + 0.0992851 *x*lens_ipow(dx, 2) + 0.001412 *x*y*dy + 1.39986e-05 *x*lens_ipow(y, 2) + 0.00255529 *lens_ipow(x, 2)*dx + 1.52262e-05 *lens_ipow(x, 3) + -1.13656 *lens_ipow(dx, 3)*lambda + -0.0447044 *x*lens_ipow(dx, 2)*lambda + -0.000772605 *lens_ipow(x, 2)*dx*lambda + 0.00156808 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.000492808 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.0030781 *x*lens_ipow(lambda, 4) + -4.35945e-05 *lens_ipow(x, 2)*y*dx*dy + -3.86721e-06 *lens_ipow(x, 3)*lens_ipow(lambda, 2) + 7.68163e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -2.52984e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -1.8057e-07 *lens_ipow(x, 4)*dx + 0.0624125 *y*dx*lens_ipow(dy, 3)*lambda + -4.11949e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda;
out[3] =  + 1.27189 *dy + -0.00613766 *y + -0.860125 *dy*lambda + -0.00372592 *y*lambda + 0.623224 *dy*lens_ipow(lambda, 2) + 1.65095 *lens_ipow(dy, 3) + 1.01231 *lens_ipow(dx, 2)*dy + 0.100197 *y*lens_ipow(dy, 2) + 0.025249 *y*lens_ipow(dx, 2) + 0.00255822 *lens_ipow(y, 2)*dy + 1.52115e-05 *lens_ipow(y, 3) + 0.0499707 *x*dx*dy + 0.00141304 *x*y*dx + 0.000702066 *lens_ipow(x, 2)*dy + 1.40264e-05 *lens_ipow(x, 2)*y + -1.19302 *lens_ipow(dy, 3)*lambda + -0.0453961 *y*lens_ipow(dy, 2)*lambda + -0.000751819 *lens_ipow(y, 2)*dy*lambda + 0.00325564 *y*lens_ipow(lambda, 4) + -3.75277e-06 *lens_ipow(y, 3)*lens_ipow(lambda, 2) + -2.45459e-05 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 8.67476e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -1.88337e-07 *lens_ipow(y, 4)*dy + -4.52788e-05 *x*lens_ipow(y, 2)*dx*dy + 0.00049582 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.00156756 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 0.0609364 *x*lens_ipow(dx, 3)*dy*lambda + -4.38731e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda;
out_transmittance =  + 0.305698  + 1.63057 *lambda + -3.39758 *lens_ipow(lambda, 2) + -0.0101115 *lens_ipow(dy, 2) + -0.0255552 *lens_ipow(dx, 2) + -0.000244572 *y*dy + -0.000989914 *x*dx + -1.0066e-05 *lens_ipow(x, 2) + 3.33515 *lens_ipow(lambda, 3) + -1.27009 *lens_ipow(lambda, 4) + -0.736423 *lens_ipow(dy, 4) + -0.648935 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.446748 *lens_ipow(dx, 4) + -0.0286949 *y*lens_ipow(dy, 3) + -0.00609337 *y*lens_ipow(dx, 2)*dy + -0.000771708 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.000104747 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.22311e-05 *lens_ipow(y, 3)*dy + -8.58431e-08 *lens_ipow(y, 4) + -0.00503696 *x*lens_ipow(dx, 3) + -0.000197806 *x*y*dx*dy + -6.1112e-06 *x*lens_ipow(y, 2)*dx + -4.38647e-06 *lens_ipow(x, 2)*y*dy + -1.09892e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -4.08758e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3) + -1.99811e-06 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -3.26429e-08 *lens_ipow(x, 5)*dx + -1.95597e-10 *lens_ipow(x, 6);
} break;
