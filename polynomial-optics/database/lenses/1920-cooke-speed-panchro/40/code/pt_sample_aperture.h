case cooke__speed_panchro__1920__40mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 28.7526 *begin_dx + 0.659683 *begin_x + 0.0225658 *begin_x*begin_lambda + 0.838809 *begin_dx*begin_lambda + -0.355265 *begin_y*begin_dx*begin_dy + -22.264 *lens_ipow(begin_dx, 3) + -21.2417 *begin_dx*lens_ipow(begin_dy, 2) + 7.3305e-05 *begin_x*lens_ipow(begin_y, 2) + 5.35676e-05 *lens_ipow(begin_x, 3) + -0.285035 *begin_x*lens_ipow(begin_dy, 2) + -0.721997 *begin_x*lens_ipow(begin_dx, 2) + 0.0022198 *lens_ipow(begin_y, 2)*begin_dx + 7.03968e-06 *lens_ipow(begin_x, 4)*begin_dx + -0.319535 *begin_x*lens_ipow(begin_dx, 4) + -1.17233 *begin_y*lens_ipow(begin_dx, 3)*begin_dy + -6.83104e-08 *begin_x*lens_ipow(begin_y, 4) + -9.75998 *begin_dx*lens_ipow(begin_dy, 4) + 7.61872e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -0.0226686 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + -1.27293 *begin_y*begin_dx*lens_ipow(begin_dy, 3) + -0.0229699 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -0.0116368 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.000410143 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 0.000159652 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy*begin_lambda + 0.492022 *begin_x*lens_ipow(begin_dy, 4)*begin_lambda + 5.08348e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -1.82397e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -0.724248 *begin_x*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4);
  pred_y =  + 0.64034 *begin_y + 28.0678 *begin_dy + 3.37459 *begin_dy*begin_lambda + 0.0938781 *begin_y*begin_lambda + -0.277055 *begin_y*lens_ipow(begin_dx, 2) + -0.719888 *begin_y*lens_ipow(begin_dy, 2) + -0.394178 *begin_x*begin_dx*begin_dy + -21.6382 *lens_ipow(begin_dx, 2)*begin_dy + -0.065173 *begin_y*lens_ipow(begin_lambda, 2) + 7.29728e-05 *lens_ipow(begin_x, 2)*begin_y + -2.29991 *begin_dy*lens_ipow(begin_lambda, 2) + 5.6478e-05 *lens_ipow(begin_y, 3) + 0.00172258 *lens_ipow(begin_x, 2)*begin_dy + -22.184 *lens_ipow(begin_dy, 3) + -0.0166547 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2)*begin_dy + -0.785544 *begin_x*lens_ipow(begin_dx, 3)*begin_dy + 0.239336 *begin_y*lens_ipow(begin_dx, 4) + 8.54678e-06 *lens_ipow(begin_y, 4)*begin_dy + -7.07638e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 4.03032e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dx + -0.345384 *begin_y*lens_ipow(begin_dy, 4) + 0.000480384 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + -0.0112172 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.0056026 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 4)*begin_lambda + -0.417486 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5)*begin_lambda + -14.4717 *begin_x*begin_dx*lens_ipow(begin_dy, 5)*begin_lambda + -1.77795 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 2) + 0.934025 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 7)*lens_ipow(begin_lambda, 2);
  pred_dx =  + 0.477784 *begin_dx + -0.0241105 *begin_x + 0.00164861 *begin_x*begin_lambda + -0.000621157 *begin_x*begin_y*begin_dy + -0.00145658 *lens_ipow(begin_x, 2)*begin_dx + -0.648936 *lens_ipow(begin_dx, 3) + 0.400299 *begin_dx*lens_ipow(begin_dy, 2) + -1.54875e-05 *begin_x*lens_ipow(begin_y, 2) + -1.90493e-05 *lens_ipow(begin_x, 3) + -0.0132139 *begin_x*lens_ipow(begin_dy, 2) + -0.0635758 *begin_x*lens_ipow(begin_dx, 2) + -0.000695313 *lens_ipow(begin_y, 2)*begin_dx*begin_lambda + -1.1185 *begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.0499884 *begin_y*begin_dx*begin_dy*begin_lambda + 0.145881 *begin_x*lens_ipow(begin_dx, 4) + 0.0558385 *begin_dx*lens_ipow(begin_lambda, 4) + 4.02034 *lens_ipow(begin_dx, 5) + -2.64047e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -7.34072e-09 *begin_x*lens_ipow(begin_y, 4) + 1.20462e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -0.0214704 *begin_y*begin_dx*lens_ipow(begin_dy, 3) + -6.29899e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 7.79314e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy*begin_lambda + 5.50031 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -4.03283e-07 *lens_ipow(begin_x, 4)*begin_dx*begin_lambda + 0.264408 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 0.00769464 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 4) + -6.26309e-07 *begin_x*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 4)*lens_ipow(begin_lambda, 2);
  pred_dy =  + -0.0254339 *begin_y + 0.462105 *begin_dy + 0.0384647 *begin_dy*begin_lambda + 0.00669659 *begin_y*begin_lambda + -0.0141728 *begin_y*lens_ipow(begin_dx, 2) + -0.00148188 *lens_ipow(begin_y, 2)*begin_dy + -0.0635021 *begin_y*lens_ipow(begin_dy, 2) + -0.000663849 *begin_x*begin_y*begin_dx + 0.44848 *lens_ipow(begin_dx, 2)*begin_dy + -0.00462074 *begin_y*lens_ipow(begin_lambda, 2) + -1.61654e-05 *lens_ipow(begin_x, 2)*begin_y + -1.93291e-05 *lens_ipow(begin_y, 3) + -0.606341 *lens_ipow(begin_dy, 3) + -1.25468 *lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.000752166 *lens_ipow(begin_x, 2)*begin_dy*begin_lambda + -0.0573128 *begin_x*begin_dx*begin_dy*begin_lambda + 3.38792 *lens_ipow(begin_dy, 5) + 0.121121 *begin_y*lens_ipow(begin_dy, 4) + -1.84507e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dx, 2) + -7.28108e-09 *lens_ipow(begin_x, 4)*begin_y + 1.0293e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -5.61709e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 3.17918 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 1.62135e-05 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*begin_lambda + -0.00393591 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 1.72761 *lens_ipow(begin_dx, 6)*begin_dy + 0.00540523 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5)*begin_lambda + 1.28987e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 28.7526  + 0.838809 *begin_lambda + -0.355265 *begin_y*begin_dy + -66.792 *lens_ipow(begin_dx, 2) + -21.2417 *lens_ipow(begin_dy, 2) + -1.44399 *begin_x*begin_dx + 0.0022198 *lens_ipow(begin_y, 2) + 7.03968e-06 *lens_ipow(begin_x, 4) + -1.27814 *begin_x*lens_ipow(begin_dx, 3) + -3.51699 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + -9.75998 *lens_ipow(begin_dy, 4) + 7.61872e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + -0.0226686 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + -1.27293 *begin_y*lens_ipow(begin_dy, 3) + -0.0689097 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0116368 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + 0.000820286 *lens_ipow(begin_x, 3)*begin_dx + 0.000159652 *lens_ipow(begin_x, 2)*begin_y*begin_dy*begin_lambda+0.0f;
  dx1_domega0(0, 1) =  + -0.355265 *begin_y*begin_dx + -42.4835 *begin_dx*begin_dy + -0.570069 *begin_x*begin_dy + -1.17233 *begin_y*lens_ipow(begin_dx, 3) + -39.0399 *begin_dx*lens_ipow(begin_dy, 3) + -0.0453373 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -3.81879 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0232736 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + 0.000159652 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_lambda + 1.96809 *begin_x*lens_ipow(begin_dy, 3)*begin_lambda + 5.08348e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3) + -3.64793e-07 *lens_ipow(begin_x, 5)*begin_dy + -2.89699 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 4)+0.0f;
  dx1_domega0(1, 0) =  + -0.55411 *begin_y*begin_dx + -0.394178 *begin_x*begin_dy + -43.2764 *begin_dx*begin_dy + -0.0333093 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -2.35663 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + 0.957343 *begin_y*lens_ipow(begin_dx, 3) + 4.03032e-06 *lens_ipow(begin_x, 3)*begin_y + -0.0224344 *lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + -14.4717 *begin_x*lens_ipow(begin_dy, 5)*begin_lambda + -1.77795 *begin_x*begin_y*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(1, 1) =  + 28.0678  + 3.37459 *begin_lambda + -1.43978 *begin_y*begin_dy + -0.394178 *begin_x*begin_dx + -21.6382 *lens_ipow(begin_dx, 2) + -2.29991 *lens_ipow(begin_lambda, 2) + 0.00172258 *lens_ipow(begin_x, 2) + -66.5521 *lens_ipow(begin_dy, 2) + -0.0166547 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -0.785544 *begin_x*lens_ipow(begin_dx, 3) + 8.54678e-06 *lens_ipow(begin_y, 4) + -1.38154 *begin_y*lens_ipow(begin_dy, 3) + 0.000960768 *lens_ipow(begin_y, 3)*begin_dy + -0.0112172 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_lambda + -0.0224104 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 3)*begin_lambda + -2.08743 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4)*begin_lambda + -72.3584 *begin_x*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -10.6677 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 5)*lens_ipow(begin_lambda, 2) + 6.53817 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 2)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
