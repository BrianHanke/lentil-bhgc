case cooke__speed_panchro__1920__100mm:
{
out[0] =  + 70.0927 *dx + 0.642366 *x + 0.0856359 *x*lambda + 8.207 *dx*lambda + -0.306917 *y*dx*dy + 0.0010317 *lens_ipow(x, 2)*dx + -45.8417 *lens_ipow(dx, 3) + -0.0586154 *x*lens_ipow(lambda, 2) + -46.0844 *dx*lens_ipow(dy, 2) + 1.06655e-05 *x*lens_ipow(y, 2) + 9.49318e-06 *lens_ipow(x, 3) + -0.256023 *x*lens_ipow(dy, 2) + -0.558043 *x*lens_ipow(dx, 2) + 0.000992735 *lens_ipow(y, 2)*dx + -5.60491 *dx*lens_ipow(lambda, 2) + -0.0266219 *x*y*lens_ipow(dx, 2)*dy + -3.76283 *x*lens_ipow(dx, 4) + -0.031807 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -3.50353 *y*lens_ipow(dx, 3)*dy + -121.218 *lens_ipow(dx, 5) + -3.76677 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -104.008 *dx*lens_ipow(dy, 4) + -0.0210866 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -2.95128 *y*dx*lens_ipow(dy, 3) + -0.0143364 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -0.020339 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -234.842 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + 3.98383e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx;
out[1] =  + 0.642885 *y + 70.1796 *dy + 8.1424 *dy*lambda + 0.0847499 *y*lambda + -0.274506 *y*lens_ipow(dx, 2) + 0.000578186 *lens_ipow(y, 2)*dy + -0.64955 *y*lens_ipow(dy, 2) + -52.0577 *lens_ipow(dx, 2)*dy + -0.0578827 *y*lens_ipow(lambda, 2) + 1.05888e-05 *lens_ipow(x, 2)*y + -5.55115 *dy*lens_ipow(lambda, 2) + 9.95709e-06 *lens_ipow(y, 3) + 0.000744536 *lens_ipow(x, 2)*dy + -51.3611 *lens_ipow(dy, 3) + -1.88091 *x*dx*dy*lambda + 2.59627 *x*dx*dy*lens_ipow(lambda, 2) + -0.0120035 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + -1.92652 *x*lens_ipow(dx, 3)*dy + -0.00337103 *x*y*lens_ipow(dx, 3) + -57.7709 *lens_ipow(dx, 4)*dy + 0.787701 *x*y*dx*lens_ipow(dy, 4) + -684.315 *lens_ipow(dy, 7) + -0.102244 *lens_ipow(x, 2)*lens_ipow(dy, 5) + -1.40302 *x*dx*dy*lens_ipow(lambda, 4) + -0.207061 *lens_ipow(y, 2)*lens_ipow(dy, 5) + -24.7483 *y*lens_ipow(dy, 6) + 0.00887828 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -6442.83 *lens_ipow(dx, 2)*lens_ipow(dy, 7);
out[2] =  + 0.457136 *dx + -0.0101037 *x + 0.0027181 *x*lambda + 0.10236 *dx*lambda + -0.0169213 *y*dx*dy + -0.000152742 *x*y*dy + -0.000255908 *lens_ipow(x, 2)*dx + -0.796098 *lens_ipow(dx, 3) + -0.00187749 *x*lens_ipow(lambda, 2) + -0.566459 *dx*lens_ipow(dy, 2) + -1.35926e-06 *x*lens_ipow(y, 2) + -1.33617e-06 *lens_ipow(x, 3) + -0.00886726 *x*lens_ipow(dy, 2) + -0.0284139 *x*lens_ipow(dx, 2) + -9.14481e-05 *lens_ipow(y, 2)*dx + -0.0728502 *dx*lens_ipow(lambda, 2) + 0.0832356 *x*lens_ipow(dx, 4) + 5.1049 *lens_ipow(dx, 5) + -5.55409e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + -4.81513e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + -0.0198241 *x*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + -0.722474 *y*dx*lens_ipow(dy, 5) + 63.9208 *lens_ipow(dx, 3)*lens_ipow(dy, 4) + -3.83808e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy + 0.0646751 *x*lens_ipow(dy, 6) + -0.0112359 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + 68.7727 *lens_ipow(dx, 5)*lens_ipow(dy, 2)*lambda + -0.0196597 *x*y*lens_ipow(dx, 4)*dy*lambda;
out[3] =  + -0.0101004 *y + 0.457102 *dy + 0.100435 *dy*lambda + 0.00269999 *y*lambda + -0.0087605 *y*lens_ipow(dx, 2) + -0.000254516 *lens_ipow(y, 2)*dy + -0.0280722 *y*lens_ipow(dy, 2) + -0.0172145 *x*dx*dy + -0.000150274 *x*y*dx + -0.549213 *lens_ipow(dx, 2)*dy + -0.00186489 *y*lens_ipow(lambda, 2) + -1.31223e-06 *lens_ipow(x, 2)*y + -0.0706918 *dy*lens_ipow(lambda, 2) + -1.34099e-06 *lens_ipow(y, 3) + -9.3573e-05 *lens_ipow(x, 2)*dy + -0.777551 *lens_ipow(dy, 3) + 4.95155 *lens_ipow(dy, 5) + 0.0791229 *y*lens_ipow(dy, 4) + -5.21365e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + -5.05379e-06 *lens_ipow(y, 3)*lens_ipow(dy, 2) + -0.0205986 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 80.5278 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 4.78251e-05 *lens_ipow(x, 3)*lens_ipow(dx, 3)*dy + 0.109555 *y*lens_ipow(dx, 6)*lambda + -6.20975e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lambda + -0.021115 *x*y*dx*lens_ipow(dy, 4)*lambda + 93.7051 *lens_ipow(dx, 8)*dy + 643.614 *lens_ipow(dx, 2)*lens_ipow(dy, 7)*lambda;
out_transmittance =  + 0.71165  + 0.365701 *lambda + 0.000888966 *y*dy + 0.00084461 *x*dx + 2.17849e-06 *lens_ipow(y, 2) + 0.0735693 *lens_ipow(dy, 2) + 7.95938e-07 *lens_ipow(x, 2) + 0.0716293 *lens_ipow(dx, 2) + -0.507415 *lens_ipow(lambda, 2) + 0.247545 *lens_ipow(lambda, 3) + -4.36639 *lens_ipow(dx, 4) + -0.109171 *y*lens_ipow(dy, 3) + -0.00034491 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.107994 *x*lens_ipow(dx, 3) + -8.78082 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -3.81518e-06 *lens_ipow(x, 2)*y*dy + -4.40435 *lens_ipow(dy, 4) + -3.86157e-06 *x*lens_ipow(y, 2)*dx + -5.93257e-09 *lens_ipow(y, 4) + -0.000973189 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.109284 *y*lens_ipow(dx, 2)*dy + -3.68485e-06 *lens_ipow(x, 3)*dx + -0.000992243 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -0.109239 *x*dx*lens_ipow(dy, 2) + -0.00130322 *x*y*dx*dy + -0.000340264 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -3.91717e-06 *lens_ipow(y, 3)*dy + -3.98807e-11 *lens_ipow(x, 4)*lens_ipow(y, 2);
} break;
