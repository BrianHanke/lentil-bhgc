case cooke__speed_panchro__1920__75mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 52.6321 *begin_dx + 0.645828 *begin_x + 0.0791184 *begin_x*begin_lambda + 6.31981 *begin_dx*begin_lambda + -0.000310767 *begin_x*begin_y*begin_dy + -39.8821 *lens_ipow(begin_dx, 3) + -0.0556604 *begin_x*lens_ipow(begin_lambda, 2) + -41.3013 *begin_dx*lens_ipow(begin_dy, 2) + 1.52245e-05 *begin_x*lens_ipow(begin_y, 2) + -0.289697 *begin_x*lens_ipow(begin_dy, 2) + -0.689895 *begin_x*lens_ipow(begin_dx, 2) + 0.00105637 *lens_ipow(begin_y, 2)*begin_dx + -4.33794 *begin_dx*lens_ipow(begin_lambda, 2) + 2.88555e-05 *lens_ipow(begin_x, 3)*begin_lambda + -2.13337 *begin_y*begin_dx*begin_dy*begin_lambda + 3.95429 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + -1.40871 *begin_y*lens_ipow(begin_dx, 3)*begin_dy + 9.22576e-05 *lens_ipow(begin_y, 3)*begin_dx*begin_dy + 0.202471 *begin_x*lens_ipow(begin_dy, 4) + -0.655789 *begin_y*begin_dx*lens_ipow(begin_dy, 3) + -0.0121823 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -2.4027 *begin_y*begin_dx*begin_dy*lens_ipow(begin_lambda, 3) + -53.9922 *lens_ipow(begin_dx, 5)*begin_lambda + -2.17019 *begin_x*lens_ipow(begin_dx, 4)*begin_lambda + -0.0368727 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 4) + 0.00101783 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2)*lens_ipow(begin_lambda, 2) + -165.73 *lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + 1.74247e-05 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_lambda, 3);
  pred_y =  + 0.641888 *begin_y + 52.7206 *begin_dy + 5.9613 *begin_dy*begin_lambda + 0.0882786 *begin_y*begin_lambda + -0.277811 *begin_y*lens_ipow(begin_dx, 2) + -0.673662 *begin_y*lens_ipow(begin_dy, 2) + -0.431014 *begin_x*begin_dx*begin_dy + -40.9004 *lens_ipow(begin_dx, 2)*begin_dy + -0.0604279 *begin_y*lens_ipow(begin_lambda, 2) + 1.80004e-05 *lens_ipow(begin_x, 2)*begin_y + -3.96818 *begin_dy*lens_ipow(begin_lambda, 2) + 1.66599e-05 *lens_ipow(begin_y, 3) + 0.0007109 *lens_ipow(begin_x, 2)*begin_dy + -39.7066 *lens_ipow(begin_dy, 3) + 0.0673625 *begin_x*begin_dx*begin_dy*begin_lambda + 0.211083 *begin_y*lens_ipow(begin_dx, 4) + -0.775387 *begin_x*lens_ipow(begin_dx, 3)*begin_dy*begin_lambda + -2.49057 *begin_y*lens_ipow(begin_dy, 4)*begin_lambda + -59.3268 *lens_ipow(begin_dy, 5)*begin_lambda + 0.132311 *begin_x*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + 0.00107449 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 1.10608e-05 *lens_ipow(begin_y, 4)*begin_dy*lens_ipow(begin_lambda, 2) + -0.102389 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 5) + 6.72797e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + 1.56836e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_dy*begin_lambda + -22.0656 *begin_x*begin_dx*lens_ipow(begin_dy, 5)*begin_lambda + -7089.15 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 7)*lens_ipow(begin_lambda, 2) + 407.123 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 4);
  pred_dx =  + 0.48125 *begin_dx + -0.0127139 *begin_x + 0.000865066 *begin_x*begin_lambda + 0.0226346 *begin_dx*begin_lambda + -0.0267834 *begin_y*begin_dx*begin_dy + -0.000485918 *lens_ipow(begin_x, 2)*begin_dx + -0.99414 *lens_ipow(begin_dx, 3) + -0.898759 *begin_dx*lens_ipow(begin_dy, 2) + -3.12881e-06 *begin_x*lens_ipow(begin_y, 2) + -3.20735e-06 *lens_ipow(begin_x, 3) + -0.0139184 *begin_x*lens_ipow(begin_dy, 2) + -0.0425989 *begin_x*lens_ipow(begin_dx, 2) + -0.000170635 *lens_ipow(begin_y, 2)*begin_dx + -0.00102323 *begin_x*begin_y*begin_dy*begin_lambda + 0.00123047 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy + 0.20662 *begin_x*lens_ipow(begin_dx, 4) + 0.00175651 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + 0.134539 *begin_y*lens_ipow(begin_dx, 3)*begin_dy + 7.29498 *lens_ipow(begin_dx, 5) + 0.219974 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 4.85154 *begin_dx*lens_ipow(begin_dy, 4) + 0.0283343 *begin_x*lens_ipow(begin_dy, 4) + 0.0668341 *begin_y*begin_dx*lens_ipow(begin_dy, 3) + 0.000544005 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + 0.000859779 *begin_x*begin_y*begin_dy*lens_ipow(begin_lambda, 2) + 0.00114062 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + 12.9517 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 2) + -1.39462e-05 *begin_x*lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2)*begin_lambda;
  pred_dy =  + -0.0135113 *begin_y + 0.470227 *begin_dy + 0.0481744 *begin_dy*begin_lambda + 0.00375296 *begin_y*begin_lambda + -0.0134018 *begin_y*lens_ipow(begin_dx, 2) + -0.00048077 *lens_ipow(begin_y, 2)*begin_dy + -0.0413937 *begin_y*lens_ipow(begin_dy, 2) + -0.0258608 *begin_x*begin_dx*begin_dy + -0.000280416 *begin_x*begin_y*begin_dx + -0.867401 *lens_ipow(begin_dx, 2)*begin_dy + -0.00258742 *begin_y*lens_ipow(begin_lambda, 2) + -2.97546e-06 *lens_ipow(begin_x, 2)*begin_y + -3.19453e-06 *lens_ipow(begin_y, 3) + -0.000161157 *lens_ipow(begin_x, 2)*begin_dy + -0.937357 *lens_ipow(begin_dy, 3) + 0.0677584 *begin_x*lens_ipow(begin_dx, 3)*begin_dy + 10.7451 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 0.0285487 *begin_y*lens_ipow(begin_dx, 4) + 6.75606 *lens_ipow(begin_dy, 5) + 0.0716374 *begin_x*begin_dx*lens_ipow(begin_dy, 3) + -0.0368474 *begin_dy*lens_ipow(begin_lambda, 4) + 0.00154561 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -7.91443e-06 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + 0.00113784 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.186416 *begin_y*lens_ipow(begin_dy, 4) + 0.177729 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 4.87406 *lens_ipow(begin_dx, 4)*begin_dy + -1.08704e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dy, 2);
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 52.6321  + 6.31981 *begin_lambda + -119.646 *lens_ipow(begin_dx, 2) + -41.3013 *lens_ipow(begin_dy, 2) + -1.37979 *begin_x*begin_dx + 0.00105637 *lens_ipow(begin_y, 2) + -4.33794 *lens_ipow(begin_lambda, 2) + -2.13337 *begin_y*begin_dy*begin_lambda + 3.95429 *begin_y*begin_dy*lens_ipow(begin_lambda, 2) + -4.22614 *begin_y*lens_ipow(begin_dx, 2)*begin_dy + 9.22576e-05 *lens_ipow(begin_y, 3)*begin_dy + -0.655789 *begin_y*lens_ipow(begin_dy, 3) + -0.0365469 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -2.4027 *begin_y*begin_dy*lens_ipow(begin_lambda, 3) + -269.961 *lens_ipow(begin_dx, 4)*begin_lambda + -8.68075 *begin_x*lens_ipow(begin_dx, 3)*begin_lambda + -0.0368727 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + 0.00203566 *lens_ipow(begin_x, 3)*begin_dx*lens_ipow(begin_lambda, 2) + -828.648 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 2) + 1.74247e-05 *lens_ipow(begin_x, 4)*lens_ipow(begin_lambda, 3)+0.0f;
  dx1_domega0(0, 1) =  + -0.000310767 *begin_x*begin_y + -82.6025 *begin_dx*begin_dy + -0.579393 *begin_x*begin_dy + -2.13337 *begin_y*begin_dx*begin_lambda + 3.95429 *begin_y*begin_dx*lens_ipow(begin_lambda, 2) + -1.40871 *begin_y*lens_ipow(begin_dx, 3) + 9.22576e-05 *lens_ipow(begin_y, 3)*begin_dx + 0.809883 *begin_x*lens_ipow(begin_dy, 3) + -1.96737 *begin_y*begin_dx*lens_ipow(begin_dy, 2) + -2.4027 *begin_y*begin_dx*lens_ipow(begin_lambda, 3) + -0.147491 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 3) + -331.459 *lens_ipow(begin_dx, 5)*begin_dy+0.0f;
  dx1_domega0(1, 0) =  + -0.555621 *begin_y*begin_dx + -0.431014 *begin_x*begin_dy + -81.8007 *begin_dx*begin_dy + 0.0673625 *begin_x*begin_dy*begin_lambda + 0.844332 *begin_y*lens_ipow(begin_dx, 3) + -2.32616 *begin_x*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + 0.396932 *begin_x*begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 1.56836e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dy*begin_lambda + -22.0656 *begin_x*lens_ipow(begin_dy, 5)*begin_lambda + -14178.3 *begin_dx*lens_ipow(begin_dy, 7)*lens_ipow(begin_lambda, 2) + 2442.74 *begin_y*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 4)+0.0f;
  dx1_domega0(1, 1) =  + 52.7206  + 5.9613 *begin_lambda + -1.34732 *begin_y*begin_dy + -0.431014 *begin_x*begin_dx + -40.9004 *lens_ipow(begin_dx, 2) + -3.96818 *lens_ipow(begin_lambda, 2) + 0.0007109 *lens_ipow(begin_x, 2) + -119.12 *lens_ipow(begin_dy, 2) + 0.0673625 *begin_x*begin_dx*begin_lambda + -0.775387 *begin_x*lens_ipow(begin_dx, 3)*begin_lambda + -9.9623 *begin_y*lens_ipow(begin_dy, 3)*begin_lambda + -296.634 *lens_ipow(begin_dy, 4)*begin_lambda + 0.264621 *begin_x*begin_y*lens_ipow(begin_dx, 3)*begin_dy + 0.00214897 *lens_ipow(begin_y, 3)*begin_dy*lens_ipow(begin_lambda, 2) + 1.10608e-05 *lens_ipow(begin_y, 4)*lens_ipow(begin_lambda, 2) + -0.511946 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 4) + 6.72797e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2) + 1.56836e-06 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_dx*begin_lambda + -110.328 *begin_x*begin_dx*lens_ipow(begin_dy, 4)*begin_lambda + -49624 *lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 6)*lens_ipow(begin_lambda, 2) + 1628.49 *begin_y*lens_ipow(begin_dx, 6)*lens_ipow(begin_dy, 3)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
