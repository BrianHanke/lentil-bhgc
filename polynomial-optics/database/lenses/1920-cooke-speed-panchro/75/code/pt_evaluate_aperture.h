case cooke__speed_panchro__1920__75mm:
{
out[0] =  + 52.6321 *dx + 0.645828 *x + 0.0791184 *x*lambda + 6.31981 *dx*lambda + -0.000310767 *x*y*dy + -39.8821 *lens_ipow(dx, 3) + -0.0556604 *x*lens_ipow(lambda, 2) + -41.3013 *dx*lens_ipow(dy, 2) + 1.52245e-05 *x*lens_ipow(y, 2) + -0.289697 *x*lens_ipow(dy, 2) + -0.689895 *x*lens_ipow(dx, 2) + 0.00105637 *lens_ipow(y, 2)*dx + -4.33794 *dx*lens_ipow(lambda, 2) + 2.88555e-05 *lens_ipow(x, 3)*lambda + -2.13337 *y*dx*dy*lambda + 3.95429 *y*dx*dy*lens_ipow(lambda, 2) + -1.40871 *y*lens_ipow(dx, 3)*dy + 9.22576e-05 *lens_ipow(y, 3)*dx*dy + 0.202471 *x*lens_ipow(dy, 4) + -0.655789 *y*dx*lens_ipow(dy, 3) + -0.0121823 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -2.4027 *y*dx*dy*lens_ipow(lambda, 3) + -53.9922 *lens_ipow(dx, 5)*lambda + -2.17019 *x*lens_ipow(dx, 4)*lambda + -0.0368727 *lens_ipow(x, 2)*dx*lens_ipow(dy, 4) + 0.00101783 *lens_ipow(x, 3)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -165.73 *lens_ipow(dx, 5)*lens_ipow(dy, 2) + 1.74247e-05 *lens_ipow(x, 4)*dx*lens_ipow(lambda, 3);
out[1] =  + 0.641888 *y + 52.7206 *dy + 5.9613 *dy*lambda + 0.0882786 *y*lambda + -0.277811 *y*lens_ipow(dx, 2) + -0.673662 *y*lens_ipow(dy, 2) + -0.431014 *x*dx*dy + -40.9004 *lens_ipow(dx, 2)*dy + -0.0604279 *y*lens_ipow(lambda, 2) + 1.80004e-05 *lens_ipow(x, 2)*y + -3.96818 *dy*lens_ipow(lambda, 2) + 1.66599e-05 *lens_ipow(y, 3) + 0.0007109 *lens_ipow(x, 2)*dy + -39.7066 *lens_ipow(dy, 3) + 0.0673625 *x*dx*dy*lambda + 0.211083 *y*lens_ipow(dx, 4) + -0.775387 *x*lens_ipow(dx, 3)*dy*lambda + -2.49057 *y*lens_ipow(dy, 4)*lambda + -59.3268 *lens_ipow(dy, 5)*lambda + 0.132311 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 2) + 0.00107449 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + 1.10608e-05 *lens_ipow(y, 4)*dy*lens_ipow(lambda, 2) + -0.102389 *lens_ipow(x, 2)*lens_ipow(dy, 5) + 6.72797e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy + 1.56836e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lambda + -22.0656 *x*dx*lens_ipow(dy, 5)*lambda + -7089.15 *lens_ipow(dx, 2)*lens_ipow(dy, 7)*lens_ipow(lambda, 2) + 407.123 *y*lens_ipow(dx, 6)*lens_ipow(dy, 4);
out[2] =  + 0.48125 *dx + -0.0127139 *x + 0.000865066 *x*lambda + 0.0226346 *dx*lambda + -0.0267834 *y*dx*dy + -0.000485918 *lens_ipow(x, 2)*dx + -0.99414 *lens_ipow(dx, 3) + -0.898759 *dx*lens_ipow(dy, 2) + -3.12881e-06 *x*lens_ipow(y, 2) + -3.20735e-06 *lens_ipow(x, 3) + -0.0139184 *x*lens_ipow(dy, 2) + -0.0425989 *x*lens_ipow(dx, 2) + -0.000170635 *lens_ipow(y, 2)*dx + -0.00102323 *x*y*dy*lambda + 0.00123047 *x*y*lens_ipow(dx, 2)*dy + 0.20662 *x*lens_ipow(dx, 4) + 0.00175651 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 0.134539 *y*lens_ipow(dx, 3)*dy + 7.29498 *lens_ipow(dx, 5) + 0.219974 *x*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.85154 *dx*lens_ipow(dy, 4) + 0.0283343 *x*lens_ipow(dy, 4) + 0.0668341 *y*dx*lens_ipow(dy, 3) + 0.000544005 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.000859779 *x*y*dy*lens_ipow(lambda, 2) + 0.00114062 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + 12.9517 *lens_ipow(dx, 3)*lens_ipow(dy, 2) + -1.39462e-05 *x*lens_ipow(y, 2)*lens_ipow(dy, 2)*lambda;
out[3] =  + -0.0135113 *y + 0.470227 *dy + 0.0481744 *dy*lambda + 0.00375296 *y*lambda + -0.0134018 *y*lens_ipow(dx, 2) + -0.00048077 *lens_ipow(y, 2)*dy + -0.0413937 *y*lens_ipow(dy, 2) + -0.0258608 *x*dx*dy + -0.000280416 *x*y*dx + -0.867401 *lens_ipow(dx, 2)*dy + -0.00258742 *y*lens_ipow(lambda, 2) + -2.97546e-06 *lens_ipow(x, 2)*y + -3.19453e-06 *lens_ipow(y, 3) + -0.000161157 *lens_ipow(x, 2)*dy + -0.937357 *lens_ipow(dy, 3) + 0.0677584 *x*lens_ipow(dx, 3)*dy + 10.7451 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.0285487 *y*lens_ipow(dx, 4) + 6.75606 *lens_ipow(dy, 5) + 0.0716374 *x*dx*lens_ipow(dy, 3) + -0.0368474 *dy*lens_ipow(lambda, 4) + 0.00154561 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -7.91443e-06 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 0.00113784 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.186416 *y*lens_ipow(dy, 4) + 0.177729 *y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.87406 *lens_ipow(dx, 4)*dy + -1.08704e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2);
out_transmittance =  + 0.71171  + 0.36623 *lambda + 0.000800654 *x*dx + 0.0122549 *lens_ipow(dy, 2) + 0.0609113 *lens_ipow(dx, 2) + -0.508038 *lens_ipow(lambda, 2) + 0.247815 *lens_ipow(lambda, 3) + -4.22104 *lens_ipow(dx, 4) + -0.0287324 *y*lens_ipow(dy, 3) + -0.000595115 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.136797 *x*lens_ipow(dx, 3) + -8.54279 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -8.51052e-06 *lens_ipow(x, 2)*y*dy + -1.49111 *lens_ipow(dy, 4) + -8.58465e-06 *x*lens_ipow(y, 2)*dx + -3.13182e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00157465 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.141155 *y*lens_ipow(dx, 2)*dy + -6.77798e-06 *lens_ipow(x, 3)*dx + -0.140664 *x*dx*lens_ipow(dy, 2) + -0.00221262 *x*y*dx*dy + -0.000586228 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -5.79194e-06 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.000738635 *lens_ipow(y, 3)*lens_ipow(dy, 3) + -34.4113 *lens_ipow(dy, 6) + -0.0527074 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -2.06225 *y*lens_ipow(dy, 5) + -4.52846e-11 *lens_ipow(y, 7)*dy;
} break;
