case minolta__fisheye__1978__16mm:
{
out[0] =  + 37.6685 *dx + 0.759009 *x + -0.126328 *x*lambda + -2.62285 *dx*lambda + 3.3061 *y*dx*dy + 0.0534087 *x*y*dy + 0.0890442 *lens_ipow(x, 2)*dx + 63.1316 *lens_ipow(dx, 3) + 0.0854813 *x*lens_ipow(lambda, 2) + 63.1171 *dx*lens_ipow(dy, 2) + 0.0005434 *x*lens_ipow(y, 2) + 0.000524518 *lens_ipow(x, 3) + 1.09803 *x*lens_ipow(dy, 2) + 4.35379 *x*lens_ipow(dx, 2) + 0.0376109 *lens_ipow(y, 2)*dx + 1.66962 *dx*lens_ipow(lambda, 3) + -6.87775e-06 *lens_ipow(y, 4)*dx + -7.71222e-08 *x*lens_ipow(y, 4) + 41.8824 *dx*lens_ipow(dy, 4) + 0.0610037 *lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 2.98404 *y*dx*lens_ipow(dy, 3) + 0.00843765 *x*y*lens_ipow(dy, 3) + 0.00036693 *x*lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.639147 *y*lens_ipow(dx, 3)*dy*lambda + 0.0093082 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lambda + 12.6985 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -2.02516e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*dx + -5.12895e-13 *lens_ipow(x, 5)*lens_ipow(y, 4);
out[1] =  + 0.758933 *y + 37.6595 *dy + -2.58853 *dy*lambda + -0.126325 *y*lambda + 1.07499 *y*lens_ipow(dx, 2) + 0.0891274 *lens_ipow(y, 2)*dy + 4.35648 *y*lens_ipow(dy, 2) + 3.20535 *x*dx*dy + 0.0518898 *x*y*dx + 61.4121 *lens_ipow(dx, 2)*dy + 0.0859262 *y*lens_ipow(lambda, 2) + 0.000522451 *lens_ipow(x, 2)*y + 0.00052592 *lens_ipow(y, 3) + 0.0361946 *lens_ipow(x, 2)*dy + 63.1414 *lens_ipow(dy, 3) + 1.67249 *dy*lens_ipow(lambda, 3) + 0.0870487 *lens_ipow(x, 2)*lens_ipow(dx, 2)*dy + 3.96772 *x*lens_ipow(dx, 3)*dy + 9.44877 *lens_ipow(dx, 2)*lens_ipow(dy, 3) + 0.575586 *x*dx*lens_ipow(dy, 3) + 0.00835634 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.000597607 *lens_ipow(x, 3)*dx*dy + 58.9404 *lens_ipow(dx, 4)*dy + 7.34058e-09 *x*lens_ipow(y, 5)*dx*lambda + 2.33481e-06 *lens_ipow(y, 5)*lens_ipow(dx, 4)*lambda + 0.000132682 *x*lens_ipow(y, 3)*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -8.12154e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lambda + -1.33636e-12 *lens_ipow(x, 4)*lens_ipow(y, 5)*lambda;
out[2] =  + -0.569545 *dx + -0.0381291 *x + -0.00325389 *x*lambda + -0.127254 *dx*lambda + 0.0409161 *y*dx*dy + 0.00290472 *x*y*dy + 0.00347671 *lens_ipow(x, 2)*dx + -1.06425 *lens_ipow(dx, 3) + -1.02167 *dx*lens_ipow(dy, 2) + 2.36465e-05 *x*lens_ipow(y, 2) + 2.39039e-05 *lens_ipow(x, 3) + 0.0405608 *x*lens_ipow(dy, 2) + 0.0769936 *x*lens_ipow(dx, 2) + 0.000653619 *lens_ipow(y, 2)*dx + -0.0591927 *lens_ipow(y, 2)*lens_ipow(dx, 5) + -0.00289385 *x*lens_ipow(y, 2)*lens_ipow(dx, 4) + 2.6985e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.33654e-10 *lens_ipow(x, 3)*lens_ipow(y, 4) + 2.71058e-10 *lens_ipow(x, 5)*lens_ipow(y, 2) + -4.88275e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -0.0100718 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(dy, 2) + -0.239949 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 5.31631e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + 0.0179605 *x*y*lens_ipow(dx, 4)*dy + -4.64749e-06 *lens_ipow(x, 3)*y*lens_ipow(dy, 3) + -4.75732e-11 *lens_ipow(x, 7)*lambda + 2.12469e-07 *lens_ipow(x, 5)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.000243041 *lens_ipow(x, 3)*lens_ipow(dx, 4)*lens_ipow(lambda, 3);
out[3] =  + -0.0378894 *y + -0.561379 *dy + -0.126194 *dy*lambda + -0.00331425 *y*lambda + 0.0377427 *y*lens_ipow(dx, 2) + 0.00266728 *lens_ipow(y, 2)*dy + 0.0448751 *y*lens_ipow(dy, 2) + 0.0464106 *x*dx*dy + 0.0029632 *x*y*dx + -1.08102 *lens_ipow(dx, 2)*dy + 2.37591e-05 *lens_ipow(x, 2)*y + 1.6824e-05 *lens_ipow(y, 3) + 0.000701671 *lens_ipow(x, 2)*dy + -1.47992 *lens_ipow(dy, 3) + -0.0298889 *x*lens_ipow(dx, 3)*dy + -0.134006 *x*dx*lens_ipow(dy, 3) + -0.000779137 *x*y*lens_ipow(dx, 3) + -0.00159431 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.00248263 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 4.09711e-05 *lens_ipow(y, 4)*dy*lambda + 0.00294056 *lens_ipow(y, 3)*lens_ipow(dy, 2)*lambda + 2.00679e-07 *lens_ipow(y, 5)*lambda + 0.994959 *y*lens_ipow(dy, 4)*lambda + 0.0896274 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + 5.48173e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2) + -4.41438e-11 *lens_ipow(x, 2)*lens_ipow(y, 5) + -7.16968e-11 *lens_ipow(x, 4)*lens_ipow(y, 3) + 2.39693e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*lens_ipow(dy, 2);
out_transmittance =  + 0.66159  + 0.562539 *lambda + -0.00662356 *y*dy + -0.00269778 *x*dx + -5.87632e-05 *lens_ipow(y, 2) + -0.181229 *lens_ipow(dy, 2) + -2.07694e-05 *lens_ipow(x, 2) + -0.0810747 *lens_ipow(dx, 2) + -0.7803 *lens_ipow(lambda, 2) + 0.38075 *lens_ipow(lambda, 3) + -4.49279 *lens_ipow(dx, 4) + -0.317365 *x*lens_ipow(dx, 3) + -0.141222 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.19335e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.00848128 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -0.000103222 *lens_ipow(x, 3)*dx + -5.0296e-07 *lens_ipow(x, 4) + 0.000256292 *x*y*dx*dy + -23.5885 *lens_ipow(dy, 6) + -0.0177187 *lens_ipow(y, 2)*lens_ipow(dy, 4) + -1.28309 *y*lens_ipow(dy, 5) + -0.693263 *y*lens_ipow(dy, 7) + -0.000103393 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 0.00167243 *lens_ipow(y, 3)*lens_ipow(dy, 5) + 3.18868e-05 *lens_ipow(y, 4)*lens_ipow(dy, 4) + 1.5512e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + -143.864 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + 0.2157 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3);
} break;
