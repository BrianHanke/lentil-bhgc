case asahi__takumar__1969__75mm:
{
out[0] =  + 45.6738 *dx + 0.337152 *x + 9.17616 *dx*lambda + 0.181237 *x*lambda + -6.27137 *dx*lens_ipow(lambda, 2) + -26.3671 *dx*lens_ipow(dy, 2) + -27.0473 *lens_ipow(dx, 3) + -0.133001 *y*dx*dy + 0.00143104 *lens_ipow(y, 2)*dx + -0.124195 *x*lens_ipow(lambda, 2) + -0.16488 *x*lens_ipow(dy, 2) + -0.280192 *x*lens_ipow(dx, 2) + 0.00106194 *x*y*dy + -6.76196e-05 *x*lens_ipow(y, 2) + 0.00238312 *lens_ipow(x, 2)*dx + -6.79531e-05 *lens_ipow(x, 3) + 4.75484 *lens_ipow(dx, 5) + -0.00621918 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.241217 *x*lens_ipow(dy, 4) + -0.00758644 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -4.30883 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + 0.101893 *x*y*lens_ipow(dx, 4)*dy + -5.38275 *y*dx*lens_ipow(dy, 7) + -7.21287e-13 *lens_ipow(x, 5)*lens_ipow(y, 4);
out[1] =  + 45.6991 *dy + 0.337942 *y + 9.07613 *dy*lambda + 0.179175 *y*lambda + -6.18285 *dy*lens_ipow(lambda, 2) + -27.058 *lens_ipow(dy, 3) + -26.2691 *lens_ipow(dx, 2)*dy + -0.123169 *y*lens_ipow(lambda, 2) + -0.279266 *y*lens_ipow(dy, 2) + -0.163908 *y*lens_ipow(dx, 2) + 0.00237704 *lens_ipow(y, 2)*dy + -6.81247e-05 *lens_ipow(y, 3) + -0.140408 *x*dx*dy + 0.00105714 *x*y*dx + 0.0014235 *lens_ipow(x, 2)*dy + -6.77846e-05 *lens_ipow(x, 2)*y + 4.91716 *lens_ipow(dy, 5) + 0.237216 *y*lens_ipow(dx, 4) + -0.0076363 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -0.00603336 *lens_ipow(x, 2)*lens_ipow(dy, 3) + 0.107653 *x*y*dx*lens_ipow(dy, 4) + -38.76 *x*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -1.65896e-12 *lens_ipow(x, 4)*lens_ipow(y, 5) + 1.73343e-12 *lens_ipow(x, 4)*lens_ipow(y, 5)*lambda;
out[2] =  + 0.357088 *dx + -0.0194228 *x + 0.00567479 *x*lambda + -0.741251 *dx*lens_ipow(dy, 2) + -0.712789 *lens_ipow(dx, 3) + -0.0160031 *y*dx*dy + -7.30217e-05 *lens_ipow(y, 2)*dx + -0.00390186 *x*lens_ipow(lambda, 2) + -0.00900144 *x*lens_ipow(dy, 2) + -0.0234731 *x*lens_ipow(dx, 2) + -6.18621e-05 *x*y*dy + -4.26782e-06 *x*lens_ipow(y, 2) + -0.000111587 *lens_ipow(x, 2)*dx + -4.24835e-06 *lens_ipow(x, 3) + -0.0240658 *y*lens_ipow(dx, 3)*dy + -0.0395955 *x*lens_ipow(dx, 4) + -0.000975328 *lens_ipow(x, 2)*lens_ipow(dx, 3) + 2.68669e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 1.3718 *lens_ipow(dx, 3)*lens_ipow(dy, 2)*lambda + -0.000405426 *x*y*lens_ipow(dy, 3)*lambda + -0.121907 *y*dx*lens_ipow(dy, 5) + 0.000129057 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy + 8.47575e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -3.32152e-08 *lens_ipow(x, 5)*lens_ipow(dx, 2);
out[3] =  + 0.357023 *dy + -0.0194519 *y + 0.00574809 *y*lambda + -0.712948 *lens_ipow(dy, 3) + -0.734823 *lens_ipow(dx, 2)*dy + -0.00394983 *y*lens_ipow(lambda, 2) + -0.0235361 *y*lens_ipow(dy, 2) + -0.00893646 *y*lens_ipow(dx, 2) + -0.000112355 *lens_ipow(y, 2)*dy + -4.24662e-06 *lens_ipow(y, 3) + -0.0159704 *x*dx*dy + -6.8774e-05 *x*y*dx + -7.31271e-05 *lens_ipow(x, 2)*dy + -4.2483e-06 *lens_ipow(x, 2)*y + -0.0393011 *y*lens_ipow(dy, 4) + -0.000975818 *lens_ipow(y, 2)*lens_ipow(dy, 3) + -0.0254752 *x*dx*lens_ipow(dy, 3) + 2.71471e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 1.28168 *lens_ipow(dx, 2)*lens_ipow(dy, 3)*lambda + -3.35331e-08 *lens_ipow(y, 5)*lens_ipow(dy, 2) + -0.111508 *x*lens_ipow(dx, 5)*dy + 0.000135715 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 8.40021e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -0.00198883 *x*y*lens_ipow(dx, 5)*lambda;
out_transmittance =  + 0.460795  + 0.657017 *lambda + -0.905051 *lens_ipow(lambda, 2) + -1.11203e-06 *lens_ipow(y, 2) + -1.07428e-06 *lens_ipow(x, 2) + 0.439239 *lens_ipow(lambda, 3) + -0.386963 *lens_ipow(dy, 4) + -0.872994 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.365021 *lens_ipow(dx, 4) + -0.00555939 *y*lens_ipow(dy, 3) + -0.0054753 *y*lens_ipow(dx, 2)*dy + -0.00546335 *x*dx*lens_ipow(dy, 2) + -0.00602647 *x*lens_ipow(dx, 3) + 6.34323e-07 *x*lens_ipow(y, 2)*dx + 5.2845e-07 *lens_ipow(x, 2)*y*dy + -0.504657 *lens_ipow(dx, 6) + -1.11926e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -1.08048e-07 *lens_ipow(x, 4)*lens_ipow(dx, 2) + -0.000206877 *lens_ipow(x, 2)*lens_ipow(dy, 4)*lambda + -4.27947 *lens_ipow(dy, 8)*lambda + -30.9937 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lambda + -0.00210353 *lens_ipow(y, 2)*lens_ipow(dx, 6)*lens_ipow(lambda, 2) + -0.131047 *y*lens_ipow(dy, 7)*lens_ipow(lambda, 3) + 0.0301361 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lens_ipow(lambda, 3);
} break;
