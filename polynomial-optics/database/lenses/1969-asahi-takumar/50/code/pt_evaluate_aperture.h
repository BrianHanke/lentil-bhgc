case asahi__takumar__1969__50mm:
{
out[0] =  + 30.5049 *dx + 0.329174 *x + 6.01689 *dx*lambda + 0.202922 *x*lambda + -4.16436 *dx*lens_ipow(lambda, 2) + -17.4556 *dx*lens_ipow(dy, 2) + -18.1709 *lens_ipow(dx, 3) + -0.192721 *y*dx*dy + -0.142731 *x*lens_ipow(lambda, 2) + -0.161926 *x*lens_ipow(dy, 2) + -0.279053 *x*lens_ipow(dx, 2) + 0.00165428 *x*y*dy + -0.000111406 *x*lens_ipow(y, 2) + 0.0036776 *lens_ipow(x, 2)*dx + -0.000114397 *lens_ipow(x, 3) + 0.104387 *y*dx*dy*lambda + 0.00360287 *lens_ipow(y, 2)*dx*lambda + 0.230411 *x*lens_ipow(dy, 4) + -2.10355e-07 *x*lens_ipow(y, 4) + -0.0124531 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -7.16216e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1.90249e-07 *lens_ipow(x, 5) + 6.61838 *lens_ipow(dx, 5)*lambda + 5.91987e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -0.0268584 *lens_ipow(y, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -8.50346 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lambda + 0.243122 *x*y*lens_ipow(dx, 4)*dy*lambda + -4.29393e-11 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy;
out[1] =  + 30.5276 *dy + 0.32963 *y + 5.92349 *dy*lambda + 0.200971 *y*lambda + -4.08016 *dy*lens_ipow(lambda, 2) + -18.0714 *lens_ipow(dy, 3) + -17.5163 *lens_ipow(dx, 2)*dy + -0.140901 *y*lens_ipow(lambda, 2) + -0.277072 *y*lens_ipow(dy, 2) + -0.163485 *y*lens_ipow(dx, 2) + 0.00370915 *lens_ipow(y, 2)*dy + -0.000113522 *lens_ipow(y, 3) + -0.19434 *x*dx*dy + 0.0016427 *x*y*dx + -0.000111942 *lens_ipow(x, 2)*y + 0.0980336 *x*dx*dy*lambda + 0.00352017 *lens_ipow(x, 2)*dy*lambda + 0.240269 *y*lens_ipow(dx, 4) + -0.0124114 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -1.93144e-07 *lens_ipow(y, 5) + -7.08109e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -2.07091e-07 *lens_ipow(x, 4)*y + 5.88861 *lens_ipow(dy, 5)*lambda + 5.77064e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + -0.0249123 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 0.265028 *x*y*dx*lens_ipow(dy, 4)*lambda + -76.3066 *x*lens_ipow(dx, 5)*lens_ipow(dy, 3)*lambda + -4.14281e-11 *lens_ipow(x, 3)*lens_ipow(y, 6)*dx*dy;
out[2] =  + 0.357771 *dx + -0.0296855 *x + 0.0101779 *x*lambda + -0.703354 *dx*lens_ipow(dy, 2) + -0.743221 *lens_ipow(dx, 3) + -0.0266631 *y*dx*dy + -0.000151198 *lens_ipow(y, 2)*dx + -0.00739776 *x*lens_ipow(lambda, 2) + -0.0119145 *x*lens_ipow(dy, 2) + -0.0395432 *x*lens_ipow(dx, 2) + -0.000135461 *x*y*dy + -1.19806e-05 *x*lens_ipow(y, 2) + -0.000380977 *lens_ipow(x, 2)*dx + -1.23738e-05 *lens_ipow(x, 3) + -1.28446e-08 *x*lens_ipow(y, 4) + 9.36214e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -9.71553e-06 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -3.87356e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 1.13411e-06 *lens_ipow(x, 4)*dx + -8.59546e-09 *lens_ipow(x, 5) + 4.77969e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -8.69502e-07 *lens_ipow(x, 4)*dx*lambda + 4.34739e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + 3.22971 *lens_ipow(dx, 7)*lambda + 0.000291378 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*dy*lambda + 7.08356e-09 *lens_ipow(y, 6)*lens_ipow(dx, 3) + 158.063 *lens_ipow(dx, 5)*lens_ipow(dy, 4)*lambda + 1.54944e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx*lambda;
out[3] =  + 0.357532 *dy + -0.0297452 *y + 0.0103829 *y*lambda + -0.745592 *lens_ipow(dy, 3) + -0.700644 *lens_ipow(dx, 2)*dy + -0.00757222 *y*lens_ipow(lambda, 2) + -0.0395322 *y*lens_ipow(dy, 2) + -0.0121053 *y*lens_ipow(dx, 2) + -0.000375296 *lens_ipow(y, 2)*dy + -1.22772e-05 *lens_ipow(y, 3) + -0.0255495 *x*dx*dy + -0.00014229 *x*y*dx + -0.000140011 *lens_ipow(x, 2)*dy + -1.19233e-05 *lens_ipow(x, 2)*y + -9.35939e-06 *lens_ipow(y, 3)*lens_ipow(dx, 2) + 1.12998e-06 *lens_ipow(y, 4)*dy + -8.86e-09 *lens_ipow(y, 5) + 8.06182e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -4.00631e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.31014e-08 *lens_ipow(x, 4)*y + -8.85597e-07 *lens_ipow(y, 4)*dy*lambda + 4.77163e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + 4.1772e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + 3.04613 *lens_ipow(dy, 7)*lambda + 9.36553 *lens_ipow(dx, 2)*lens_ipow(dy, 5)*lambda + 6.30406e-09 *lens_ipow(x, 6)*lens_ipow(dy, 3) + 1.62537e-11 *lens_ipow(x, 2)*lens_ipow(y, 6)*dy*lambda + -20.5689 *x*lens_ipow(dx, 7)*lens_ipow(dy, 3);
out_transmittance =  + 0.460243  + 0.659076 *lambda + -0.90806 *lens_ipow(lambda, 2) + -0.000272537 *y*dy + 0.440757 *lens_ipow(lambda, 3) + -0.317234 *lens_ipow(dy, 4) + -0.623934 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.362145 *lens_ipow(dx, 4) + 1.25354e-06 *lens_ipow(y, 3)*dy + -1.42717e-08 *lens_ipow(y, 4) + -0.00911397 *x*dx*lens_ipow(dy, 2) + -3.84625e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.84865e-08 *lens_ipow(x, 4) + -0.558199 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.0157845 *y*lens_ipow(dx, 2)*dy*lambda + -0.0125261 *x*lens_ipow(dx, 3)*lambda + -0.000204828 *x*y*dx*dy*lambda + -0.800107 *lens_ipow(dy, 6) + -0.054832 *y*lens_ipow(dy, 5) + -0.000425399 *lens_ipow(x, 2)*lens_ipow(dy, 4) + -0.000798996 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lambda + -0.0013429 *lens_ipow(x, 2)*lens_ipow(dx, 4)*lambda + -10.8484 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -0.145762 *x*lens_ipow(dx, 7) + -5.78317 *lens_ipow(dx, 8)*lambda + 0.034611 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lambda + -0.018977 *lens_ipow(y, 2)*lens_ipow(dy, 8) + -4.98847e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2);
} break;
