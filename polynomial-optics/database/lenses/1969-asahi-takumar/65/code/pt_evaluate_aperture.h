case asahi__takumar__1969__65mm:
{
out[0] =  + 39.5196 *dx + 0.334219 *x + 8.04654 *dx*lambda + 0.188519 *x*lambda + -5.51125 *dx*lens_ipow(lambda, 2) + -22.768 *dx*lens_ipow(dy, 2) + -22.5418 *lens_ipow(dx, 3) + -0.132458 *y*dx*dy + 0.00159413 *lens_ipow(y, 2)*dx + -0.130241 *x*lens_ipow(lambda, 2) + -0.165402 *x*lens_ipow(dy, 2) + -0.275309 *x*lens_ipow(dx, 2) + 0.00123938 *x*y*dy + -8.73446e-05 *x*lens_ipow(y, 2) + 0.00283016 *lens_ipow(x, 2)*dx + -7.57708e-05 *lens_ipow(x, 3) + -0.279459 *y*dx*lens_ipow(dy, 3) + -0.00658781 *lens_ipow(y, 2)*lens_ipow(dx, 3) + 0.245526 *x*lens_ipow(dy, 4) + -0.00956435 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -5.69623e-08 *lens_ipow(x, 5) + 0.134774 *x*y*lens_ipow(dx, 4)*dy + -6.4667e-10 *lens_ipow(x, 3)*lens_ipow(y, 4) + 2.23749e-12 *lens_ipow(x, 3)*lens_ipow(y, 6)*lens_ipow(lambda, 2);
out[1] =  + 39.7272 *dy + 0.336227 *y + 7.57255 *dy*lambda + 0.18659 *y*lambda + -5.22297 *dy*lens_ipow(lambda, 2) + -23.4536 *lens_ipow(dy, 3) + -22.7883 *lens_ipow(dx, 2)*dy + -0.128843 *y*lens_ipow(lambda, 2) + -0.278117 *y*lens_ipow(dy, 2) + -0.164536 *y*lens_ipow(dx, 2) + 0.00277422 *lens_ipow(y, 2)*dy + -9.49952e-05 *lens_ipow(y, 3) + -0.141509 *x*dx*dy + 0.00125947 *x*y*dx + -9.45247e-05 *lens_ipow(x, 2)*y + 0.00288068 *lens_ipow(x, 2)*dy*lambda + 0.247988 *y*lens_ipow(dx, 4) + -0.00865712 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 7.79017 *lens_ipow(dy, 5)*lambda + 0.12234 *x*y*dx*lens_ipow(dy, 4) + -0.0215547 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + -37.7425 *x*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -3.34291e-12 *lens_ipow(x, 4)*lens_ipow(y, 5) + 3.37208e-12 *lens_ipow(x, 4)*lens_ipow(y, 5)*lambda;
out[2] =  + 0.35483 *dx + -0.0224734 *x + 0.00686869 *x*lambda + -0.677992 *dx*lens_ipow(dy, 2) + -0.689397 *lens_ipow(dx, 3) + -0.0197984 *y*dx*dy + -8.32307e-05 *lens_ipow(y, 2)*dx + -0.0048578 *x*lens_ipow(lambda, 2) + -0.0102079 *x*lens_ipow(dy, 2) + -0.0282913 *x*lens_ipow(dx, 2) + -6.3053e-06 *x*lens_ipow(y, 2) + -0.000199478 *lens_ipow(x, 2)*dx + -6.50021e-06 *lens_ipow(x, 3) + -0.000132909 *x*y*dy*lambda + 1.36958e-05 *lens_ipow(x, 2)*y*dx*dy + -1.03325e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 3.6907e-07 *lens_ipow(x, 4)*dx + -0.0577127 *x*lens_ipow(dx, 4)*lambda + -0.00135693 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lambda + 1.32614e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -0.00142823 *x*y*lens_ipow(dy, 5) + 1.64324e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -0.477014 *y*lens_ipow(dx, 3)*lens_ipow(dy, 3)*lambda + 2.28798e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lambda;
out[3] =  + 0.355267 *dy + -0.0226233 *y + 0.00721661 *y*lambda + -0.721575 *lens_ipow(dy, 3) + -0.679221 *lens_ipow(dx, 2)*dy + -0.00514031 *y*lens_ipow(lambda, 2) + -0.0303871 *y*lens_ipow(dy, 2) + -0.0103029 *y*lens_ipow(dx, 2) + -0.000172531 *lens_ipow(y, 2)*dy + -5.28731e-06 *lens_ipow(y, 3) + -0.0199397 *x*dx*dy + -8.04082e-05 *lens_ipow(x, 2)*dy + -6.18092e-06 *lens_ipow(x, 2)*y + -0.000132546 *x*y*dx*lambda + -4.69007e-09 *lens_ipow(y, 5) + -0.000286664 *x*y*lens_ipow(dx, 3) + -6.6018e-09 *lens_ipow(x, 2)*lens_ipow(y, 3) + 0.000144495 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 1.56589e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + 2.46714 *lens_ipow(dy, 7)*lambda + 2.61678e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lambda + -2.81569 *x*lens_ipow(dx, 3)*lens_ipow(dy, 5) + 5.24785e-11 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(lambda, 2) + -2.97422e-13 *lens_ipow(x, 8)*y*lens_ipow(dy, 2);
out_transmittance =  + 0.460637  + 0.657672 *lambda + -0.906098 *lens_ipow(lambda, 2) + -1.6956e-06 *lens_ipow(y, 2) + 0.439887 *lens_ipow(lambda, 3) + -0.406475 *lens_ipow(dy, 4) + -0.875603 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.314612 *lens_ipow(dx, 4) + -0.00694601 *y*lens_ipow(dy, 3) + -0.00614172 *y*lens_ipow(dx, 2)*dy + -0.0064607 *x*dx*lens_ipow(dy, 2) + -0.00689077 *x*lens_ipow(dx, 3) + 8.1139e-07 *x*lens_ipow(y, 2)*dx + -5.60757e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 9.14858e-07 *lens_ipow(x, 2)*y*dy + -6.31443e-09 *lens_ipow(x, 4) + -0.825143 *lens_ipow(dx, 6) + -1.68714e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.000285085 *lens_ipow(y, 2)*lens_ipow(dx, 4)*lambda + -0.000968262 *lens_ipow(x, 2)*lens_ipow(dy, 6) + -2.72499 *lens_ipow(dy, 8)*lambda + -29.8812 *lens_ipow(dx, 4)*lens_ipow(dy, 4)*lambda + -0.184305 *x*lens_ipow(dx, 9) + 0.133935 *x*y*lens_ipow(dx, 5)*lens_ipow(dy, 3)*lambda;
} break;
