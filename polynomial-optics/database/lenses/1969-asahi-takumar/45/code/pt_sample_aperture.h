case asahi__takumar__1969__45mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 27.2982 *begin_dx + 0.325195 *begin_x + 5.74527 *begin_dx*begin_lambda + 0.219698 *begin_x*begin_lambda + -3.94359 *begin_dx*lens_ipow(begin_lambda, 2) + -15.6996 *begin_dx*lens_ipow(begin_dy, 2) + -15.5426 *lens_ipow(begin_dx, 3) + -0.138007 *begin_y*begin_dx*begin_dy + 0.00227197 *lens_ipow(begin_y, 2)*begin_dx + -0.15608 *begin_x*lens_ipow(begin_lambda, 2) + -0.269509 *begin_x*lens_ipow(begin_dx, 2) + 0.00478297 *begin_x*begin_y*begin_dy + -0.000166685 *begin_x*lens_ipow(begin_y, 2) + 0.00424008 *lens_ipow(begin_x, 2)*begin_dx + -0.000199545 *lens_ipow(begin_x, 3) + -0.282869 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + -0.00541369 *begin_x*begin_y*begin_dy*begin_lambda + 3.47114e-05 *lens_ipow(begin_x, 3)*begin_lambda + -0.00966002 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -2.23761e-07 *begin_x*lens_ipow(begin_y, 4) + 0.0390163 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_dy*begin_lambda + -0.0414476 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -3.23815e-09 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + -5.95383e-10 *lens_ipow(begin_x, 7) + 1.1269 *begin_x*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 3) + -38.2504 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + -4.29881e-12 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6) + 7.45448e-12 *lens_ipow(begin_x, 7)*lens_ipow(begin_y, 2)*begin_lambda;
  pred_y =  + 27.3668 *begin_dy + 0.333001 *begin_y + 5.53942 *begin_dy*begin_lambda + 0.196075 *begin_y*begin_lambda + -3.78333 *begin_dy*lens_ipow(begin_lambda, 2) + -15.599 *lens_ipow(begin_dy, 3) + -15.7564 *lens_ipow(begin_dx, 2)*begin_dy + -0.144811 *begin_y*lens_ipow(begin_lambda, 2) + -0.272971 *begin_y*lens_ipow(begin_dy, 2) + -0.162163 *begin_y*lens_ipow(begin_dx, 2) + 0.0042293 *lens_ipow(begin_y, 2)*begin_dy + -0.000176834 *lens_ipow(begin_y, 3) + -0.101926 *begin_x*begin_dx*begin_dy + 0.00171584 *begin_x*begin_y*begin_dx + 0.00235656 *lens_ipow(begin_x, 2)*begin_dy + -0.000173262 *lens_ipow(begin_x, 2)*begin_y + 8.03454e-05 *lens_ipow(begin_y, 3)*begin_lambda + 8.20706e-05 *lens_ipow(begin_x, 2)*begin_y*begin_lambda + 0.22715 *begin_y*lens_ipow(begin_dx, 4) + -0.0147187 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + -3.17621e-07 *lens_ipow(begin_y, 5) + -0.338812 *begin_x*begin_dx*lens_ipow(begin_dy, 3) + -0.380277 *begin_x*lens_ipow(begin_dx, 3)*begin_dy + 0.0178232 *begin_x*begin_y*begin_dx*lens_ipow(begin_dy, 2) + -0.0107041 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3) + -6.5136e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -3.43279e-07 *lens_ipow(begin_x, 4)*begin_y + -6.94755e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6)*begin_dx*begin_dy;
  pred_dx =  + 0.356311 *begin_dx + -0.0327478 *begin_x + 0.0108074 *begin_x*begin_lambda + -0.669295 *begin_dx*lens_ipow(begin_dy, 2) + -0.749049 *lens_ipow(begin_dx, 3) + -0.027056 *begin_y*begin_dx*begin_dy + -0.000185543 *lens_ipow(begin_y, 2)*begin_dx + -0.0077526 *begin_x*lens_ipow(begin_lambda, 2) + -0.0136678 *begin_x*lens_ipow(begin_dy, 2) + -0.0440505 *begin_x*lens_ipow(begin_dx, 2) + -1.63791e-05 *begin_x*lens_ipow(begin_y, 2) + -1.99848e-05 *lens_ipow(begin_x, 3) + -0.00025191 *begin_x*begin_y*begin_dy*begin_lambda + -0.00112444 *lens_ipow(begin_x, 2)*begin_dx*begin_lambda + -2.3635e-08 *begin_x*lens_ipow(begin_y, 4) + 1.93403e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 0.730779 *lens_ipow(begin_dx, 5)*begin_lambda + -0.577382 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + 9.06771e-10 *lens_ipow(begin_y, 6)*begin_dx + 0.00252174 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 4) + 7.52379e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dy + -5.17148e-08 *lens_ipow(begin_x, 5)*lens_ipow(begin_dy, 2) + -2.56984e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + 5.76801e-09 *lens_ipow(begin_x, 6)*begin_dx + 2.4796e-10 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2)*begin_lambda + 0.00649186 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 3) + -0.00345069 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_lambda, 7) + 4.79038e-10 *lens_ipow(begin_x, 7)*lens_ipow(begin_dx, 2)*begin_lambda;
  pred_dy =  + 0.356629 *begin_dy + -0.0331327 *begin_y + 0.0124205 *begin_y*begin_lambda + -0.739698 *lens_ipow(begin_dy, 3) + -0.696557 *lens_ipow(begin_dx, 2)*begin_dy + -0.00908153 *begin_y*lens_ipow(begin_lambda, 2) + -0.0441313 *begin_y*lens_ipow(begin_dy, 2) + -0.0148865 *begin_y*lens_ipow(begin_dx, 2) + -0.000401033 *lens_ipow(begin_y, 2)*begin_dy + -2.03404e-05 *lens_ipow(begin_y, 3) + -0.0295744 *begin_x*begin_dx*begin_dy + -0.000221855 *begin_x*begin_y*begin_dx + -0.000174836 *lens_ipow(begin_x, 2)*begin_dy + -2.02885e-05 *lens_ipow(begin_x, 2)*begin_y + -3.82451e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 5.94996e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_lambda + 5.45573e-09 *lens_ipow(begin_y, 6)*begin_dy + 5.72818e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dx + 9.26004e-09 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 4)*begin_dy + 5.96151e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 3)*begin_dx + 6.31953e-09 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dy + 4.14247e-09 *lens_ipow(begin_x, 5)*begin_y*begin_dx + 3.25585 *lens_ipow(begin_dy, 7)*begin_lambda + 4.94066e-07 *begin_x*lens_ipow(begin_y, 4)*begin_dx*begin_dy*begin_lambda + 0.000185686 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4)*begin_lambda + 2.25194e-07 *lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + 9.75124e-09 *lens_ipow(begin_x, 6)*lens_ipow(begin_dy, 3) + 139.122 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 5)*begin_lambda;
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 27.2982  + 5.74527 *begin_lambda + -3.94359 *lens_ipow(begin_lambda, 2) + -15.6996 *lens_ipow(begin_dy, 2) + -46.6277 *lens_ipow(begin_dx, 2) + -0.138007 *begin_y*begin_dy + 0.00227197 *lens_ipow(begin_y, 2) + -0.539018 *begin_x*begin_dx + 0.00424008 *lens_ipow(begin_x, 2) + -0.0289801 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 0.0780327 *begin_x*begin_y*begin_dx*begin_dy*begin_lambda + -0.0414476 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*lens_ipow(begin_lambda, 2) + -114.751 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5)+0.0f;
  dx1_domega0(0, 1) =  + -31.3992 *begin_dx*begin_dy + -0.138007 *begin_y*begin_dx + 0.00478297 *begin_x*begin_y + -0.565738 *begin_x*begin_dy*begin_lambda + -0.00541369 *begin_x*begin_y*begin_lambda + 0.0390163 *begin_x*begin_y*lens_ipow(begin_dx, 2)*begin_lambda + -0.0828952 *lens_ipow(begin_x, 2)*begin_dx*begin_dy*lens_ipow(begin_lambda, 2) + 4.50761 *begin_x*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 3) + -191.252 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4)+0.0f;
  dx1_domega0(1, 0) =  + -31.5128 *begin_dx*begin_dy + -0.324325 *begin_y*begin_dx + -0.101926 *begin_x*begin_dy + 0.00171584 *begin_x*begin_y + 0.908599 *begin_y*lens_ipow(begin_dx, 3) + -0.0294375 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -0.338812 *begin_x*lens_ipow(begin_dy, 3) + -1.14083 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + 0.0178232 *begin_x*begin_y*lens_ipow(begin_dy, 2) + -6.94755e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6)*begin_dy+0.0f;
  dx1_domega0(1, 1) =  + 27.3668  + 5.53942 *begin_lambda + -3.78333 *lens_ipow(begin_lambda, 2) + -46.7971 *lens_ipow(begin_dy, 2) + -15.7564 *lens_ipow(begin_dx, 2) + -0.545941 *begin_y*begin_dy + 0.0042293 *lens_ipow(begin_y, 2) + -0.101926 *begin_x*begin_dx + 0.00235656 *lens_ipow(begin_x, 2) + -0.0147187 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -1.01643 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + -0.380277 *begin_x*lens_ipow(begin_dx, 3) + 0.0356464 *begin_x*begin_y*begin_dx*begin_dy + -0.0321124 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -6.94755e-11 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 6)*begin_dx+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
