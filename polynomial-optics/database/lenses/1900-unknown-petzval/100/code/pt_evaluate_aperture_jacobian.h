case unknown__petzval__1900__100mm:
{
const double dx00 =  + 0.728176  + 0.301287 *lambda + -0.419986 *lens_ipow(lambda, 2) + 0.114331 *lens_ipow(dy, 2) + 0.607287 *lens_ipow(dx, 2) + 0.00852689 *y*dy + 6.55281e-05 *lens_ipow(y, 2) + 0.0271671 *x*dx + 0.000177991 *lens_ipow(x, 2) + 0.205197 *lens_ipow(lambda, 3) + 4.81507e-06 *lens_ipow(y, 2)*lambda + 1.49757e-05 *lens_ipow(x, 2)*lambda + 2.03502e-06 *x*lens_ipow(y, 2)*dx + 0.000896677 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 2.80966e-05 *lens_ipow(x, 3)*dx + 2.04074e-07 *lens_ipow(x, 4) + -0.194778 *lens_ipow(dx, 4)*lambda + 4.76247e-07 *lens_ipow(y, 3)*dy*lambda + 4.76469e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -1.77996e-10 *lens_ipow(x, 5)*lens_ipow(y, 3)*dx*dy + 1.68047e-14 *lens_ipow(x, 6)*lens_ipow(y, 4)+0.0f;
const double dx01 =  + 0.513367 *dx*dy + 0.0115074 *y*dx + 0.00852689 *x*dy + 0.000131056 *x*y + 9.63014e-06 *x*y*lambda + 0.161841 *lens_ipow(dx, 3)*dy + 2.03502e-06 *lens_ipow(x, 2)*y*dx + 1.42874e-06 *x*lens_ipow(y, 2)*dy*lambda + 1.90587e-07 *lens_ipow(x, 5)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -8.8998e-11 *lens_ipow(x, 6)*lens_ipow(y, 2)*dx*dy + 9.60268e-15 *lens_ipow(x, 7)*lens_ipow(y, 3)+0.0f;
const double dx02 =  + 73.7384  + 19.2294 *lambda + -26.6564 *lens_ipow(lambda, 2) + 0.513367 *y*dy + 0.00575368 *lens_ipow(y, 2) + 1.21457 *x*dx + 0.0135836 *lens_ipow(x, 2) + 12.9936 *lens_ipow(lambda, 3) + 0.485524 *y*lens_ipow(dx, 2)*dy + 1.01751e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.000597785 *lens_ipow(x, 3)*dx + 7.02416e-06 *lens_ipow(x, 4) + -0.779111 *x*lens_ipow(dx, 3)*lambda + 1.90587e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -2.9666e-11 *lens_ipow(x, 6)*lens_ipow(y, 3)*dy+0.0f;
const double dx03 =  + 0.513367 *y*dx + 0.228662 *x*dy + 0.00852689 *x*y + 0.161841 *y*lens_ipow(dx, 3) + 4.76247e-07 *x*lens_ipow(y, 3)*lambda + 1.90587e-07 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + -2.9666e-11 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx+0.0f;
const double dx04 =  + 19.2294 *dx + 0.301287 *x + -53.3127 *dx*lambda + -0.839971 *x*lambda + 38.9808 *dx*lens_ipow(lambda, 2) + 0.61559 *x*lens_ipow(lambda, 2) + 4.81507e-06 *x*lens_ipow(y, 2) + 4.99191e-06 *lens_ipow(x, 3) + -0.194778 *x*lens_ipow(dx, 4) + 4.76247e-07 *x*lens_ipow(y, 3)*dy+0.0f;
const double dx10 =  + 0.513253 *dx*dy + 0.00845785 *y*dx + 0.0114512 *x*dy + 0.000132785 *x*y + -4.65399e-08 *x*lens_ipow(y, 3) + 9.28307e-07 *lens_ipow(y, 3)*dx*lambda + 1.22884e-07 *x*lens_ipow(y, 3)*lambda + 4.6115e-06 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + -2.31669e-05 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.58137e-15 *lens_ipow(x, 3)*lens_ipow(y, 7)+0.0f;
const double dx11 =  + 0.727939  + 0.301908 *lambda + -0.420129 *lens_ipow(lambda, 2) + 0.600997 *lens_ipow(dy, 2) + 0.112726 *lens_ipow(dx, 2) + 0.0267142 *y*dy + 0.000179165 *lens_ipow(y, 2) + 0.00845785 *x*dx + 6.63926e-05 *lens_ipow(x, 2) + 0.205436 *lens_ipow(lambda, 3) + -0.925979 *lens_ipow(dy, 4) + 0.00183467 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 4.61779e-05 *lens_ipow(y, 3)*dy + 3.109e-07 *lens_ipow(y, 4) + -6.98099e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 2.78492e-06 *x*lens_ipow(y, 2)*dx*lambda + 1.84327e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 4.6115e-06 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 2) + 258.305 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -3.47504e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.7674e-15 *lens_ipow(x, 4)*lens_ipow(y, 6)+0.0f;
const double dx12 =  + 0.225452 *y*dx + 0.513253 *x*dy + 0.00845785 *x*y + 9.28307e-07 *x*lens_ipow(y, 3)*lambda + 1033.22 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -2.31669e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)+0.0f;
const double dx13 =  + 73.7379  + 19.2421 *lambda + -26.661 *lens_ipow(lambda, 2) + 1.20199 *y*dy + 0.0133571 *lens_ipow(y, 2) + 0.513253 *x*dx + 0.00572558 *lens_ipow(x, 2) + 12.9868 *lens_ipow(lambda, 3) + -119.254 *lens_ipow(dy, 4) + -3.70391 *y*lens_ipow(dy, 3) + 0.00122312 *lens_ipow(y, 3)*dy + 1.15445e-05 *lens_ipow(y, 4) + 2.30575e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 2) + 1033.22 *y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -2.31669e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy+0.0f;
const double dx14 =  + 19.2421 *dy + 0.301908 *y + -53.3219 *dy*lambda + -0.840259 *y*lambda + 38.9605 *dy*lens_ipow(lambda, 2) + 0.616308 *y*lens_ipow(lambda, 2) + 9.28307e-07 *x*lens_ipow(y, 3)*dx + 6.14422e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 4.6115e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lambda+0.0f;
const double dx20 =  + -0.00883993  + 0.00992425 *lambda + -0.0138037 *lens_ipow(lambda, 2) + 0.00138665 *lens_ipow(dy, 2) + 0.00524655 *lens_ipow(dx, 2) + 0.000211074 *y*dy + 1.63677e-06 *lens_ipow(y, 2) + 0.000566258 *x*dx + 4.41696e-06 *lens_ipow(x, 2) + 0.00673151 *lens_ipow(lambda, 3) + 1.10985e-07 *lens_ipow(y, 2)*lambda + 4.07289e-07 *lens_ipow(x, 2)*lambda + 1.9807e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 6.61667e-07 *lens_ipow(x, 3)*dx + 5.20372e-09 *lens_ipow(x, 4) + 4.80151 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -3.38273e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + 2.64353e-16 *lens_ipow(x, 6)*lens_ipow(y, 4) + 5.81773e-15 *lens_ipow(x, 7)*lens_ipow(y, 2)*dx+0.0f;
const double dx21 =  + 0.00467274 *dx*dy + 0.00018318 *y*dx + 0.000211074 *x*dy + 3.27353e-06 *x*y + 2.2197e-07 *x*y*lambda + -2.53705e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*dy + 1.51059e-16 *lens_ipow(x, 7)*lens_ipow(y, 3) + 1.45443e-15 *lens_ipow(x, 8)*y*dx+0.0f;
const double dx22 =  + 0.478247  + 0.575316 *lambda + -0.796414 *lens_ipow(lambda, 2) + -0.346493 *lens_ipow(dy, 2) + -1.07315 *lens_ipow(dx, 2) + 0.00467274 *y*dy + 9.15902e-05 *lens_ipow(y, 2) + 0.0104931 *x*dx + 0.000283129 *lens_ipow(x, 2) + 0.387476 *lens_ipow(lambda, 3) + 1.32047e-05 *lens_ipow(x, 3)*dx + 1.65417e-07 *lens_ipow(x, 4) + 1.16763 *lens_ipow(dx, 4)*lens_ipow(lambda, 2) + 19.2061 *x*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -8.45682e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy + 7.27216e-16 *lens_ipow(x, 8)*lens_ipow(y, 2)+0.0f;
const double dx23 =  + -0.692986 *dx*dy + 0.00467274 *y*dx + 0.00277331 *x*dy + 0.000211074 *x*y + 19.2061 *x*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -8.45682e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx+0.0f;
const double dx24 =  + 0.575316 *dx + 0.00992425 *x + -1.59283 *dx*lambda + -0.0276074 *x*lambda + 1.16243 *dx*lens_ipow(lambda, 2) + 0.0201945 *x*lens_ipow(lambda, 2) + 1.10985e-07 *x*lens_ipow(y, 2) + 1.35763e-07 *lens_ipow(x, 3) + 0.467051 *lens_ipow(dx, 5)*lambda+0.0f;
const double dx30 =  + 0.00462518 *dx*dy + 0.000209422 *y*dx + 0.000180638 *x*dy + 3.34328e-06 *x*y + 1.52489e-08 *lens_ipow(y, 3)*dx + 4.61647e-08 *x*lens_ipow(y, 2)*dy + 1.2359e-09 *x*lens_ipow(y, 3)*lambda + -7.39139e-07 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 5.61005e-17 *lens_ipow(x, 3)*lens_ipow(y, 7)+0.0f;
const double dx31 =  + -0.00885353  + 0.0099762 *lambda + -0.0138764 *lens_ipow(lambda, 2) + 0.00530618 *lens_ipow(dy, 2) + 0.00138426 *lens_ipow(dx, 2) + 0.000562911 *y*dy + 4.49059e-06 *lens_ipow(y, 2) + 0.000209422 *x*dx + 1.67164e-06 *lens_ipow(x, 2) + 0.00677599 *lens_ipow(lambda, 3) + 1.95105e-07 *lens_ipow(y, 2)*lambda + 1.759e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 6.48404e-07 *lens_ipow(y, 3)*dy + 5.27049e-09 *lens_ipow(y, 4) + 4.57468e-08 *x*lens_ipow(y, 2)*dx + 4.61647e-08 *lens_ipow(x, 2)*y*dy + 1.85386e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 7.68939 *lens_ipow(dx, 4)*lens_ipow(dy, 4) + -1.10871e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 9.8176e-17 *lens_ipow(x, 4)*lens_ipow(y, 6)+0.0f;
const double dx32 =  + -0.692902 *dx*dy + 0.00276852 *y*dx + 0.00462518 *x*dy + 0.000209422 *x*y + 1.52489e-08 *x*lens_ipow(y, 3) + 30.7576 *y*lens_ipow(dx, 3)*lens_ipow(dy, 4) + -7.39139e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)+0.0f;
const double dx33 =  + 0.477609  + 0.578506 *lambda + -0.802025 *lens_ipow(lambda, 2) + -1.06013 *lens_ipow(dy, 2) + -0.346451 *lens_ipow(dx, 2) + 0.0106124 *y*dy + 0.000281455 *lens_ipow(y, 2) + 0.00462518 *x*dx + 9.03191e-05 *lens_ipow(x, 2) + 0.391117 *lens_ipow(lambda, 3) + 1.17267e-05 *lens_ipow(y, 3)*dy + 1.62101e-07 *lens_ipow(y, 4) + 2.30823e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 30.7576 *y*lens_ipow(dx, 4)*lens_ipow(dy, 3) + -7.39139e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy+0.0f;
const double dx34 =  + 0.578506 *dy + 0.0099762 *y + -1.60405 *dy*lambda + -0.0277529 *y*lambda + 1.17335 *dy*lens_ipow(lambda, 2) + 0.020328 *y*lens_ipow(lambda, 2) + 6.50349e-08 *lens_ipow(y, 3) + 6.17952e-10 *lens_ipow(x, 2)*lens_ipow(y, 3)+0.0f;
const double dx40 =  + 1.6971e-06 *x*lambda + -0.00301923 *lens_ipow(dx, 3) + -0.000307481 *y*dx*dy + -6.86577e-06 *lens_ipow(y, 2)*dx + -0.000165661 *x*lens_ipow(dy, 2) + -0.000613008 *x*lens_ipow(dx, 2) + -1.38056e-05 *x*y*dy + -2.43239e-07 *x*lens_ipow(y, 2) + -2.18783e-05 *lens_ipow(x, 2)*dx + -2.3031e-07 *lens_ipow(x, 3) + -5.21657e-06 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.03266e-05 *x*y*lens_ipow(dy, 3) + -9.76061e-09 *lens_ipow(x, 4)*dx + -1.58733e-10 *lens_ipow(x, 5) + -1.02832e-12 *lens_ipow(x, 3)*lens_ipow(y, 4) + 1.07798e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*dy*lambda + -5.19609e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3)+0.0f;
const double dx41 =  + 2.11302e-06 *y*lambda + -0.000398469 *y*lens_ipow(dy, 2) + -0.000163616 *y*lens_ipow(dx, 2) + -1.95834e-05 *lens_ipow(y, 2)*dy + -2.39472e-07 *lens_ipow(y, 3) + -0.000307481 *x*dx*dy + -1.37315e-05 *x*y*dx + -6.90281e-06 *lens_ipow(x, 2)*dy + -2.43239e-07 *lens_ipow(x, 2)*y + -1.04331e-05 *x*y*lens_ipow(dx, 3) + -5.16328e-06 *lens_ipow(x, 2)*lens_ipow(dy, 3) + -1.02832e-12 *lens_ipow(x, 4)*lens_ipow(y, 3) + 1.07798e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*dy*lambda + -5.19609e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3)+0.0f;
const double dx42 =  + 0.215406 *dx*lens_ipow(dy, 2) + -0.000163616 *lens_ipow(y, 2)*dx + -0.0090577 *x*lens_ipow(dx, 2) + -0.000307481 *x*y*dy + -6.86577e-06 *x*lens_ipow(y, 2) + -0.000613008 *lens_ipow(x, 2)*dx + -7.29276e-06 *lens_ipow(x, 3) + -1.56497e-05 *x*lens_ipow(y, 2)*lens_ipow(dx, 2) + -1.95212e-09 *lens_ipow(x, 5) + 3.59328e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy*lambda + -5.19609e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3)+0.0f;
const double dx43 =  + 0.215406 *lens_ipow(dx, 2)*dy + -0.000398469 *lens_ipow(y, 2)*dy + -6.52781e-06 *lens_ipow(y, 3) + -0.000307481 *x*y*dx + -0.000165661 *lens_ipow(x, 2)*dy + -6.90281e-06 *lens_ipow(x, 2)*y + -1.54898e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 2) + 3.59328e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lambda + -5.19609e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 3)+0.0f;
const double dx44 =  + 0.627663  + -2.63023 *lambda + 3.88274 *lens_ipow(lambda, 2) + 1.05651e-06 *lens_ipow(y, 2) + 8.48549e-07 *lens_ipow(x, 2) + -1.97276 *lens_ipow(lambda, 3) + 3.59328e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + -7.79413e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2)+0.0f;
} break;
