case unknown__petzval__1900__100mm:
{
out[0] =  + 73.7384 *dx + 0.728176 *x + 19.2294 *dx*lambda + 0.301287 *x*lambda + -26.6564 *dx*lens_ipow(lambda, 2) + 0.513367 *y*dx*dy + 0.00575368 *lens_ipow(y, 2)*dx + -0.419986 *x*lens_ipow(lambda, 2) + 0.114331 *x*lens_ipow(dy, 2) + 0.607287 *x*lens_ipow(dx, 2) + 0.00852689 *x*y*dy + 6.55281e-05 *x*lens_ipow(y, 2) + 0.0135836 *lens_ipow(x, 2)*dx + 5.93305e-05 *lens_ipow(x, 3) + 12.9936 *dx*lens_ipow(lambda, 3) + 0.205197 *x*lens_ipow(lambda, 3) + 4.81507e-06 *x*lens_ipow(y, 2)*lambda + 4.99191e-06 *lens_ipow(x, 3)*lambda + 0.161841 *y*lens_ipow(dx, 3)*dy + 1.01751e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + 0.000298892 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 7.02416e-06 *lens_ipow(x, 4)*dx + 4.08147e-08 *lens_ipow(x, 5) + -0.194778 *x*lens_ipow(dx, 4)*lambda + 4.76247e-07 *x*lens_ipow(y, 3)*dy*lambda + 9.52937e-08 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.9666e-11 *lens_ipow(x, 6)*lens_ipow(y, 3)*dx*dy + 2.40067e-15 *lens_ipow(x, 7)*lens_ipow(y, 4);
out[1] =  + 73.7379 *dy + 0.727939 *y + 19.2421 *dy*lambda + 0.301908 *y*lambda + -26.661 *dy*lens_ipow(lambda, 2) + -0.420129 *y*lens_ipow(lambda, 2) + 0.600997 *y*lens_ipow(dy, 2) + 0.112726 *y*lens_ipow(dx, 2) + 0.0133571 *lens_ipow(y, 2)*dy + 5.97218e-05 *lens_ipow(y, 3) + 0.513253 *x*dx*dy + 0.00845785 *x*y*dx + 0.00572558 *lens_ipow(x, 2)*dy + 6.63926e-05 *lens_ipow(x, 2)*y + 12.9868 *dy*lens_ipow(lambda, 3) + 0.205436 *y*lens_ipow(lambda, 3) + -23.8508 *lens_ipow(dy, 5) + -0.925979 *y*lens_ipow(dy, 4) + 0.000611558 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 1.15445e-05 *lens_ipow(y, 4)*dy + 6.21799e-08 *lens_ipow(y, 5) + -2.327e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 9.28307e-07 *x*lens_ipow(y, 3)*dx*lambda + 6.14422e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + 2.30575e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 258.305 *y*lens_ipow(dx, 4)*lens_ipow(dy, 4) + -1.15835e-05 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.95343e-16 *lens_ipow(x, 4)*lens_ipow(y, 7);
out[2] =  + 0.478247 *dx + -0.00883993 *x + 0.575316 *dx*lambda + 0.00992425 *x*lambda + -0.796414 *dx*lens_ipow(lambda, 2) + -0.346493 *dx*lens_ipow(dy, 2) + -0.357718 *lens_ipow(dx, 3) + 0.00467274 *y*dx*dy + 9.15902e-05 *lens_ipow(y, 2)*dx + -0.0138037 *x*lens_ipow(lambda, 2) + 0.00138665 *x*lens_ipow(dy, 2) + 0.00524655 *x*lens_ipow(dx, 2) + 0.000211074 *x*y*dy + 1.63677e-06 *x*lens_ipow(y, 2) + 0.000283129 *lens_ipow(x, 2)*dx + 1.47232e-06 *lens_ipow(x, 3) + 0.387476 *dx*lens_ipow(lambda, 3) + 0.00673151 *x*lens_ipow(lambda, 3) + 1.10985e-07 *x*lens_ipow(y, 2)*lambda + 1.35763e-07 *lens_ipow(x, 3)*lambda + 6.60233e-06 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 1.65417e-07 *lens_ipow(x, 4)*dx + 1.04074e-09 *lens_ipow(x, 5) + 0.233525 *lens_ipow(dx, 5)*lens_ipow(lambda, 2) + 4.80151 *x*lens_ipow(dx, 4)*lens_ipow(dy, 4) + -8.45682e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + 3.77648e-17 *lens_ipow(x, 7)*lens_ipow(y, 4) + 7.27216e-16 *lens_ipow(x, 8)*lens_ipow(y, 2)*dx;
out[3] =  + 0.477609 *dy + -0.00885353 *y + 0.578506 *dy*lambda + 0.0099762 *y*lambda + -0.802025 *dy*lens_ipow(lambda, 2) + -0.353378 *lens_ipow(dy, 3) + -0.346451 *lens_ipow(dx, 2)*dy + -0.0138764 *y*lens_ipow(lambda, 2) + 0.00530618 *y*lens_ipow(dy, 2) + 0.00138426 *y*lens_ipow(dx, 2) + 0.000281455 *lens_ipow(y, 2)*dy + 1.49686e-06 *lens_ipow(y, 3) + 0.00462518 *x*dx*dy + 0.000209422 *x*y*dx + 9.03191e-05 *lens_ipow(x, 2)*dy + 1.67164e-06 *lens_ipow(x, 2)*y + 0.391117 *dy*lens_ipow(lambda, 3) + 0.00677599 *y*lens_ipow(lambda, 3) + 6.50349e-08 *lens_ipow(y, 3)*lambda + 5.86333e-06 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 1.62101e-07 *lens_ipow(y, 4)*dy + 1.0541e-09 *lens_ipow(y, 5) + 1.52489e-08 *x*lens_ipow(y, 3)*dx + 2.30823e-08 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + 6.17952e-10 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + 7.68939 *y*lens_ipow(dx, 4)*lens_ipow(dy, 4) + -3.69569e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.40251e-17 *lens_ipow(x, 4)*lens_ipow(y, 7);
out_transmittance =  + 0.709408  + 0.627663 *lambda + -1.31512 *lens_ipow(lambda, 2) + 1.29425 *lens_ipow(lambda, 3) + 1.05651e-06 *lens_ipow(y, 2)*lambda + 8.48549e-07 *lens_ipow(x, 2)*lambda + -0.493191 *lens_ipow(lambda, 4) + 0.107703 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.000199235 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -8.1808e-05 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -6.52781e-06 *lens_ipow(y, 3)*dy + -5.98679e-08 *lens_ipow(y, 4) + -0.00301923 *x*lens_ipow(dx, 3) + -0.000307481 *x*y*dx*dy + -6.86577e-06 *x*lens_ipow(y, 2)*dx + -8.28304e-05 *lens_ipow(x, 2)*lens_ipow(dy, 2) + -0.000306504 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -6.90281e-06 *lens_ipow(x, 2)*y*dy + -1.2162e-07 *lens_ipow(x, 2)*lens_ipow(y, 2) + -7.29276e-06 *lens_ipow(x, 3)*dx + -5.75776e-08 *lens_ipow(x, 4) + -5.21657e-06 *x*lens_ipow(y, 2)*lens_ipow(dx, 3) + -5.16328e-06 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -1.95212e-09 *lens_ipow(x, 5)*dx + -2.64555e-11 *lens_ipow(x, 6) + -2.57079e-13 *lens_ipow(x, 4)*lens_ipow(y, 4) + 3.59328e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy*lambda + -2.59804e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 3);
} break;
