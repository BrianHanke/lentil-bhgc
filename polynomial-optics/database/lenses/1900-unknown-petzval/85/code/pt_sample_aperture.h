case unknown__petzval__1900__85mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 62.6941 *begin_dx + 0.729786 *begin_x + 0.291467 *begin_x*begin_lambda + 16.2221 *begin_dx*begin_lambda + 0.517575 *begin_y*begin_dx*begin_dy + 0.0099905 *begin_x*begin_y*begin_dy + 0.0160318 *lens_ipow(begin_x, 2)*begin_dx + -0.401112 *begin_x*lens_ipow(begin_lambda, 2) + 9.19733e-05 *begin_x*lens_ipow(begin_y, 2) + 8.56897e-05 *lens_ipow(begin_x, 3) + 0.115145 *begin_x*lens_ipow(begin_dy, 2) + 0.606557 *begin_x*lens_ipow(begin_dx, 2) + 0.00673083 *lens_ipow(begin_y, 2)*begin_dx + -22.3745 *begin_dx*lens_ipow(begin_lambda, 2) + 10.8466 *begin_dx*lens_ipow(begin_lambda, 3) + 0.193867 *begin_x*lens_ipow(begin_lambda, 3) + 1.10113e-05 *lens_ipow(begin_x, 4)*begin_dx + 0.272949 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 1.9176e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + 2.37024e-06 *lens_ipow(begin_x, 3)*begin_y*begin_dy + 0.00187757 *lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 2) + 0.00036301 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 7.47695e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_lambda + 4.04912e-07 *lens_ipow(begin_x, 5)*begin_lambda + 7.11313e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 2) + -6.79192e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_lambda, 2) + 3.87066e-07 *lens_ipow(begin_x, 5)*lens_ipow(begin_lambda, 3) + 1.46099e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_lambda, 2);
  pred_y =  + 0.72786 *begin_y + 62.6813 *begin_dy + 16.2795 *begin_dy*begin_lambda + 0.300939 *begin_y*begin_lambda + 0.118253 *begin_y*lens_ipow(begin_dx, 2) + 0.0160989 *lens_ipow(begin_y, 2)*begin_dy + 0.612785 *begin_y*lens_ipow(begin_dy, 2) + 0.518242 *begin_x*begin_dx*begin_dy + 0.0101635 *begin_x*begin_y*begin_dx + -0.416936 *begin_y*lens_ipow(begin_lambda, 2) + 9.47264e-05 *lens_ipow(begin_x, 2)*begin_y + -22.4924 *begin_dy*lens_ipow(begin_lambda, 2) + 8.54947e-05 *lens_ipow(begin_y, 3) + 0.00684215 *lens_ipow(begin_x, 2)*begin_dy + 0.202682 *begin_y*lens_ipow(begin_lambda, 3) + 10.9306 *begin_dy*lens_ipow(begin_lambda, 3) + 1.568e-05 *lens_ipow(begin_y, 4)*begin_dy + 0.0124216 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3) + -1.71981e-05 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 2) + -2.16242e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 9.42582e-08 *lens_ipow(begin_y, 5) + 0.000776229 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 1.16933e-08 *lens_ipow(begin_y, 5)*begin_lambda + 3.94969e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_lambda + 0.000790013 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 3) + 1.09145e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -176826 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 7) + 1.07179e-15 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 7);
  pred_dx =  + 0.478142 *begin_dx + -0.0104251 *begin_x + 0.0117586 *begin_x*begin_lambda + 0.574288 *begin_dx*begin_lambda + 0.00585972 *begin_y*begin_dx*begin_dy + 0.000288643 *begin_x*begin_y*begin_dy + 0.000385353 *lens_ipow(begin_x, 2)*begin_dx + -0.353215 *lens_ipow(begin_dx, 3) + -0.016314 *begin_x*lens_ipow(begin_lambda, 2) + -0.333277 *begin_dx*lens_ipow(begin_dy, 2) + 2.74705e-06 *begin_x*lens_ipow(begin_y, 2) + 2.37571e-06 *lens_ipow(begin_x, 3) + 0.00157303 *begin_x*lens_ipow(begin_dy, 2) + 0.0060569 *begin_x*lens_ipow(begin_dx, 2) + 0.000129348 *lens_ipow(begin_y, 2)*begin_dx + -0.793061 *begin_dx*lens_ipow(begin_lambda, 2) + 0.385071 *begin_dx*lens_ipow(begin_lambda, 3) + 0.00793855 *begin_x*lens_ipow(begin_lambda, 3) + 1.23284e-07 *lens_ipow(begin_x, 3)*begin_lambda + 3.56121e-07 *lens_ipow(begin_x, 4)*begin_dx + 0.0177669 *begin_x*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 2.79878e-09 *lens_ipow(begin_x, 5) + 1.19716e-08 *begin_x*lens_ipow(begin_y, 3)*begin_dy + -7.25787e-06 *lens_ipow(begin_x, 2)*begin_y*begin_dx*begin_dy + 1.10188e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dx, 2) + 9.42279e-10 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_lambda + -8.47939e-11 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy + 1.75137e-14 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4);
  pred_dy =  + -0.01042 *begin_y + 0.49303 *begin_dy + 0.462063 *begin_dy*begin_lambda + 0.0117282 *begin_y*begin_lambda + 0.00172769 *begin_y*lens_ipow(begin_dx, 2) + 0.000394975 *lens_ipow(begin_y, 2)*begin_dy + 0.00646 *begin_y*lens_ipow(begin_dy, 2) + 0.00570326 *begin_x*begin_dx*begin_dy + 0.000291929 *begin_x*begin_y*begin_dx + -0.34074 *lens_ipow(begin_dx, 2)*begin_dy + -0.0162684 *begin_y*lens_ipow(begin_lambda, 2) + 2.75947e-06 *lens_ipow(begin_x, 2)*begin_y + -0.479595 *begin_dy*lens_ipow(begin_lambda, 2) + 2.44328e-06 *lens_ipow(begin_y, 3) + 0.000129116 *lens_ipow(begin_x, 2)*begin_dy + -0.34933 *lens_ipow(begin_dy, 3) + 0.00791285 *begin_y*lens_ipow(begin_lambda, 3) + 1.52912e-07 *lens_ipow(begin_y, 3)*begin_lambda + 2.94526e-07 *lens_ipow(begin_y, 4)*begin_dy + 0.175291 *begin_dy*lens_ipow(begin_lambda, 4) + 2.26139e-09 *lens_ipow(begin_y, 5) + 9.16483e-06 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 8.18133e-08 *lens_ipow(begin_x, 3)*begin_y*begin_dx*begin_lambda + 1.72534e-09 *lens_ipow(begin_x, 4)*begin_y*lens_ipow(begin_lambda, 2) + 1.67264e-06 *begin_x*lens_ipow(begin_y, 3)*begin_dx*lens_ipow(begin_dy, 2) + 0.216246 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 4) + 1.07269e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy*lens_ipow(begin_lambda, 3) + 5.89982e-12 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 5)*begin_lambda;
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 62.6941  + 16.2221 *begin_lambda + 0.517575 *begin_y*begin_dy + 0.0160318 *lens_ipow(begin_x, 2) + 1.21311 *begin_x*begin_dx + 0.00673083 *lens_ipow(begin_y, 2) + -22.3745 *lens_ipow(begin_lambda, 2) + 10.8466 *lens_ipow(begin_lambda, 3) + 1.10113e-05 *lens_ipow(begin_x, 4) + 0.545899 *begin_x*begin_dx*lens_ipow(begin_dy, 2) + 1.9176e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2) + 0.00187757 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 0.00072602 *lens_ipow(begin_x, 3)*begin_dx + 1.46099e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 2)*lens_ipow(begin_lambda, 2)+0.0f;
  dx1_domega0(0, 1) =  + 0.517575 *begin_y*begin_dx + 0.0099905 *begin_x*begin_y + 0.230291 *begin_x*begin_dy + 0.545899 *begin_x*lens_ipow(begin_dx, 2)*begin_dy + 2.37024e-06 *lens_ipow(begin_x, 3)*begin_y + 0.00375515 *lens_ipow(begin_y, 2)*begin_dx*begin_dy+0.0f;
  dx1_domega0(1, 0) =  + 0.236505 *begin_y*begin_dx + 0.518242 *begin_x*begin_dy + 0.0101635 *begin_x*begin_y + -3.43961e-05 *lens_ipow(begin_x, 2)*begin_y*begin_dx + 0.00158003 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx*lens_ipow(begin_dy, 3) + 1.09145e-07 *begin_x*lens_ipow(begin_y, 5)*lens_ipow(begin_dy, 2)*begin_lambda + -707304 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 7)+0.0f;
  dx1_domega0(1, 1) =  + 62.6813  + 16.2795 *begin_lambda + 0.0160989 *lens_ipow(begin_y, 2) + 1.22557 *begin_y*begin_dy + 0.518242 *begin_x*begin_dx + -22.4924 *lens_ipow(begin_lambda, 2) + 0.00684215 *lens_ipow(begin_x, 2) + 10.9306 *lens_ipow(begin_lambda, 3) + 1.568e-05 *lens_ipow(begin_y, 4) + 0.0372647 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 2) + 0.00155246 *lens_ipow(begin_y, 3)*begin_dy + 0.00237004 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 2) + 2.1829e-07 *begin_x*lens_ipow(begin_y, 5)*begin_dx*begin_dy*begin_lambda + -1.23778e+06 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 6)+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
