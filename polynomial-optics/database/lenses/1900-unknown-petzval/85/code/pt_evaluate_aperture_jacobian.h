case unknown__petzval__1900__85mm:
{
const double dx00 =  + 0.729786  + 0.291467 *lambda + 0.0099905 *y*dy + 0.0320635 *x*dx + -0.401112 *lens_ipow(lambda, 2) + 9.19733e-05 *lens_ipow(y, 2) + 0.000257069 *lens_ipow(x, 2) + 0.115145 *lens_ipow(dy, 2) + 0.606557 *lens_ipow(dx, 2) + 0.193867 *lens_ipow(lambda, 3) + 4.40451e-05 *lens_ipow(x, 3)*dx + 0.272949 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 3.83521e-06 *x*lens_ipow(y, 2)*dx + 7.11073e-06 *lens_ipow(x, 2)*y*dy + 0.00108903 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 2.24308e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 2.02456e-06 *lens_ipow(x, 4)*lambda + 3.55657e-10 *lens_ipow(x, 4)*lens_ipow(y, 2) + -3.39596e-06 *lens_ipow(x, 4)*lens_ipow(lambda, 2) + 1.93533e-06 *lens_ipow(x, 4)*lens_ipow(lambda, 3) + 5.84395e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(lambda, 2)+0.0f;
const double dx01 =  + 0.517575 *dx*dy + 0.0099905 *x*dy + 0.000183947 *x*y + 0.0134617 *y*dx + 3.83521e-06 *lens_ipow(x, 2)*y*dx + 2.37024e-06 *lens_ipow(x, 3)*dy + 0.00375515 *y*dx*lens_ipow(dy, 2) + 1.49539e-07 *lens_ipow(x, 3)*y*lambda + 1.42263e-10 *lens_ipow(x, 5)*y + 2.92197e-08 *lens_ipow(x, 4)*y*dx*lens_ipow(lambda, 2)+0.0f;
const double dx02 =  + 62.6941  + 16.2221 *lambda + 0.517575 *y*dy + 0.0160318 *lens_ipow(x, 2) + 1.21311 *x*dx + 0.00673083 *lens_ipow(y, 2) + -22.3745 *lens_ipow(lambda, 2) + 10.8466 *lens_ipow(lambda, 3) + 1.10113e-05 *lens_ipow(x, 4) + 0.545899 *x*dx*lens_ipow(dy, 2) + 1.9176e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.00187757 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00072602 *lens_ipow(x, 3)*dx + 1.46099e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(lambda, 2)+0.0f;
const double dx03 =  + 0.517575 *y*dx + 0.0099905 *x*y + 0.230291 *x*dy + 0.545899 *x*lens_ipow(dx, 2)*dy + 2.37024e-06 *lens_ipow(x, 3)*y + 0.00375515 *lens_ipow(y, 2)*dx*dy+0.0f;
const double dx04 =  + 0.291467 *x + 16.2221 *dx + -0.802224 *x*lambda + -44.7489 *dx*lambda + 32.5399 *dx*lens_ipow(lambda, 2) + 0.581601 *x*lens_ipow(lambda, 2) + 7.47695e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 4.04912e-07 *lens_ipow(x, 5) + -1.35838e-06 *lens_ipow(x, 5)*lambda + 1.1612e-06 *lens_ipow(x, 5)*lens_ipow(lambda, 2) + 2.92197e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lambda+0.0f;
const double dx10 =  + 0.518242 *dx*dy + 0.0101635 *y*dx + 0.000189453 *x*y + 0.0136843 *x*dy + -3.43961e-05 *x*y*lens_ipow(dx, 2) + -4.32484e-08 *x*lens_ipow(y, 3) + 7.89937e-08 *x*lens_ipow(y, 3)*lambda + 0.00158003 *x*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.09145e-07 *lens_ipow(y, 5)*dx*lens_ipow(dy, 2)*lambda + 4.28715e-15 *lens_ipow(x, 3)*lens_ipow(y, 7)+0.0f;
const double dx11 =  + 0.72786  + 0.300939 *lambda + 0.118253 *lens_ipow(dx, 2) + 0.0321978 *y*dy + 0.612785 *lens_ipow(dy, 2) + 0.0101635 *x*dx + -0.416936 *lens_ipow(lambda, 2) + 9.47264e-05 *lens_ipow(x, 2) + 0.000256484 *lens_ipow(y, 2) + 0.202682 *lens_ipow(lambda, 3) + 6.272e-05 *lens_ipow(y, 3)*dy + 0.0248432 *y*lens_ipow(dy, 3) + -1.71981e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -6.48727e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 4.71291e-07 *lens_ipow(y, 4) + 0.00232869 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 5.84664e-08 *lens_ipow(y, 4)*lambda + 1.18491e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 0.00158003 *lens_ipow(x, 2)*y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 5.45725e-07 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 2)*lambda + 7.50251e-15 *lens_ipow(x, 4)*lens_ipow(y, 6)+0.0f;
const double dx12 =  + 0.236505 *y*dx + 0.518242 *x*dy + 0.0101635 *x*y + -3.43961e-05 *lens_ipow(x, 2)*y*dx + 0.00158003 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + 1.09145e-07 *x*lens_ipow(y, 5)*lens_ipow(dy, 2)*lambda + -707304 *lens_ipow(dx, 3)*lens_ipow(dy, 7)+0.0f;
const double dx13 =  + 62.6813  + 16.2795 *lambda + 0.0160989 *lens_ipow(y, 2) + 1.22557 *y*dy + 0.518242 *x*dx + -22.4924 *lens_ipow(lambda, 2) + 0.00684215 *lens_ipow(x, 2) + 10.9306 *lens_ipow(lambda, 3) + 1.568e-05 *lens_ipow(y, 4) + 0.0372647 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.00155246 *lens_ipow(y, 3)*dy + 0.00237004 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + 2.1829e-07 *x*lens_ipow(y, 5)*dx*dy*lambda + -1.23778e+06 *lens_ipow(dx, 4)*lens_ipow(dy, 6)+0.0f;
const double dx14 =  + 16.2795 *dy + 0.300939 *y + -0.833873 *y*lambda + -44.9848 *dy*lambda + 0.608045 *y*lens_ipow(lambda, 2) + 32.7918 *dy*lens_ipow(lambda, 2) + 1.16933e-08 *lens_ipow(y, 5) + 3.94969e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 1.09145e-07 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2)+0.0f;
const double dx20 =  + -0.0104251  + 0.0117586 *lambda + 0.000288643 *y*dy + 0.000770707 *x*dx + -0.016314 *lens_ipow(lambda, 2) + 2.74705e-06 *lens_ipow(y, 2) + 7.12713e-06 *lens_ipow(x, 2) + 0.00157303 *lens_ipow(dy, 2) + 0.0060569 *lens_ipow(dx, 2) + 0.00793855 *lens_ipow(lambda, 3) + 3.69852e-07 *lens_ipow(x, 2)*lambda + 1.42449e-06 *lens_ipow(x, 3)*dx + 0.0177669 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 1.39939e-08 *lens_ipow(x, 4) + 1.19716e-08 *lens_ipow(y, 3)*dy + -1.45157e-05 *x*y*dx*dy + 3.30563e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 2.82684e-09 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + -3.39175e-10 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + 8.75686e-14 *lens_ipow(x, 4)*lens_ipow(y, 4)+0.0f;
const double dx21 =  + 0.00585972 *dx*dy + 0.000288643 *x*dy + 5.4941e-06 *x*y + 0.000258696 *y*dx + 3.59147e-08 *x*lens_ipow(y, 2)*dy + -7.25787e-06 *lens_ipow(x, 2)*dx*dy + 1.88456e-09 *lens_ipow(x, 3)*y*lambda + -2.54382e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*dy + 7.00549e-14 *lens_ipow(x, 5)*lens_ipow(y, 3)+0.0f;
const double dx22 =  + 0.478142  + 0.574288 *lambda + 0.00585972 *y*dy + 0.000385353 *lens_ipow(x, 2) + -1.05964 *lens_ipow(dx, 2) + -0.333277 *lens_ipow(dy, 2) + 0.0121138 *x*dx + 0.000129348 *lens_ipow(y, 2) + -0.793061 *lens_ipow(lambda, 2) + 0.385071 *lens_ipow(lambda, 3) + 3.56121e-07 *lens_ipow(x, 4) + 0.0355339 *x*dx*lens_ipow(dy, 2) + -7.25787e-06 *lens_ipow(x, 2)*y*dy + 2.20375e-05 *lens_ipow(x, 3)*dx + -8.47939e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy+0.0f;
const double dx23 =  + 0.00585972 *y*dx + 0.000288643 *x*y + -0.666553 *dx*dy + 0.00314606 *x*dy + 0.0355339 *x*lens_ipow(dx, 2)*dy + 1.19716e-08 *x*lens_ipow(y, 3) + -7.25787e-06 *lens_ipow(x, 2)*y*dx + -8.47939e-11 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx+0.0f;
const double dx24 =  + 0.0117586 *x + 0.574288 *dx + -0.0326279 *x*lambda + -1.58612 *dx*lambda + 1.15521 *dx*lens_ipow(lambda, 2) + 0.0238156 *x*lens_ipow(lambda, 2) + 1.23284e-07 *lens_ipow(x, 3) + 9.42279e-10 *lens_ipow(x, 3)*lens_ipow(y, 2)+0.0f;
const double dx30 =  + 0.00570326 *dx*dy + 0.000291929 *y*dx + 5.51893e-06 *x*y + 0.000258232 *x*dy + 2.4544e-07 *lens_ipow(x, 2)*y*dx*lambda + 6.90135e-09 *lens_ipow(x, 3)*y*lens_ipow(lambda, 2) + 1.67264e-06 *lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + 2.14538e-07 *x*lens_ipow(y, 2)*dy*lens_ipow(lambda, 3) + 1.17996e-11 *x*lens_ipow(y, 5)*lambda+0.0f;
const double dx31 =  + -0.01042  + 0.0117282 *lambda + 0.00172769 *lens_ipow(dx, 2) + 0.000789949 *y*dy + 0.00646 *lens_ipow(dy, 2) + 0.000291929 *x*dx + -0.0162684 *lens_ipow(lambda, 2) + 2.75947e-06 *lens_ipow(x, 2) + 7.32985e-06 *lens_ipow(y, 2) + 0.00791285 *lens_ipow(lambda, 3) + 4.58735e-07 *lens_ipow(y, 2)*lambda + 1.1781e-06 *lens_ipow(y, 3)*dy + 1.1307e-08 *lens_ipow(y, 4) + 2.74945e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 8.18133e-08 *lens_ipow(x, 3)*dx*lambda + 1.72534e-09 *lens_ipow(x, 4)*lens_ipow(lambda, 2) + 5.01793e-06 *x*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + 0.216246 *lens_ipow(dx, 2)*lens_ipow(dy, 4) + 2.14538e-07 *lens_ipow(x, 2)*y*dy*lens_ipow(lambda, 3) + 2.94991e-11 *lens_ipow(x, 2)*lens_ipow(y, 4)*lambda+0.0f;
const double dx32 =  + 0.00345538 *y*dx + 0.00570326 *x*dy + 0.000291929 *x*y + -0.68148 *dx*dy + 8.18133e-08 *lens_ipow(x, 3)*y*lambda + 1.67264e-06 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 0.432491 *y*dx*lens_ipow(dy, 4)+0.0f;
const double dx33 =  + 0.49303  + 0.462063 *lambda + 0.000394975 *lens_ipow(y, 2) + 0.01292 *y*dy + 0.00570326 *x*dx + -0.34074 *lens_ipow(dx, 2) + -0.479595 *lens_ipow(lambda, 2) + 0.000129116 *lens_ipow(x, 2) + -1.04799 *lens_ipow(dy, 2) + 2.94526e-07 *lens_ipow(y, 4) + 0.175291 *lens_ipow(lambda, 4) + 1.83297e-05 *lens_ipow(y, 3)*dy + 3.34529e-06 *x*lens_ipow(y, 3)*dx*dy + 0.864983 *y*lens_ipow(dx, 2)*lens_ipow(dy, 3) + 1.07269e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(lambda, 3)+0.0f;
const double dx34 =  + 0.462063 *dy + 0.0117282 *y + -0.0325368 *y*lambda + -0.95919 *dy*lambda + 0.0237386 *y*lens_ipow(lambda, 2) + 1.52912e-07 *lens_ipow(y, 3) + 0.701165 *dy*lens_ipow(lambda, 3) + 8.18133e-08 *lens_ipow(x, 3)*y*dx + 3.45068e-09 *lens_ipow(x, 4)*y*lambda + 3.21807e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy*lens_ipow(lambda, 2) + 5.89982e-12 *lens_ipow(x, 2)*lens_ipow(y, 5)+0.0f;
const double dx40 =  + 1.92944e-06 *x + -2.22385e-05 *x*y*dy + -1.03574e-05 *lens_ipow(y, 2)*dx + -4.82627e-07 *x*lens_ipow(y, 2) + -0.000561519 *x*lens_ipow(dx, 2) + -3.27867e-05 *lens_ipow(x, 2)*dx + -4.74637e-07 *lens_ipow(x, 3) + -0.000379394 *y*dx*dy + -0.000185549 *x*lens_ipow(dy, 2) + 3.67894e-08 *x*lens_ipow(y, 2)*lambda + -3.08739e-12 *lens_ipow(x, 5)*lens_ipow(y, 2) + -1.70302e-10 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -2.58086e-10 *lens_ipow(y, 6)*dx*lens_ipow(dy, 2) + -1.55863e-15 *x*lens_ipow(y, 8) + -2.07158e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2) + -7.15937e-15 *lens_ipow(x, 5)*lens_ipow(y, 4)+0.0f;
const double dx41 =  + -0.000160773 *y*lens_ipow(dx, 2) + -1.11192e-05 *lens_ipow(x, 2)*dy + -2.07148e-05 *x*y*dx + -4.82627e-07 *lens_ipow(x, 2)*y + -4.01954e-07 *lens_ipow(y, 3) + -0.000540588 *y*lens_ipow(dy, 2) + -0.000379394 *x*dx*dy + -3.11754e-05 *lens_ipow(y, 2)*dy + 3.67894e-08 *lens_ipow(x, 2)*y*lambda + -3.66145e-10 *lens_ipow(y, 5) + -1.02913e-12 *lens_ipow(x, 6)*y + -4.86284e-11 *lens_ipow(y, 6)*dy + -6.81206e-11 *lens_ipow(x, 5)*y*dx + -1.54851e-09 *x*lens_ipow(y, 5)*dx*lens_ipow(dy, 2) + -6.23454e-15 *lens_ipow(x, 2)*lens_ipow(y, 7) + -8.28631e-10 *lens_ipow(x, 5)*y*dx*lens_ipow(dy, 2) + -4.77292e-15 *lens_ipow(x, 6)*lens_ipow(y, 3)+0.0f;
const double dx42 =  + -0.000160773 *lens_ipow(y, 2)*dx + -1.03574e-05 *x*lens_ipow(y, 2) + -0.000561519 *lens_ipow(x, 2)*dx + -1.09289e-05 *lens_ipow(x, 3) + -0.000379394 *x*y*dy + -3.40603e-11 *lens_ipow(x, 5)*lens_ipow(y, 2) + -2.58086e-10 *x*lens_ipow(y, 6)*lens_ipow(dy, 2) + -4.14316e-10 *lens_ipow(x, 5)*lens_ipow(y, 2)*lens_ipow(dy, 2) + -5023.68 *lens_ipow(dx, 3)*lens_ipow(dy, 6)*lambda+0.0f;
const double dx43 =  + -1.11192e-05 *lens_ipow(x, 2)*y + -0.000540588 *lens_ipow(y, 2)*dy + -0.000379394 *x*y*dx + -0.000185549 *lens_ipow(x, 2)*dy + -1.03918e-05 *lens_ipow(y, 3) + -6.94691e-12 *lens_ipow(y, 7) + -5.16171e-10 *x*lens_ipow(y, 6)*dx*dy + -8.28631e-10 *lens_ipow(x, 5)*lens_ipow(y, 2)*dx*dy + -7535.53 *lens_ipow(dx, 4)*lens_ipow(dy, 5)*lambda+0.0f;
const double dx44 =  + 0.621122  + -2.59282 *lambda + 3.81449 *lens_ipow(lambda, 2) + -1.93228 *lens_ipow(lambda, 3) + 1.83947e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1255.92 *lens_ipow(dx, 4)*lens_ipow(dy, 6)+0.0f;
} break;
