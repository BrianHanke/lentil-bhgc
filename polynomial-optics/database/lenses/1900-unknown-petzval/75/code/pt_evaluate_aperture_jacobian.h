case unknown__petzval__1900__75mm:
{
const double dx00 =  + 0.726822  + 0.30756 *lambda + -0.429532 *lens_ipow(lambda, 2) + 0.117692 *lens_ipow(dy, 2) + 0.609379 *lens_ipow(dx, 2) + 0.0115469 *y*dy + 0.000119884 *lens_ipow(y, 2) + 0.0363944 *x*dx + 0.000318229 *lens_ipow(x, 2) + 0.210059 *lens_ipow(lambda, 3) + 4.25346e-06 *lens_ipow(y, 2)*lambda + 2.05492e-05 *lens_ipow(x, 2)*lambda + 2.69021e-06 *x*lens_ipow(y, 2)*dx + 0.00154689 *lens_ipow(x, 2)*lens_ipow(dx, 2) + 6.83052e-05 *lens_ipow(x, 3)*dx + 7.07069e-07 *lens_ipow(x, 4) + -1.66696e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 7.01251e-14 *lens_ipow(y, 8) + 0.000272747 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -2.00484e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy*lambda + 3.57518e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*lambda+0.0f;
const double dx01 =  + 0.519052 *dx*dy + 0.0155026 *y*dx + 0.0115469 *x*dy + 0.000239768 *x*y + 8.50692e-06 *x*y*lambda + 2.69021e-06 *lens_ipow(x, 2)*y*dx + -6.66786e-07 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 5.61001e-13 *x*lens_ipow(y, 7) + 0.000181831 *lens_ipow(x, 3)*y*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -1.50363e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*dy*lambda + 2.86014e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*lambda+0.0f;
const double dx02 =  + 55.2914  + 14.4587 *lambda + -20.0206 *lens_ipow(lambda, 2) + 0.519052 *y*dy + 0.0077513 *lens_ipow(y, 2) + 1.21876 *x*dx + 0.0181972 *lens_ipow(x, 2) + 9.748 *lens_ipow(lambda, 3) + 1.34511e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 0.00103126 *lens_ipow(x, 3)*dx + 1.70763e-05 *lens_ipow(x, 4) + 396.885 *lens_ipow(dx, 6)*lambda + 0.000181831 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(dy, 2)*lambda + -5.01211e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy*lambda+0.0f;
const double dx03 =  + 0.519052 *y*dx + 0.235384 *x*dy + 0.0115469 *x*y + -3.33393e-07 *x*lens_ipow(y, 4)*dy + 0.000181831 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*dy*lambda + -5.01211e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*lambda+0.0f;
const double dx04 =  + 14.4587 *dx + 0.30756 *x + -40.0412 *dx*lambda + -0.859063 *x*lambda + 29.244 *dx*lens_ipow(lambda, 2) + 0.630178 *x*lens_ipow(lambda, 2) + 4.25346e-06 *x*lens_ipow(y, 2) + 6.84974e-06 *lens_ipow(x, 3) + 56.6978 *lens_ipow(dx, 7) + 9.09157e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2) + -5.01211e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy + 7.15036e-12 *lens_ipow(x, 5)*lens_ipow(y, 4)+0.0f;
const double dx10 =  + 0.519284 *dx*dy + 0.0118472 *y*dx + 0.0155306 *x*dy + 0.000244748 *x*y + -0.000645421 *y*dx*lambda + 2.29092e-06 *x*lens_ipow(y, 2)*dy + -0.000133072 *x*y*lens_ipow(dx, 2)*lambda + 4.06256e-06 *lens_ipow(y, 3)*dx*lens_ipow(lambda, 4) + 0.00031733 *x*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -2.54475e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx*dy*lens_ipow(lambda, 2) + 4.82503e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*lens_ipow(lambda, 2)+0.0f;
const double dx11 =  + 0.728022  + 0.301612 *lambda + -0.420164 *lens_ipow(lambda, 2) + 0.615288 *lens_ipow(dy, 2) + 0.118286 *lens_ipow(dx, 2) + 0.0366264 *y*dy + 0.000319781 *lens_ipow(y, 2) + 0.0118472 *x*dx + 0.000122374 *lens_ipow(x, 2) + 0.20509 *lens_ipow(lambda, 3) + 2.38689e-05 *lens_ipow(y, 2)*lambda + -0.000645421 *x*dx*lambda + 0.00149068 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 6.67631e-05 *lens_ipow(y, 3)*dy + 6.94437e-07 *lens_ipow(y, 4) + 2.29092e-06 *lens_ipow(x, 2)*y*dy + -6.6536e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + 1.21877e-05 *x*lens_ipow(y, 2)*dx*lens_ipow(lambda, 4) + 0.000475996 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -3.393e-07 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy*lens_ipow(lambda, 2) + 6.03129e-11 *lens_ipow(x, 4)*lens_ipow(y, 4)*lens_ipow(lambda, 2)+0.0f;
const double dx12 =  + 0.236573 *y*dx + 0.519284 *x*dy + 0.0118472 *x*y + -0.000645421 *x*y*lambda + -0.000133072 *lens_ipow(x, 2)*y*dx*lambda + 4.06256e-06 *x*lens_ipow(y, 3)*lens_ipow(lambda, 4) + 0.00031733 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -8.4825e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*dy*lens_ipow(lambda, 2)+0.0f;
const double dx13 =  + 55.3114  + 14.3735 *lambda + -19.9065 *lens_ipow(lambda, 2) + 1.23058 *y*dy + 0.0183132 *lens_ipow(y, 2) + 0.519284 *x*dx + 0.00776532 *lens_ipow(x, 2) + 9.69447 *lens_ipow(lambda, 3) + 0.000993784 *lens_ipow(y, 3)*dy + 1.66908e-05 *lens_ipow(y, 4) + 1.14546e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + 30.9567 *lens_ipow(dy, 4)*lambda + 0.00031733 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -8.4825e-08 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*lens_ipow(lambda, 2)+0.0f;
const double dx14 =  + 14.3735 *dy + 0.301612 *y + -39.8129 *dy*lambda + -0.840328 *y*lambda + 29.0834 *dy*lens_ipow(lambda, 2) + 0.615269 *y*lens_ipow(lambda, 2) + 7.9563e-06 *lens_ipow(y, 3) + -0.000645421 *x*y*dx + 6.19134 *lens_ipow(dy, 5) + -6.6536e-05 *lens_ipow(x, 2)*y*lens_ipow(dx, 2) + 1.62502e-05 *x*lens_ipow(y, 3)*dx*lens_ipow(lambda, 3) + 0.00031733 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -1.6965e-07 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy*lambda + 2.41252e-11 *lens_ipow(x, 4)*lens_ipow(y, 5)*lambda+0.0f;
const double dx20 =  + -0.0118337  + 0.0134708 *lambda + -0.0187778 *lens_ipow(lambda, 2) + 0.00183706 *lens_ipow(dy, 2) + 0.00703379 *lens_ipow(dx, 2) + 0.000373922 *y*dy + 3.81262e-06 *lens_ipow(y, 2) + 0.00101661 *x*dx + 1.07103e-05 *lens_ipow(x, 2) + 0.00916155 *lens_ipow(lambda, 3) + 2.73447e-07 *lens_ipow(y, 2)*lambda + -3.61844e-05 *x*dx*lambda + 0.0185665 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -2.70739e-05 *x*y*dx*dy + 5.66189e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + 8.06605e-05 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lambda + 4.03466e-06 *lens_ipow(x, 3)*dx*lambda + 4.58237e-08 *lens_ipow(x, 4)*lambda + 1.19986e-14 *lens_ipow(x, 2)*lens_ipow(y, 6)+0.0f;
const double dx21 =  + 0.00696187 *dx*dy + 0.000333764 *y*dx + 0.000373922 *x*dy + 7.62525e-06 *x*y + 5.46894e-07 *x*y*lambda + 0.000187062 *y*dx*lens_ipow(dy, 2) + -1.3537e-05 *lens_ipow(x, 2)*dx*dy + 3.77459e-09 *lens_ipow(x, 3)*y + 2.39972e-14 *lens_ipow(x, 3)*lens_ipow(y, 5)+0.0f;
const double dx22 =  + 0.492294  + 0.465775 *lambda + -0.484335 *lens_ipow(lambda, 2) + -0.335116 *lens_ipow(dy, 2) + -1.05691 *lens_ipow(dx, 2) + 0.00696187 *y*dy + 0.000166882 *lens_ipow(y, 2) + 0.0140676 *x*dx + 0.000508306 *lens_ipow(x, 2) + -1.80922e-05 *lens_ipow(x, 2)*lambda + 0.177917 *lens_ipow(lambda, 4) + 9.35308e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 0.0371331 *x*dx*lens_ipow(dy, 2) + -1.3537e-05 *lens_ipow(x, 2)*y*dy + 5.37736e-05 *lens_ipow(x, 3)*dx*lambda + 1.00866e-06 *lens_ipow(x, 4)*lambda+0.0f;
const double dx23 =  + -0.670232 *dx*dy + 0.00696187 *y*dx + 0.00367412 *x*dy + 0.000373922 *x*y + 0.000187062 *lens_ipow(y, 2)*dx*dy + 0.0371331 *x*lens_ipow(dx, 2)*dy + -1.3537e-05 *lens_ipow(x, 2)*y*dx+0.0f;
const double dx24 =  + 0.465775 *dx + 0.0134708 *x + -0.968669 *dx*lambda + -0.0375557 *x*lambda + 0.0274847 *x*lens_ipow(lambda, 2) + 2.73447e-07 *x*lens_ipow(y, 2) + -1.80922e-05 *lens_ipow(x, 2)*dx + 0.711668 *dx*lens_ipow(lambda, 3) + 2.68868e-05 *lens_ipow(x, 3)*lens_ipow(dx, 2) + 1.00866e-06 *lens_ipow(x, 4)*dx + 9.16473e-09 *lens_ipow(x, 5)+0.0f;
const double dx30 =  + 0.00680743 *dx*dy + 0.000364672 *y*dx + 0.00033377 *x*dy + 7.64266e-06 *x*y + -1.55551e-05 *lens_ipow(y, 2)*dx*dy + 4.77911e-09 *x*lens_ipow(y, 3) + 1.76489e-07 *lens_ipow(x, 2)*y*dx + 7.21159e-09 *lens_ipow(x, 3)*y*lambda + -6.7595e-08 *lens_ipow(x, 4)*dx*dy*lens_ipow(lambda, 3)+0.0f;
const double dx31 =  + -0.0118275  + 0.0134369 *lambda + -0.0187176 *lens_ipow(lambda, 2) + 0.00683736 *lens_ipow(dy, 2) + 0.00174594 *lens_ipow(dx, 2) + 0.000982939 *y*dy + 1.00208e-05 *lens_ipow(y, 2) + 0.000364672 *x*dx + 3.82133e-06 *lens_ipow(x, 2) + 0.00913626 *lens_ipow(lambda, 3) + 8.18348e-07 *lens_ipow(y, 2)*lambda + 0.0216985 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 4.95081e-05 *lens_ipow(y, 2)*lens_ipow(dy, 2) + 2.45772e-06 *lens_ipow(y, 3)*dy + 2.79015e-08 *lens_ipow(y, 4) + -3.11103e-05 *x*y*dx*dy + 7.16866e-09 *lens_ipow(x, 2)*lens_ipow(y, 2) + 5.88297e-08 *lens_ipow(x, 3)*dx + 1.8029e-09 *lens_ipow(x, 4)*lambda+0.0f;
const double dx32 =  + -0.664238 *dx*dy + 0.00349188 *y*dx + 0.00680743 *x*dy + 0.000364672 *x*y + 0.043397 *y*dx*lens_ipow(dy, 2) + -1.55551e-05 *x*lens_ipow(y, 2)*dy + 5.88297e-08 *lens_ipow(x, 3)*y + -1.3519e-08 *lens_ipow(x, 5)*dy*lens_ipow(lambda, 3)+0.0f;
const double dx33 =  + 0.492597  + 0.464885 *lambda + -0.483958 *lens_ipow(lambda, 2) + -1.0582 *lens_ipow(dy, 2) + -0.332119 *lens_ipow(dx, 2) + 0.0136747 *y*dy + 0.000491469 *lens_ipow(y, 2) + 0.00680743 *x*dx + 0.000166885 *lens_ipow(x, 2) + 0.178162 *lens_ipow(lambda, 4) + 0.043397 *y*lens_ipow(dx, 2)*dy + 3.30054e-05 *lens_ipow(y, 3)*dy + 6.14429e-07 *lens_ipow(y, 4) + -1.55551e-05 *x*lens_ipow(y, 2)*dx + -1.3519e-08 *lens_ipow(x, 5)*dx*lens_ipow(lambda, 3)+0.0f;
const double dx34 =  + 0.464885 *dy + 0.0134369 *y + -0.967917 *dy*lambda + -0.0374353 *y*lambda + 0.0274088 *y*lens_ipow(lambda, 2) + 2.72783e-07 *lens_ipow(y, 3) + 0.712648 *dy*lens_ipow(lambda, 3) + 1.8029e-09 *lens_ipow(x, 4)*y + -4.0557e-08 *lens_ipow(x, 5)*dx*dy*lens_ipow(lambda, 2)+0.0f;
const double dx40 =  + 3.85283e-06 *x*lambda + -0.000538662 *y*dx*dy + -1.70363e-05 *lens_ipow(y, 2)*dx + -0.000237963 *x*lens_ipow(dy, 2) + -0.000744017 *x*lens_ipow(dx, 2) + -3.37911e-05 *x*y*dy + -8.24063e-07 *x*lens_ipow(y, 2) + -4.59748e-05 *lens_ipow(x, 2)*dx + -7.19943e-07 *lens_ipow(x, 3) + -3.30274e-08 *lens_ipow(x, 4)*dx + -6.9842e-10 *lens_ipow(x, 5) + -3.30286e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx*lens_ipow(dy, 2) + -2.21436e-14 *lens_ipow(x, 3)*lens_ipow(y, 6) + 6.95838e-08 *lens_ipow(x, 4)*y*lens_ipow(dx, 3)*dy + -1.05718e-14 *lens_ipow(x, 7)*lens_ipow(y, 2) + 2.55038e-08 *x*lens_ipow(y, 4)*lens_ipow(dx, 4)*lambda+0.0f;
const double dx41 =  + 4.18542e-06 *y*lambda + -0.000739757 *y*lens_ipow(dy, 2) + -0.000237828 *y*lens_ipow(dx, 2) + -4.75994e-05 *lens_ipow(y, 2)*dy + -7.63702e-07 *lens_ipow(y, 3) + -0.000538662 *x*dx*dy + -3.40726e-05 *x*y*dx + -1.68955e-05 *lens_ipow(x, 2)*dy + -8.24063e-07 *lens_ipow(x, 2)*y + -1.26524e-10 *lens_ipow(y, 6)*dy + -2.51657e-12 *lens_ipow(y, 7) + -4.40381e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*lens_ipow(dy, 2) + -3.32153e-14 *lens_ipow(x, 4)*lens_ipow(y, 5) + 1.39168e-08 *lens_ipow(x, 5)*lens_ipow(dx, 3)*dy + -2.64295e-15 *lens_ipow(x, 8)*y + 5.10075e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 4)*lambda+0.0f;
const double dx42 =  + -0.000237828 *lens_ipow(y, 2)*dx + -0.000538662 *x*y*dy + -1.70363e-05 *x*lens_ipow(y, 2) + -0.000744017 *lens_ipow(x, 2)*dx + -1.53249e-05 *lens_ipow(x, 3) + -6.60548e-09 *lens_ipow(x, 5) + -1.10095e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*lens_ipow(dy, 2) + 4.17503e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 2)*dy + 5.10075e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 3)*lambda+0.0f;
const double dx43 =  + -0.000739757 *lens_ipow(y, 2)*dy + -1.58665e-05 *lens_ipow(y, 3) + -0.000538662 *x*y*dx + -0.000237963 *lens_ipow(x, 2)*dy + -1.68955e-05 *lens_ipow(x, 2)*y + -1.80749e-11 *lens_ipow(y, 7) + -2.2019e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + 1.39168e-08 *lens_ipow(x, 5)*y*lens_ipow(dx, 3)+0.0f;
const double dx44 =  + 0.633879  + -2.66454 *lambda + 3.94623 *lens_ipow(lambda, 2) + 2.09271e-06 *lens_ipow(y, 2) + 1.92642e-06 *lens_ipow(x, 2) + -2.01229 *lens_ipow(lambda, 3) + 1.27519e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dx, 4)+0.0f;
} break;
