case meyer_optik_goerlitz__primoplan__1936__58mm:
{
out[0] =  + 56.2187 *dx + 0.489361 *x + 0.0649287 *x*lambda + 0.0013887 *lens_ipow(x, 3) + 2.43864 *x*lens_ipow(dx, 2) + 1.2327 *y*dx*dy + 1.35248 *x*lens_ipow(dy, 2) + -11.5155 *lens_ipow(dx, 3) + 0.114392 *lens_ipow(x, 2)*dx + 0.00125479 *x*lens_ipow(y, 2) + 0.0751718 *x*y*dy + 0.027654 *lens_ipow(y, 2)*dx + -0.000153648 *lens_ipow(x, 4)*dx + -6.10463e-06 *lens_ipow(x, 3)*lens_ipow(y, 2) + 0.0888141 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -2.1939e-06 *x*lens_ipow(y, 4) + -3.46464e-06 *lens_ipow(x, 5) + -7.37159e-07 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + -1.03995e-06 *lens_ipow(x, 3)*lens_ipow(y, 3)*dy + -5.44404e-07 *lens_ipow(x, 2)*lens_ipow(y, 4)*dx + -0.000154758 *lens_ipow(x, 2)*lens_ipow(y, 3)*lens_ipow(dx, 3)*dy + -6.66224e-11 *lens_ipow(x, 5)*lens_ipow(y, 4) + -1.65109e-09 *lens_ipow(x, 7)*y*dy*lambda + -0.000201733 *lens_ipow(x, 4)*y*dx*lens_ipow(dy, 3)*lambda;
out[1] =  + 0.606993 *y + 56.8264 *dy + 0.774043 *y*lens_ipow(dx, 2) + -10.5362 *lens_ipow(dy, 3) + 1.90683 *y*lens_ipow(dy, 2) + 0.813514 *x*dx*dy + 0.0891075 *lens_ipow(y, 2)*dy + 0.0623186 *x*y*dx + -12.631 *lens_ipow(dx, 2)*dy + 0.0211618 *lens_ipow(x, 2)*dy + 0.000457857 *lens_ipow(y, 3)*lambda + -4.76257e-05 *lens_ipow(y, 4)*dy + 0.00210009 *lens_ipow(y, 3)*lens_ipow(dx, 2) + -7.59623e-05 *lens_ipow(x, 3)*y*dx + 1.1563e-05 *lens_ipow(x, 2)*lens_ipow(y, 3) + -3.14783e-08 *lens_ipow(x, 4)*lens_ipow(y, 3) + 9.7159e-06 *lens_ipow(x, 4)*y*lens_ipow(dy, 2) + -5.0138e-08 *lens_ipow(x, 2)*lens_ipow(y, 5) + -4.35754e-09 *lens_ipow(x, 2)*lens_ipow(y, 6)*dy + -0.000160328 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3) + -3.42443e-09 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx + -4.58209e-09 *lens_ipow(x, 4)*lens_ipow(y, 4)*dy*lambda + -1.48395e-07 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dy, 2)*lambda + -0.000205678 *x*lens_ipow(y, 4)*lens_ipow(dx, 3)*dy*lambda;
out[2] =  + -1.42801 *dx + -0.0315599 *x + -0.03921 *y*dx*dy + -0.0346819 *x*lens_ipow(dy, 2) + -0.708683 *dx*lens_ipow(dy, 2) + -1.50935e-05 *x*lens_ipow(y, 2) + -0.00179976 *x*y*dy + -0.000351971 *lens_ipow(y, 2)*dx + -0.00150909 *lens_ipow(x, 2)*dx*lambda + 1.57547 *lens_ipow(dx, 3)*lambda + -1.65244e-05 *lens_ipow(x, 3)*lambda + 2.69467e-06 *lens_ipow(x, 3)*y*dy + 1.1585e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + 2.11265e-06 *x*lens_ipow(y, 3)*dy + -0.00211411 *x*y*lens_ipow(dx, 2)*dy + 4.64987e-08 *x*lens_ipow(y, 4) + 4.37967e-08 *lens_ipow(x, 5) + 2.32466e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*lambda + -0.00415348 *lens_ipow(y, 2)*dx*lens_ipow(dy, 4) + -7.51236e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 6.59296e-09 *lens_ipow(x, 6)*dx*lambda + -5.89104 *lens_ipow(dx, 5)*lens_ipow(lambda, 4) + 0.00372307 *lens_ipow(x, 2)*y*lens_ipow(dx, 3)*lens_ipow(dy, 3) + -6.43453e-08 *lens_ipow(x, 4)*lens_ipow(y, 2)*lens_ipow(dx, 3);
out[3] =  + -0.031682 *y + -1.42523 *dy + 0.782451 *lens_ipow(dy, 3) + 0.0674778 *x*dx*dy + -0.000834132 *lens_ipow(y, 2)*dy + -0.000272704 *x*y*dx + 2.18853 *lens_ipow(dx, 2)*dy + 0.000473905 *lens_ipow(x, 2)*dy + -6.17318e-06 *lens_ipow(y, 3)*lambda + 2.42317e-08 *lens_ipow(x, 4)*y + 1.15996e-10 *lens_ipow(y, 7) + 2.89187e-10 *lens_ipow(x, 4)*lens_ipow(y, 3) + 1.22287e-08 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx + -3.83289e-06 *lens_ipow(y, 4)*lens_ipow(dy, 3) + 6.66074e-09 *lens_ipow(y, 6)*dy + 3.19905e-10 *lens_ipow(x, 2)*lens_ipow(y, 5) + 1.25152e-08 *lens_ipow(x, 2)*lens_ipow(y, 4)*dy + -1.85928e-07 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lambda + 9.24569e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dy*lambda + 2.97772e-09 *lens_ipow(x, 5)*y*dx*lambda + 8.45591e-07 *x*lens_ipow(y, 4)*dx*lens_ipow(dy, 3) + 1.16858e-11 *x*lens_ipow(y, 7)*dx + -8.92544e-05 *lens_ipow(y, 4)*lens_ipow(dx, 4)*dy*lambda + 2.27798e-06 *lens_ipow(x, 3)*lens_ipow(y, 2)*dx*lens_ipow(dy, 3)*lambda;
out_transmittance =  + 0.565726  + 0.0782943 *lambda + -0.141415 *lens_ipow(dy, 2) + -0.000172461 *lens_ipow(y, 3)*dy + -0.0013932 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.0993797 *y*lens_ipow(dy, 3) + -0.00708878 *lens_ipow(y, 2)*lens_ipow(dy, 2) + -1.3e-06 *lens_ipow(y, 4) + -1.17784e-06 *lens_ipow(x, 4) + -1.35791e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -0.000251987 *x*lens_ipow(y, 2)*dx*lambda + -0.000230636 *lens_ipow(x, 2)*y*dy*lambda + -2.77198 *lens_ipow(dx, 4)*lambda + -0.000264215 *lens_ipow(x, 3)*dx*lambda + -1.92632e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + -0.465596 *x*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -0.0227789 *x*y*dx*dy*lens_ipow(lambda, 2) + -0.0218709 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + -0.280991 *y*lens_ipow(dx, 2)*dy*lens_ipow(lambda, 2) + -0.111773 *lens_ipow(x, 2)*lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -1.45194e-05 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 3) + -3.30824 *x*lens_ipow(dx, 3)*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -0.00422892 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2)*lens_ipow(lambda, 3) + -4.22934e-05 *lens_ipow(x, 4)*lens_ipow(dy, 2)*lens_ipow(lambda, 3);
} break;
