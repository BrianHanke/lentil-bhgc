case nikon__unknown__2014__50mm:
{
out[0] =  + 32.2033 *dx + 0.293892 *x + 8.12711 *dx*lambda + 0.229711 *x*lambda + -5.57645 *dx*lens_ipow(lambda, 2) + -16.0656 *dx*lens_ipow(dy, 2) + -16.2005 *lens_ipow(dx, 3) + -0.0330797 *y*dx*dy + 0.00154237 *lens_ipow(y, 2)*dx + -0.161167 *x*lens_ipow(lambda, 2) + -0.086926 *x*lens_ipow(dy, 2) + -0.136109 *x*lens_ipow(dx, 2) + 0.00134402 *x*y*dy + -0.000128356 *x*lens_ipow(y, 2) + 0.0029124 *lens_ipow(x, 2)*dx + -0.000130615 *lens_ipow(x, 3) + -0.00890124 *lens_ipow(y, 2)*lens_ipow(dx, 3) + -1.57528e-07 *x*lens_ipow(y, 4) + -0.0153847 *lens_ipow(x, 2)*dx*lens_ipow(dy, 2) + -0.00964676 *lens_ipow(x, 2)*lens_ipow(dx, 3) + -5.44193e-07 *lens_ipow(x, 3)*lens_ipow(y, 2) + -1.47617e-07 *lens_ipow(x, 5) + 4.40819e-07 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -2.0766 *y*lens_ipow(dx, 5)*dy + -0.890754 *x*lens_ipow(dx, 6) + -0.0503654 *x*y*lens_ipow(dy, 5) + -32.3674 *y*lens_ipow(dx, 3)*lens_ipow(dy, 5) + -1.45718e-08 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx*dy*lambda;
out[1] =  + 32.2903 *dy + 0.294709 *y + 7.97882 *dy*lambda + 0.22979 *y*lambda + -5.53527 *dy*lens_ipow(lambda, 2) + -16.2714 *lens_ipow(dy, 3) + -16.138 *lens_ipow(dx, 2)*dy + -0.161941 *y*lens_ipow(lambda, 2) + -0.159077 *y*lens_ipow(dy, 2) + -0.0877576 *y*lens_ipow(dx, 2) + 0.00172884 *lens_ipow(y, 2)*dy + -0.000142552 *lens_ipow(y, 3) + -0.0369266 *x*dx*dy + 0.00131549 *x*y*dx + -0.000128886 *lens_ipow(x, 2)*y + 0.00270247 *lens_ipow(x, 2)*dy*lambda + -0.014938 *lens_ipow(y, 2)*lens_ipow(dx, 2)*dy + 0.000301109 *lens_ipow(y, 3)*lens_ipow(dy, 2) + 6.01003e-06 *lens_ipow(y, 4)*dy + -1.06517e-07 *lens_ipow(y, 5) + -5.77526e-07 *lens_ipow(x, 2)*lens_ipow(y, 3) + -1.55789e-07 *lens_ipow(x, 4)*y + -0.0158074 *lens_ipow(x, 2)*lens_ipow(dy, 3)*lambda + 4.97905e-07 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + -1.86604 *x*dx*lens_ipow(dy, 5) + -0.0512776 *x*y*lens_ipow(dx, 5) + -29.8029 *x*lens_ipow(dx, 5)*lens_ipow(dy, 3) + -7.88417e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy;
out[2] =  + 0.320558 *dx + -0.0288941 *x + 0.0114392 *x*lambda + -0.434092 *lens_ipow(dx, 3) + -0.00952141 *y*dx*dy + -0.0082186 *x*lens_ipow(lambda, 2) + -0.0158013 *x*lens_ipow(dx, 2) + 0.00013494 *x*y*dy + -9.63875e-06 *x*lens_ipow(y, 2) + -1.01744e-05 *lens_ipow(x, 3) + -0.65312 *dx*lens_ipow(dy, 2)*lambda + -0.00781614 *x*lens_ipow(dy, 2)*lambda + 0.573542 *lens_ipow(dx, 5) + -5.36473e-09 *x*lens_ipow(y, 4) + 8.05836e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx + -1.28825e-05 *lens_ipow(x, 3)*lens_ipow(dy, 2) + -3.33851e-08 *lens_ipow(x, 3)*lens_ipow(y, 2) + 8.13155e-07 *lens_ipow(x, 4)*dx + 3.79108e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lambda + -0.00131019 *x*y*lens_ipow(dy, 3)*lens_ipow(lambda, 2) + 1.35375e-09 *x*lens_ipow(y, 5)*dy + -0.000970552 *lens_ipow(x, 2)*lens_ipow(dx, 3)*lens_ipow(lambda, 2) + -1.23512e-11 *lens_ipow(x, 7) + -5.07913e-06 *lens_ipow(x, 4)*dx*lens_ipow(dy, 2)*lambda + 1.36753e-12 *lens_ipow(y, 8)*dx + 1.09831e-11 *lens_ipow(x, 5)*lens_ipow(y, 3)*dy + 90.4109 *lens_ipow(dx, 3)*lens_ipow(dy, 4)*lens_ipow(lambda, 4) + -1.95969e-12 *lens_ipow(x, 5)*lens_ipow(y, 4)*lens_ipow(dx, 2);
out[3] =  + 0.333271 *dy + -0.0285845 *y + -0.0201289 *dy*lambda + 0.0109541 *y*lambda + -0.436808 *lens_ipow(dy, 3) + -0.388994 *lens_ipow(dx, 2)*dy + -0.00811443 *y*lens_ipow(lambda, 2) + -0.0157802 *y*lens_ipow(dy, 2) + -0.00559166 *y*lens_ipow(dx, 2) + -1.09425e-05 *lens_ipow(y, 3) + -0.0110991 *x*dx*dy + -5.80753e-05 *lens_ipow(x, 2)*dy + -1.13211e-05 *lens_ipow(x, 2)*y + 0.578718 *lens_ipow(dy, 5) + 7.66242e-07 *lens_ipow(y, 4)*dy + 3.06251e-05 *x*lens_ipow(y, 2)*dx*dy + 8.44574e-07 *x*lens_ipow(y, 3)*dx + 1.29956e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*dy + -1.95765e-08 *lens_ipow(x, 2)*lens_ipow(y, 3) + 8.07287e-07 *lens_ipow(x, 3)*y*dx + 2.43421e-07 *lens_ipow(x, 4)*dy + -0.000625924 *lens_ipow(y, 2)*lens_ipow(dy, 3)*lambda + 3.6953e-08 *lens_ipow(x, 2)*lens_ipow(y, 3)*lambda + 10.355 *lens_ipow(dx, 4)*lens_ipow(dy, 3) + 0.000101796 *lens_ipow(x, 2)*y*lens_ipow(dx, 4) + -8.30478e-14 *lens_ipow(y, 9) + -1.93905e-13 *lens_ipow(x, 4)*lens_ipow(y, 5) + 9.56177e-14 *lens_ipow(y, 9)*lambda;
out_transmittance =  + 3.03094 *lambda + -8.25325 *lens_ipow(lambda, 2) + 11.9439 *lens_ipow(lambda, 3) + -8.95223 *lens_ipow(lambda, 4) + -0.176523 *lens_ipow(dy, 4) + -0.256522 *lens_ipow(dx, 4) + -0.00249363 *y*lens_ipow(dx, 2)*dy + -1.06474e-08 *lens_ipow(y, 4) + -1.19883e-08 *lens_ipow(x, 4) + 2.74203 *lens_ipow(lambda, 5) + -0.20506 *lens_ipow(dy, 4)*lambda + -2.20561 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lambda + -0.00583286 *y*lens_ipow(dy, 3)*lambda + -0.00654966 *x*dx*lens_ipow(dy, 2)*lambda + -0.243311 *lens_ipow(dy, 6) + 1.64145 *lens_ipow(dx, 2)*lens_ipow(dy, 2)*lens_ipow(lambda, 2) + -0.000181229 *lens_ipow(y, 2)*lens_ipow(dx, 4) + -2.41113e-07 *lens_ipow(y, 4)*lens_ipow(dy, 2) + -0.0242755 *x*lens_ipow(dx, 5) + -2.98684e-07 *x*lens_ipow(y, 3)*dx*dy + 1.80486e-05 *lens_ipow(x, 2)*y*lens_ipow(dy, 3) + -3.77491e-07 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.23842e-05 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -0.793454 *lens_ipow(dx, 6)*lambda + -0.00209772 *lens_ipow(x, 2)*lens_ipow(dx, 6) + -3.66507e-13 *lens_ipow(x, 4)*lens_ipow(y, 4) + 4.88789e-11 *lens_ipow(x, 7)*lens_ipow(dx, 3) + 0.172747 *x*y*lens_ipow(dx, 3)*lens_ipow(dy, 5)*lambda;
} break;
