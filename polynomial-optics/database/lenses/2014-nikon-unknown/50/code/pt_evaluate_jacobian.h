case nikon__unknown__2014__50mm:
{
const double dx00 =  + -0.212613  + 0.404138 *lambda + -0.305967 *lens_ipow(lambda, 2) + 0.301279 *lens_ipow(dy, 2) + 0.308243 *lens_ipow(dx, 2) + 0.00854471 *y*dy + -0.000385561 *lens_ipow(y, 2) + 0.0276408 *x*dx + -0.00116185 *lens_ipow(x, 2) + 0.00018661 *lens_ipow(y, 2)*lambda + 0.000507191 *lens_ipow(x, 2)*lambda + -3.82252e-07 *lens_ipow(y, 4) + -0.0255783 *x*dx*lens_ipow(dy, 2) + -2.2532e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -1.66811e-06 *lens_ipow(x, 4) + -7.34033e-06 *x*lens_ipow(y, 3)*dx*dy + 4.99591e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*lens_ipow(dy, 4) + 3.72725e-12 *lens_ipow(x, 7)*lens_ipow(y, 2)*dx+0.0f;
const double dx01 =  + 0.00911811 *y*dx + 0.00854471 *x*dy + -0.000771121 *x*y + 0.000373221 *x*y*lambda + -1.52901e-06 *x*lens_ipow(y, 3) + -1.50214e-06 *lens_ipow(x, 3)*y + 5.16646e-08 *lens_ipow(y, 5)*dx + -1.10105e-05 *lens_ipow(x, 2)*lens_ipow(y, 2)*dx*dy + 3.33061e-05 *lens_ipow(x, 3)*y*lens_ipow(dy, 4) + 9.31812e-13 *lens_ipow(x, 8)*y*dx+0.0f;
const double dx02 =  + 49.7012  + 1.27307 *lambda + -23.1829 *lens_ipow(dy, 2) + -67.8288 *lens_ipow(dx, 2) + 0.00455905 *lens_ipow(y, 2) + 0.616486 *x*dx + 0.0138204 *lens_ipow(x, 2) + 17.7985 *lens_ipow(dy, 4) + 111.846 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + -0.0127892 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 167.634 *lens_ipow(dx, 4)*lambda + 8.61077e-09 *lens_ipow(y, 6) + -3.67016e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dy + -48.0218 *lens_ipow(dx, 2)*lens_ipow(lambda, 5) + 4.65906e-13 *lens_ipow(x, 8)*lens_ipow(y, 2)+0.0f;
const double dx03 =  + -46.3658 *dx*dy + 0.602558 *x*dy + 0.00854471 *x*y + 71.1941 *dx*lens_ipow(dy, 3) + 74.5639 *lens_ipow(dx, 3)*dy + -0.0255783 *lens_ipow(x, 2)*dx*dy + -3.67016e-06 *lens_ipow(x, 2)*lens_ipow(y, 3)*dx + 6.66121e-05 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dy, 3)+0.0f;
const double dx04 =  + 1.27307 *dx + 0.404138 *x + -0.611934 *x*lambda + 0.00018661 *x*lens_ipow(y, 2) + 0.000169064 *lens_ipow(x, 3) + 33.5268 *lens_ipow(dx, 5) + -80.0364 *lens_ipow(dx, 3)*lens_ipow(lambda, 4)+0.0f;
const double dx10 =  + 0.00879727 *y*dx + 0.00923442 *x*dy + -0.000621484 *x*y + -2.74357e-06 *x*lens_ipow(y, 3) + -1.26886e-06 *lens_ipow(x, 3)*y + 2.8763e-06 *x*lens_ipow(y, 3)*lambda + 0.00566678 *x*y*lens_ipow(dx, 4) + -4.79538e-06 *lens_ipow(x, 4)*dx*dy + 1.18601e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dy + 1.3724e-09 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx*lens_ipow(lambda, 2)+0.0f;
const double dx11 =  + -0.22674  + 0.432303 *lambda + -0.307127 *lens_ipow(lambda, 2) + 0.310584 *lens_ipow(dy, 2) + 0.354842 *lens_ipow(dx, 2) + 0.0272258 *y*dy + -0.000876173 *lens_ipow(y, 2) + 0.00879727 *x*dx + -0.000310742 *lens_ipow(x, 2) + -0.12958 *lens_ipow(dx, 2)*lambda + -1.94984e-06 *lens_ipow(y, 4) + -4.11536e-06 *lens_ipow(x, 2)*lens_ipow(y, 2) + -3.17215e-07 *lens_ipow(x, 4) + 4.31445e-06 *lens_ipow(x, 2)*lens_ipow(y, 2)*lambda + 0.00283339 *lens_ipow(x, 2)*lens_ipow(dx, 4) + 1.71934e-05 *lens_ipow(y, 4)*lens_ipow(dx, 2)*lens_ipow(lambda, 2) + 1.18601e-09 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy + 2.28734e-09 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*lens_ipow(lambda, 2)+0.0f;
const double dx12 =  + -48.1068 *dx*dy + 0.709684 *y*dx + 0.00879727 *x*y + -0.259161 *y*dx*lambda + 74.8235 *dx*lens_ipow(dy, 3) + 77.869 *lens_ipow(dx, 3)*dy + 0.0113336 *lens_ipow(x, 2)*y*lens_ipow(dx, 3) + -9.59077e-07 *lens_ipow(x, 5)*dy + 6.87735e-06 *lens_ipow(y, 5)*dx*lens_ipow(lambda, 2) + 4.57468e-10 *lens_ipow(x, 3)*lens_ipow(y, 5)*lens_ipow(lambda, 2)+0.0f;
const double dx13 =  + 49.7454  + 1.24723 *lambda + -68.6581 *lens_ipow(dy, 2) + -24.0534 *lens_ipow(dx, 2) + 0.621168 *y*dy + 0.0136129 *lens_ipow(y, 2) + 0.00461721 *lens_ipow(x, 2) + 112.235 *lens_ipow(dx, 2)*lens_ipow(dy, 2) + 19.4673 *lens_ipow(dx, 4) + 176.064 *lens_ipow(dy, 4)*lambda + -9.59077e-07 *lens_ipow(x, 5)*dx + -45.9395 *lens_ipow(dy, 2)*lens_ipow(lambda, 5) + 2.96504e-10 *lens_ipow(x, 4)*lens_ipow(y, 4)+0.0f;
const double dx14 =  + 1.24723 *dy + 0.432303 *y + -0.614254 *y*lambda + -0.12958 *y*lens_ipow(dx, 2) + 35.2127 *lens_ipow(dy, 5) + 1.43815e-06 *lens_ipow(x, 2)*lens_ipow(y, 3) + -76.5659 *lens_ipow(dy, 3)*lens_ipow(lambda, 4) + 6.87735e-06 *lens_ipow(y, 5)*lens_ipow(dx, 2)*lambda + 9.14936e-10 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx*lambda+0.0f;
const double dx20 =  + -0.0184691  + -0.000470267 *lambda + -0.00307331 *lens_ipow(dy, 2) + 0.00188426 *lens_ipow(dx, 2) + -0.000110734 *y*dy + 7.42494e-06 *lens_ipow(y, 2) + -0.00015468 *x*dx + 5.18597e-05 *lens_ipow(x, 2) + -3.03205e-06 *lens_ipow(y, 2)*lambda + -0.000126059 *lens_ipow(x, 2)*lambda + -0.0004597 *y*lens_ipow(dx, 2)*dy + 0.000108866 *lens_ipow(x, 2)*lens_ipow(lambda, 2) + 2.51653e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 1.57957e-08 *lens_ipow(y, 4)*lens_ipow(dy, 2) + 9.60291e-12 *lens_ipow(y, 6) + 4.29238e-06 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + 1.29943e-07 *lens_ipow(x, 4)*lens_ipow(lambda, 2) + -2.17801e-09 *lens_ipow(x, 5)*dx + 1.9946e-09 *lens_ipow(x, 3)*lens_ipow(y, 3)*dx*dy + 2.33833e-13 *lens_ipow(x, 4)*lens_ipow(y, 4) + -3.10591e-07 *lens_ipow(x, 4)*lens_ipow(lambda, 5)+0.0f;
const double dx21 =  + 0.001826 *dx*dy + 7.37931e-05 *y*dx + -0.000110734 *x*dy + 1.48499e-05 *x*y + -6.06411e-06 *x*y*lambda + 0.00054099 *y*lens_ipow(dx, 3) + -0.0004597 *x*lens_ipow(dx, 2)*dy + 1.67769e-08 *lens_ipow(x, 3)*y + 6.31827e-08 *x*lens_ipow(y, 3)*lens_ipow(dy, 2) + 5.76175e-11 *x*lens_ipow(y, 5) + 1.49595e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx*dy + 1.87066e-13 *lens_ipow(x, 5)*lens_ipow(y, 3)+0.0f;
const double dx22 =  + -0.656388  + 0.00461947 *lambda + 0.231104 *lens_ipow(dy, 2) + 1.03284 *lens_ipow(dx, 2) + 0.001826 *y*dy + 3.68965e-05 *lens_ipow(y, 2) + 0.00376852 *x*dx + -7.734e-05 *lens_ipow(x, 2) + 0.000811484 *lens_ipow(y, 2)*lens_ipow(dx, 2) + -0.000919401 *x*y*dx*dy + 1.0731e-06 *lens_ipow(x, 4)*lens_ipow(dy, 2) + -3.63002e-10 *lens_ipow(x, 6) + 4.9865e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dy+0.0f;
const double dx23 =  + 0.462208 *dx*dy + 0.001826 *y*dx + -0.00614662 *x*dy + -0.000110734 *x*y + -0.0004597 *x*y*lens_ipow(dx, 2) + 3.15914e-08 *x*lens_ipow(y, 4)*dy + 2.14619e-06 *lens_ipow(x, 4)*dx*dy + 4.9865e-10 *lens_ipow(x, 4)*lens_ipow(y, 3)*dx+0.0f;
const double dx24 =  + 0.00461947 *dx + -0.000470267 *x + -3.03205e-06 *x*lens_ipow(y, 2) + -4.20198e-05 *lens_ipow(x, 3) + 7.2577e-05 *lens_ipow(x, 3)*lambda + 5.19773e-08 *lens_ipow(x, 5)*lambda + -3.10591e-07 *lens_ipow(x, 5)*lens_ipow(lambda, 4)+0.0f;
const double dx30 =  + 0.00869214 *dx*dy + -0.000119345 *y*dx + 1.38958e-05 *x*y + 5.37913e-05 *x*dy*lambda + -6.07262e-06 *x*y*lambda + 1.22595e-05 *lens_ipow(y, 2)*dx*dy + 0.000597518 *x*lens_ipow(dy, 3) + 0.000424361 *x*lens_ipow(dx, 2)*dy + 1.85363e-08 *x*lens_ipow(y, 3) + 2.29302e-08 *lens_ipow(x, 3)*y + -4.49828e-06 *lens_ipow(x, 2)*y*dx*lens_ipow(dy, 2) + -9.10327e-12 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx + -6.47899e-14 *lens_ipow(x, 3)*lens_ipow(y, 6)*dy+0.0f;
const double dx31 =  + -0.0175214  + -0.00406715 *lambda + 0.00328034 *lens_ipow(lambda, 2) + 0.00213872 *lens_ipow(dy, 2) + -0.00313275 *lens_ipow(dx, 2) + -0.000149675 *y*dy + 2.1112e-05 *lens_ipow(y, 2) + -0.000119345 *x*dx + 6.94791e-06 *lens_ipow(x, 2) + -8.55283e-06 *lens_ipow(y, 2)*lambda + -3.03631e-06 *lens_ipow(x, 2)*lambda + 0.000597995 *y*lens_ipow(dx, 2)*dy + 2.25856e-08 *lens_ipow(y, 4) + 2.45189e-05 *x*y*dx*dy + 2.78044e-08 *lens_ipow(x, 2)*lens_ipow(y, 2) + 5.73254e-09 *lens_ipow(x, 4) + -8.47775e-08 *lens_ipow(y, 4)*lens_ipow(dx, 2) + -1.56325e-09 *lens_ipow(y, 5)*dy + -1.49943e-06 *lens_ipow(x, 3)*dx*lens_ipow(dy, 2) + -1.51721e-11 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx + -9.71848e-14 *lens_ipow(x, 4)*lens_ipow(y, 5)*dy+0.0f;
const double dx32 =  + 0.9145 *dx*dy + -0.0062655 *y*dx + 0.00869214 *x*dy + -0.000119345 *x*y + 0.000597995 *lens_ipow(y, 2)*dx*dy + 1.22595e-05 *x*lens_ipow(y, 2)*dy + 0.000424361 *lens_ipow(x, 2)*dx*dy + -3.3911e-08 *lens_ipow(y, 5)*dx + -1.49943e-06 *lens_ipow(x, 3)*y*lens_ipow(dy, 2) + -3.03442e-12 *lens_ipow(x, 3)*lens_ipow(y, 5)+0.0f;
const double dx33 =  + -0.653251  + 1.02542 *lens_ipow(dy, 2) + 0.45725 *lens_ipow(dx, 2) + 0.00427745 *y*dy + -7.48374e-05 *lens_ipow(y, 2) + 0.00869214 *x*dx + 2.68957e-05 *lens_ipow(x, 2)*lambda + 0.000298998 *lens_ipow(y, 2)*lens_ipow(dx, 2) + 1.22595e-05 *x*lens_ipow(y, 2)*dx + 0.000896277 *lens_ipow(x, 2)*lens_ipow(dy, 2) + 0.000212181 *lens_ipow(x, 2)*lens_ipow(dx, 2) + -2.60542e-10 *lens_ipow(y, 6) + -2.99885e-06 *lens_ipow(x, 3)*y*dx*dy + -1.61975e-14 *lens_ipow(x, 4)*lens_ipow(y, 6)+0.0f;
const double dx34 =  + -0.00406715 *y + 0.00656068 *y*lambda + -2.85094e-06 *lens_ipow(y, 3) + 2.68957e-05 *lens_ipow(x, 2)*dy + -3.03631e-06 *lens_ipow(x, 2)*y+0.0f;
const double dx40 =  + -0.00485668 *dx*lens_ipow(dy, 2) + -0.00420614 *lens_ipow(dx, 3) + -0.00023441 *y*dx*dy + -0.000144546 *x*lens_ipow(dy, 2) + -0.000311358 *x*lens_ipow(dx, 2) + -5.46795e-08 *x*lens_ipow(y, 2) + -6.36884e-08 *lens_ipow(x, 3) + -0.000686115 *dx*lens_ipow(lambda, 3) + -1.24874e-08 *lens_ipow(x, 3)*lens_ipow(y, 2)*lens_ipow(dx, 2) + 9.34402e-11 *lens_ipow(x, 6)*dx + 1.04666e-09 *x*lens_ipow(y, 5)*lens_ipow(dy, 3) + -6.53913e-11 *lens_ipow(x, 2)*lens_ipow(y, 5)*dx*dy + -1.0914e-14 *lens_ipow(x, 3)*lens_ipow(y, 6) + 5.04779e-13 *lens_ipow(x, 7)*y*dy+0.0f;
const double dx41 =  + -0.00547656 *lens_ipow(dx, 2)*dy + -0.000425897 *y*lens_ipow(dy, 2) + -0.000146773 *y*lens_ipow(dx, 2) + -0.00023441 *x*dx*dy + -5.46795e-08 *lens_ipow(x, 2)*y + -0.0110142 *lens_ipow(dy, 3)*lambda + -4.07292e-10 *lens_ipow(y, 5) + -6.24369e-09 *lens_ipow(x, 4)*y*lens_ipow(dx, 2) + 2.61665e-09 *lens_ipow(x, 2)*lens_ipow(y, 4)*lens_ipow(dy, 3) + -1.08986e-10 *lens_ipow(x, 3)*lens_ipow(y, 4)*dx*dy + -1.6371e-14 *lens_ipow(x, 4)*lens_ipow(y, 5) + 6.30973e-14 *lens_ipow(x, 8)*dy+0.0f;
const double dx42 =  + -0.978958 *dx*lens_ipow(dy, 2) + -0.52285 *lens_ipow(dx, 3) + -0.0109531 *y*dx*dy + -0.000146773 *lens_ipow(y, 2)*dx + -0.00485668 *x*lens_ipow(dy, 2) + -0.0126184 *x*lens_ipow(dx, 2) + -0.00023441 *x*y*dy + -0.000311358 *lens_ipow(x, 2)*dx + -0.693783 *lens_ipow(dx, 3)*lambda + -0.000686115 *x*lens_ipow(lambda, 3) + -6.24369e-09 *lens_ipow(x, 4)*lens_ipow(y, 2)*dx + 1.33486e-11 *lens_ipow(x, 7) + -2.17971e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dy+0.0f;
const double dx43 =  + -0.978958 *lens_ipow(dx, 2)*dy + -0.00547656 *y*lens_ipow(dx, 2) + -0.000425897 *lens_ipow(y, 2)*dy + -0.00971336 *x*dx*dy + -0.00023441 *x*y*dx + -0.000144546 *lens_ipow(x, 2)*dy + -1.23204 *lens_ipow(dy, 3)*lambda + -0.0330427 *y*lens_ipow(dy, 2)*lambda + -2.18929 *lens_ipow(dy, 5) + 1.56999e-09 *lens_ipow(x, 2)*lens_ipow(y, 5)*lens_ipow(dy, 2) + -2.17971e-11 *lens_ipow(x, 3)*lens_ipow(y, 5)*dx + 6.30973e-14 *lens_ipow(x, 8)*y+0.0f;
const double dx44 =  + 1.14868  + -2.90804 *lambda + 4.17668 *lens_ipow(lambda, 3) + -0.308009 *lens_ipow(dy, 4) + -0.173446 *lens_ipow(dx, 4) + -0.0110142 *y*lens_ipow(dy, 3) + -0.00205834 *x*dx*lens_ipow(lambda, 2) + -2.9888 *lens_ipow(lambda, 5)+0.0f;
} break;
