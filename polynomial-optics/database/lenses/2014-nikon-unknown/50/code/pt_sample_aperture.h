case nikon__unknown__2014__50mm:
{
double pred_x;
double pred_y;
double pred_dx;
double pred_dy;
double sqr_err = FLT_MAX;
for(int k=0;k<5&&sqr_err > 1e-4f;k++)
{
  const double begin_x = x + dist * dx;
  const double begin_y = y + dist * dy;
  const double begin_dx = dx;
  const double begin_dy = dy;
  const double begin_lambda = lambda;
  pred_x =  + 32.2033 *begin_dx + 0.293892 *begin_x + 8.12711 *begin_dx*begin_lambda + 0.229711 *begin_x*begin_lambda + -5.57645 *begin_dx*lens_ipow(begin_lambda, 2) + -16.0656 *begin_dx*lens_ipow(begin_dy, 2) + -16.2005 *lens_ipow(begin_dx, 3) + -0.0330797 *begin_y*begin_dx*begin_dy + 0.00154237 *lens_ipow(begin_y, 2)*begin_dx + -0.161167 *begin_x*lens_ipow(begin_lambda, 2) + -0.086926 *begin_x*lens_ipow(begin_dy, 2) + -0.136109 *begin_x*lens_ipow(begin_dx, 2) + 0.00134402 *begin_x*begin_y*begin_dy + -0.000128356 *begin_x*lens_ipow(begin_y, 2) + 0.0029124 *lens_ipow(begin_x, 2)*begin_dx + -0.000130615 *lens_ipow(begin_x, 3) + -0.00890124 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 3) + -1.57528e-07 *begin_x*lens_ipow(begin_y, 4) + -0.0153847 *lens_ipow(begin_x, 2)*begin_dx*lens_ipow(begin_dy, 2) + -0.00964676 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3) + -5.44193e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + -1.47617e-07 *lens_ipow(begin_x, 5) + 4.40819e-07 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_lambda + -2.0766 *begin_y*lens_ipow(begin_dx, 5)*begin_dy + -0.890754 *begin_x*lens_ipow(begin_dx, 6) + -0.0503654 *begin_x*begin_y*lens_ipow(begin_dy, 5) + -32.3674 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 5) + -1.45718e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_dy*begin_lambda;
  pred_y =  + 32.2903 *begin_dy + 0.294709 *begin_y + 7.97882 *begin_dy*begin_lambda + 0.22979 *begin_y*begin_lambda + -5.53527 *begin_dy*lens_ipow(begin_lambda, 2) + -16.2714 *lens_ipow(begin_dy, 3) + -16.138 *lens_ipow(begin_dx, 2)*begin_dy + -0.161941 *begin_y*lens_ipow(begin_lambda, 2) + -0.159077 *begin_y*lens_ipow(begin_dy, 2) + -0.0877576 *begin_y*lens_ipow(begin_dx, 2) + 0.00172884 *lens_ipow(begin_y, 2)*begin_dy + -0.000142552 *lens_ipow(begin_y, 3) + -0.0369266 *begin_x*begin_dx*begin_dy + 0.00131549 *begin_x*begin_y*begin_dx + -0.000128886 *lens_ipow(begin_x, 2)*begin_y + 0.00270247 *lens_ipow(begin_x, 2)*begin_dy*begin_lambda + -0.014938 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2)*begin_dy + 0.000301109 *lens_ipow(begin_y, 3)*lens_ipow(begin_dy, 2) + 6.01003e-06 *lens_ipow(begin_y, 4)*begin_dy + -1.06517e-07 *lens_ipow(begin_y, 5) + -5.77526e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + -1.55789e-07 *lens_ipow(begin_x, 4)*begin_y + -0.0158074 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 4.97905e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_lambda + -1.86604 *begin_x*begin_dx*lens_ipow(begin_dy, 5) + -0.0512776 *begin_x*begin_y*lens_ipow(begin_dx, 5) + -29.8029 *begin_x*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 3) + -7.88417e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx*begin_dy;
  pred_dx =  + 0.320558 *begin_dx + -0.0288941 *begin_x + 0.0114392 *begin_x*begin_lambda + -0.434092 *lens_ipow(begin_dx, 3) + -0.00952141 *begin_y*begin_dx*begin_dy + -0.0082186 *begin_x*lens_ipow(begin_lambda, 2) + -0.0158013 *begin_x*lens_ipow(begin_dx, 2) + 0.00013494 *begin_x*begin_y*begin_dy + -9.63875e-06 *begin_x*lens_ipow(begin_y, 2) + -1.01744e-05 *lens_ipow(begin_x, 3) + -0.65312 *begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + -0.00781614 *begin_x*lens_ipow(begin_dy, 2)*begin_lambda + 0.573542 *lens_ipow(begin_dx, 5) + -5.36473e-09 *begin_x*lens_ipow(begin_y, 4) + 8.05836e-07 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dx + -1.28825e-05 *lens_ipow(begin_x, 3)*lens_ipow(begin_dy, 2) + -3.33851e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2) + 8.13155e-07 *lens_ipow(begin_x, 4)*begin_dx + 3.79108e-08 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 2)*begin_lambda + -0.00131019 *begin_x*begin_y*lens_ipow(begin_dy, 3)*lens_ipow(begin_lambda, 2) + 1.35375e-09 *begin_x*lens_ipow(begin_y, 5)*begin_dy + -0.000970552 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 3)*lens_ipow(begin_lambda, 2) + -1.23512e-11 *lens_ipow(begin_x, 7) + -5.07913e-06 *lens_ipow(begin_x, 4)*begin_dx*lens_ipow(begin_dy, 2)*begin_lambda + 1.36753e-12 *lens_ipow(begin_y, 8)*begin_dx + 1.09831e-11 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 3)*begin_dy + 90.4109 *lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4)*lens_ipow(begin_lambda, 4) + -1.95969e-12 *lens_ipow(begin_x, 5)*lens_ipow(begin_y, 4)*lens_ipow(begin_dx, 2);
  pred_dy =  + 0.333271 *begin_dy + -0.0285845 *begin_y + -0.0201289 *begin_dy*begin_lambda + 0.0109541 *begin_y*begin_lambda + -0.436808 *lens_ipow(begin_dy, 3) + -0.388994 *lens_ipow(begin_dx, 2)*begin_dy + -0.00811443 *begin_y*lens_ipow(begin_lambda, 2) + -0.0157802 *begin_y*lens_ipow(begin_dy, 2) + -0.00559166 *begin_y*lens_ipow(begin_dx, 2) + -1.09425e-05 *lens_ipow(begin_y, 3) + -0.0110991 *begin_x*begin_dx*begin_dy + -5.80753e-05 *lens_ipow(begin_x, 2)*begin_dy + -1.13211e-05 *lens_ipow(begin_x, 2)*begin_y + 0.578718 *lens_ipow(begin_dy, 5) + 7.66242e-07 *lens_ipow(begin_y, 4)*begin_dy + 3.06251e-05 *begin_x*lens_ipow(begin_y, 2)*begin_dx*begin_dy + 8.44574e-07 *begin_x*lens_ipow(begin_y, 3)*begin_dx + 1.29956e-06 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 2)*begin_dy + -1.95765e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3) + 8.07287e-07 *lens_ipow(begin_x, 3)*begin_y*begin_dx + 2.43421e-07 *lens_ipow(begin_x, 4)*begin_dy + -0.000625924 *lens_ipow(begin_y, 2)*lens_ipow(begin_dy, 3)*begin_lambda + 3.6953e-08 *lens_ipow(begin_x, 2)*lens_ipow(begin_y, 3)*begin_lambda + 10.355 *lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + 0.000101796 *lens_ipow(begin_x, 2)*begin_y*lens_ipow(begin_dx, 4) + -8.30478e-14 *lens_ipow(begin_y, 9) + -1.93905e-13 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 5) + 9.56177e-14 *lens_ipow(begin_y, 9)*begin_lambda;
  Eigen::Matrix2d dx1_domega0;
  dx1_domega0(0, 0) =  + 32.2033  + 8.12711 *begin_lambda + -5.57645 *lens_ipow(begin_lambda, 2) + -16.0656 *lens_ipow(begin_dy, 2) + -48.6016 *lens_ipow(begin_dx, 2) + -0.0330797 *begin_y*begin_dy + 0.00154237 *lens_ipow(begin_y, 2) + -0.272218 *begin_x*begin_dx + 0.0029124 *lens_ipow(begin_x, 2) + -0.0267037 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + -0.0153847 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2) + -0.0289403 *lens_ipow(begin_x, 2)*lens_ipow(begin_dx, 2) + -10.383 *begin_y*lens_ipow(begin_dx, 4)*begin_dy + -5.34452 *begin_x*lens_ipow(begin_dx, 5) + -97.1022 *begin_y*lens_ipow(begin_dx, 2)*lens_ipow(begin_dy, 5) + -1.45718e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dy*begin_lambda+0.0f;
  dx1_domega0(0, 1) =  + -32.1313 *begin_dx*begin_dy + -0.0330797 *begin_y*begin_dx + -0.173852 *begin_x*begin_dy + 0.00134402 *begin_x*begin_y + -0.0307695 *lens_ipow(begin_x, 2)*begin_dx*begin_dy + -2.0766 *begin_y*lens_ipow(begin_dx, 5) + -0.251827 *begin_x*begin_y*lens_ipow(begin_dy, 4) + -161.837 *begin_y*lens_ipow(begin_dx, 3)*lens_ipow(begin_dy, 4) + -1.45718e-08 *lens_ipow(begin_x, 4)*lens_ipow(begin_y, 3)*begin_dx*begin_lambda+0.0f;
  dx1_domega0(1, 0) =  + -32.2759 *begin_dx*begin_dy + -0.175515 *begin_y*begin_dx + -0.0369266 *begin_x*begin_dy + 0.00131549 *begin_x*begin_y + -0.0298761 *lens_ipow(begin_y, 2)*begin_dx*begin_dy + -1.86604 *begin_x*lens_ipow(begin_dy, 5) + -0.256388 *begin_x*begin_y*lens_ipow(begin_dx, 4) + -149.014 *begin_x*lens_ipow(begin_dx, 4)*lens_ipow(begin_dy, 3) + -7.88417e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dy+0.0f;
  dx1_domega0(1, 1) =  + 32.2903  + 7.97882 *begin_lambda + -5.53527 *lens_ipow(begin_lambda, 2) + -48.8143 *lens_ipow(begin_dy, 2) + -16.138 *lens_ipow(begin_dx, 2) + -0.318155 *begin_y*begin_dy + 0.00172884 *lens_ipow(begin_y, 2) + -0.0369266 *begin_x*begin_dx + 0.00270247 *lens_ipow(begin_x, 2)*begin_lambda + -0.014938 *lens_ipow(begin_y, 2)*lens_ipow(begin_dx, 2) + 0.000602218 *lens_ipow(begin_y, 3)*begin_dy + 6.01003e-06 *lens_ipow(begin_y, 4) + -0.0474223 *lens_ipow(begin_x, 2)*lens_ipow(begin_dy, 2)*begin_lambda + -9.33022 *begin_x*begin_dx*lens_ipow(begin_dy, 4) + -89.4087 *begin_x*lens_ipow(begin_dx, 5)*lens_ipow(begin_dy, 2) + -7.88417e-09 *lens_ipow(begin_x, 3)*lens_ipow(begin_y, 4)*begin_dx+0.0f;
  Eigen::Matrix2d invJ;
  const double invdet = 1.0f/(dx1_domega0(0, 0)*dx1_domega0(1, 1) - dx1_domega0(0, 1)*dx1_domega0(1, 0));
  invJ(0, 0) =  dx1_domega0(1, 1)*invdet;
  invJ(1, 1) =  dx1_domega0(0, 0)*invdet;
  invJ(0, 1) = -dx1_domega0(0, 1)*invdet;
  invJ(1, 0) = -dx1_domega0(1, 0)*invdet;
  const Eigen::Vector2d dx1(out_x - pred_x, out_y - pred_y);
  for(int i=0;i<2;i++)
  {
    dx += invJ(0, i)*dx1(i);
    dy += invJ(1, i)*dx1(i);
  }
  sqr_err = dx1(0)*dx1(0) + dx1(1)*dx1(1);
}
out_dx = pred_dx;
out_dy = pred_dy;
} break;
